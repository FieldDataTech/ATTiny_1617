
FDT_TINY_2021.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  00002032  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ec6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d8  00009ec6  00001ec6  00001f5a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000105  00803800  00803800  00002032  2**0
                  ALLOC
  4 .comment      00000060  00000000  00000000  00002032  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002094  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000330  00000000  00000000  000020d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000835c  00000000  00000000  00002408  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000022d8  00000000  00000000  0000a764  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002eba  00000000  00000000  0000ca3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000824  00000000  00000000  0000f8f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000022ea  00000000  00000000  0001011c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000443e  00000000  00000000  00012406  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000308  00000000  00000000  00016844  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__ctors_end>
       4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
       8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
       c:	0c 94 0e 0e 	jmp	0x1c1c	; 0x1c1c <__vector_3>
      10:	0c 94 df 0d 	jmp	0x1bbe	; 0x1bbe <__vector_4>
      14:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__vector_5>
      18:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      1c:	0c 94 54 0e 	jmp	0x1ca8	; 0x1ca8 <__vector_7>
      20:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      24:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      28:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      2c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      30:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      34:	0c 94 49 0d 	jmp	0x1a92	; 0x1a92 <__vector_13>
      38:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      3c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      40:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      44:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      48:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      4c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      50:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      54:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      58:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      5c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      60:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      64:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      68:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      6c:	0c 94 a5 0d 	jmp	0x1b4a	; 0x1b4a <__vector_27>
      70:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      74:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      78:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      7c:	d1 00       	.word	0x00d1	; ????
      7e:	d4 00       	.word	0x00d4	; ????
      80:	d7 00       	.word	0x00d7	; ????
      82:	da 00       	.word	0x00da	; ????
      84:	dd 00       	.word	0x00dd	; ????
      86:	e0 00       	.word	0x00e0	; ????
      88:	e3 00       	.word	0x00e3	; ????
      8a:	e6 00       	.word	0x00e6	; ????
      8c:	e9 00       	.word	0x00e9	; ????
      8e:	0f 01       	movw	r0, r30
      90:	f8 00       	.word	0x00f8	; ????
      92:	fa 00       	.word	0x00fa	; ????
      94:	fc 00       	.word	0x00fc	; ????
      96:	fe 00       	.word	0x00fe	; ????
      98:	00 01       	movw	r0, r0
      9a:	02 01       	movw	r0, r4
      9c:	04 01       	movw	r0, r8
      9e:	07 01       	movw	r0, r14
      a0:	0a 01       	movw	r0, r20
      a2:	1c 01       	movw	r2, r24
      a4:	1f 01       	movw	r2, r30
      a6:	22 01       	movw	r4, r4
      a8:	25 01       	movw	r4, r10
      aa:	28 01       	movw	r4, r16
      ac:	2b 01       	movw	r4, r22
      ae:	2e 01       	movw	r4, r28
      b0:	31 01       	movw	r6, r2
      b2:	34 01       	movw	r6, r8
      b4:	49 01       	movw	r8, r18
      b6:	49 01       	movw	r8, r18
      b8:	49 01       	movw	r8, r18
      ba:	49 01       	movw	r8, r18
      bc:	49 01       	movw	r8, r18
      be:	49 01       	movw	r8, r18
      c0:	49 01       	movw	r8, r18
      c2:	37 01       	movw	r6, r14
      c4:	3a 01       	movw	r6, r20
      c6:	3d 01       	movw	r6, r26
      c8:	40 01       	movw	r8, r0
      ca:	43 01       	movw	r8, r6
      cc:	46 01       	movw	r8, r12
      ce:	81 01       	movw	r16, r2
      d0:	55 01       	movw	r10, r10
      d2:	57 01       	movw	r10, r14
      d4:	59 01       	movw	r10, r18
      d6:	5b 01       	movw	r10, r22
      d8:	5e 01       	movw	r10, r28
      da:	61 01       	movw	r12, r2
      dc:	64 01       	movw	r12, r8
      de:	67 01       	movw	r12, r14
      e0:	6a 01       	movw	r12, r20
      e2:	7c 01       	movw	r14, r24
      e4:	7c 01       	movw	r14, r24
      e6:	7c 01       	movw	r14, r24
      e8:	7c 01       	movw	r14, r24
      ea:	7c 01       	movw	r14, r24
      ec:	7c 01       	movw	r14, r24
      ee:	7c 01       	movw	r14, r24
      f0:	7f 01       	movw	r14, r30
      f2:	6d 01       	movw	r12, r26
      f4:	70 01       	movw	r14, r0
      f6:	73 01       	movw	r14, r6
      f8:	76 01       	movw	r14, r12
      fa:	79 01       	movw	r14, r18
      fc:	e0 0c       	add	r14, r0
      fe:	e4 0c       	add	r14, r4
     100:	ef 0c       	add	r14, r15
     102:	f7 0c       	add	r15, r7
     104:	02 0d       	add	r16, r2
     106:	0d 0d       	add	r16, r13
     108:	18 0d       	add	r17, r8
     10a:	23 0d       	add	r18, r3

0000010c <__ctors_end>:
     10c:	11 24       	eor	r1, r1
     10e:	1f be       	out	0x3f, r1	; 63
     110:	cf ef       	ldi	r28, 0xFF	; 255
     112:	cd bf       	out	0x3d, r28	; 61
     114:	df e3       	ldi	r29, 0x3F	; 63
     116:	de bf       	out	0x3e, r29	; 62

00000118 <__do_clear_bss>:
     118:	29 e3       	ldi	r18, 0x39	; 57
     11a:	a0 e0       	ldi	r26, 0x00	; 0
     11c:	b8 e3       	ldi	r27, 0x38	; 56
     11e:	01 c0       	rjmp	.+2      	; 0x122 <.do_clear_bss_start>

00000120 <.do_clear_bss_loop>:
     120:	1d 92       	st	X+, r1

00000122 <.do_clear_bss_start>:
     122:	a5 30       	cpi	r26, 0x05	; 5
     124:	b2 07       	cpc	r27, r18
     126:	e1 f7       	brne	.-8      	; 0x120 <.do_clear_bss_loop>
     128:	0e 94 49 0c 	call	0x1892	; 0x1892 <main>
     12c:	0c 94 61 0f 	jmp	0x1ec2	; 0x1ec2 <_exit>

00000130 <__bad_interrupt>:
     130:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000134 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
**/
void atmel_start_init(void)
{
	system_init();
     134:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <system_init>
     138:	08 95       	ret

0000013a <searchRcvBuffuBlox>:
	if((pirrA & 0x01)==0)PORTA_set_pin_level(2, 0); else PORTA_set_pin_level(2, 1);
	pirSUdelay();
	setPIRbitENT(pirrB);
	setPIRbitENT(pirrC);
	setPIRbitENT(pirrD);
}
     13a:	29 e0       	ldi	r18, 0x09	; 9
     13c:	38 e3       	ldi	r19, 0x38	; 56
     13e:	20 93 03 39 	sts	0x3903, r18	; 0x803903 <GPSSearchPtr>
     142:	30 93 04 39 	sts	0x3904, r19	; 0x803904 <GPSSearchPtr+0x1>
     146:	a0 91 ff 38 	lds	r26, 0x38FF	; 0x8038ff <p_GPSrcvData>
     14a:	b0 91 00 39 	lds	r27, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
     14e:	15 97       	sbiw	r26, 0x05	; 5
     150:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     154:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     158:	9f 01       	movw	r18, r30
     15a:	2f 5f       	subi	r18, 0xFF	; 255
     15c:	3f 4f       	sbci	r19, 0xFF	; 255
     15e:	20 93 03 39 	sts	0x3903, r18	; 0x803903 <GPSSearchPtr>
     162:	30 93 04 39 	sts	0x3904, r19	; 0x803904 <GPSSearchPtr+0x1>
     166:	91 81       	ldd	r25, Z+1	; 0x01
     168:	98 13       	cpse	r25, r24
     16a:	06 c0       	rjmp	.+12     	; 0x178 <searchRcvBuffuBlox+0x3e>
     16c:	92 81       	ldd	r25, Z+2	; 0x02
     16e:	96 13       	cpse	r25, r22
     170:	03 c0       	rjmp	.+6      	; 0x178 <searchRcvBuffuBlox+0x3e>
     172:	93 81       	ldd	r25, Z+3	; 0x03
     174:	94 17       	cp	r25, r20
     176:	31 f0       	breq	.+12     	; 0x184 <searchRcvBuffuBlox+0x4a>
     178:	2a 17       	cp	r18, r26
     17a:	3b 07       	cpc	r19, r27
     17c:	48 f3       	brcs	.-46     	; 0x150 <searchRcvBuffuBlox+0x16>
     17e:	8a e9       	ldi	r24, 0x9A	; 154
     180:	92 e0       	ldi	r25, 0x02	; 2
     182:	08 95       	ret
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	08 95       	ret

0000018a <asciiToHex>:
     18a:	48 2f       	mov	r20, r24
     18c:	86 2f       	mov	r24, r22
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	fc 01       	movw	r30, r24
     192:	f1 97       	sbiw	r30, 0x31	; 49
     194:	e9 30       	cpi	r30, 0x09	; 9
     196:	f1 05       	cpc	r31, r1
     198:	f8 f4       	brcc	.+62     	; 0x1d8 <asciiToHex+0x4e>
     19a:	e2 5c       	subi	r30, 0xC2	; 194
     19c:	ff 4f       	sbci	r31, 0xFF	; 255
     19e:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__tablejump2__>
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	1a c0       	rjmp	.+52     	; 0x1dc <asciiToHex+0x52>
     1a8:	82 e0       	ldi	r24, 0x02	; 2
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	17 c0       	rjmp	.+46     	; 0x1dc <asciiToHex+0x52>
     1ae:	83 e0       	ldi	r24, 0x03	; 3
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	14 c0       	rjmp	.+40     	; 0x1dc <asciiToHex+0x52>
     1b4:	84 e0       	ldi	r24, 0x04	; 4
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	11 c0       	rjmp	.+34     	; 0x1dc <asciiToHex+0x52>
     1ba:	85 e0       	ldi	r24, 0x05	; 5
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	0e c0       	rjmp	.+28     	; 0x1dc <asciiToHex+0x52>
     1c0:	86 e0       	ldi	r24, 0x06	; 6
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	0b c0       	rjmp	.+22     	; 0x1dc <asciiToHex+0x52>
     1c6:	87 e0       	ldi	r24, 0x07	; 7
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	08 c0       	rjmp	.+16     	; 0x1dc <asciiToHex+0x52>
     1cc:	88 e0       	ldi	r24, 0x08	; 8
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	05 c0       	rjmp	.+10     	; 0x1dc <asciiToHex+0x52>
     1d2:	89 e0       	ldi	r24, 0x09	; 9
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	02 c0       	rjmp	.+4      	; 0x1dc <asciiToHex+0x52>
     1d8:	80 e0       	ldi	r24, 0x00	; 0
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	50 e0       	ldi	r21, 0x00	; 0
     1de:	fa 01       	movw	r30, r20
     1e0:	f0 97       	sbiw	r30, 0x30	; 48
     1e2:	ea 30       	cpi	r30, 0x0A	; 10
     1e4:	f1 05       	cpc	r31, r1
     1e6:	c8 f4       	brcc	.+50     	; 0x21a <asciiToHex+0x90>
     1e8:	e9 5b       	subi	r30, 0xB9	; 185
     1ea:	ff 4f       	sbci	r31, 0xFF	; 255
     1ec:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__tablejump2__>
     1f0:	0a 96       	adiw	r24, 0x0a	; 10
     1f2:	08 95       	ret
     1f4:	44 96       	adiw	r24, 0x14	; 20
     1f6:	08 95       	ret
     1f8:	4e 96       	adiw	r24, 0x1e	; 30
     1fa:	08 95       	ret
     1fc:	88 96       	adiw	r24, 0x28	; 40
     1fe:	08 95       	ret
     200:	c2 96       	adiw	r24, 0x32	; 50
     202:	08 95       	ret
     204:	cc 96       	adiw	r24, 0x3c	; 60
     206:	08 95       	ret
     208:	8a 5b       	subi	r24, 0xBA	; 186
     20a:	9f 4f       	sbci	r25, 0xFF	; 255
     20c:	08 95       	ret
     20e:	80 5b       	subi	r24, 0xB0	; 176
     210:	9f 4f       	sbci	r25, 0xFF	; 255
     212:	08 95       	ret
     214:	86 5a       	subi	r24, 0xA6	; 166
     216:	9f 4f       	sbci	r25, 0xFF	; 255
     218:	08 95       	ret
     21a:	80 e0       	ldi	r24, 0x00	; 0
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	08 95       	ret

00000220 <asciiHexToHex>:
     220:	48 2f       	mov	r20, r24
     222:	86 2f       	mov	r24, r22
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	fc 01       	movw	r30, r24
     228:	f1 97       	sbiw	r30, 0x31	; 49
     22a:	e6 31       	cpi	r30, 0x16	; 22
     22c:	f1 05       	cpc	r31, r1
     22e:	88 f5       	brcc	.+98     	; 0x292 <asciiHexToHex+0x72>
     230:	ef 5a       	subi	r30, 0xAF	; 175
     232:	ff 4f       	sbci	r31, 0xFF	; 255
     234:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__tablejump2__>
     238:	81 e0       	ldi	r24, 0x01	; 1
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	2c c0       	rjmp	.+88     	; 0x296 <asciiHexToHex+0x76>
     23e:	82 e0       	ldi	r24, 0x02	; 2
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	29 c0       	rjmp	.+82     	; 0x296 <asciiHexToHex+0x76>
     244:	83 e0       	ldi	r24, 0x03	; 3
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	26 c0       	rjmp	.+76     	; 0x296 <asciiHexToHex+0x76>
     24a:	84 e0       	ldi	r24, 0x04	; 4
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	23 c0       	rjmp	.+70     	; 0x296 <asciiHexToHex+0x76>
     250:	85 e0       	ldi	r24, 0x05	; 5
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	20 c0       	rjmp	.+64     	; 0x296 <asciiHexToHex+0x76>
     256:	86 e0       	ldi	r24, 0x06	; 6
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	1d c0       	rjmp	.+58     	; 0x296 <asciiHexToHex+0x76>
     25c:	87 e0       	ldi	r24, 0x07	; 7
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	1a c0       	rjmp	.+52     	; 0x296 <asciiHexToHex+0x76>
     262:	88 e0       	ldi	r24, 0x08	; 8
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	17 c0       	rjmp	.+46     	; 0x296 <asciiHexToHex+0x76>
     268:	89 e0       	ldi	r24, 0x09	; 9
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	14 c0       	rjmp	.+40     	; 0x296 <asciiHexToHex+0x76>
     26e:	8a e0       	ldi	r24, 0x0A	; 10
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	11 c0       	rjmp	.+34     	; 0x296 <asciiHexToHex+0x76>
     274:	8b e0       	ldi	r24, 0x0B	; 11
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	0e c0       	rjmp	.+28     	; 0x296 <asciiHexToHex+0x76>
     27a:	8c e0       	ldi	r24, 0x0C	; 12
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	0b c0       	rjmp	.+22     	; 0x296 <asciiHexToHex+0x76>
     280:	8d e0       	ldi	r24, 0x0D	; 13
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	08 c0       	rjmp	.+16     	; 0x296 <asciiHexToHex+0x76>
     286:	8e e0       	ldi	r24, 0x0E	; 14
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	05 c0       	rjmp	.+10     	; 0x296 <asciiHexToHex+0x76>
     28c:	8f e0       	ldi	r24, 0x0F	; 15
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	02 c0       	rjmp	.+4      	; 0x296 <asciiHexToHex+0x76>
     292:	80 e0       	ldi	r24, 0x00	; 0
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	50 e0       	ldi	r21, 0x00	; 0
     298:	fa 01       	movw	r30, r20
     29a:	f0 97       	sbiw	r30, 0x30	; 48
     29c:	e7 31       	cpi	r30, 0x17	; 23
     29e:	f1 05       	cpc	r31, r1
     2a0:	58 f5       	brcc	.+86     	; 0x2f8 <asciiHexToHex+0xd8>
     2a2:	e9 59       	subi	r30, 0x99	; 153
     2a4:	ff 4f       	sbci	r31, 0xFF	; 255
     2a6:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__tablejump2__>
     2aa:	40 96       	adiw	r24, 0x10	; 16
     2ac:	08 95       	ret
     2ae:	80 96       	adiw	r24, 0x20	; 32
     2b0:	08 95       	ret
     2b2:	c0 96       	adiw	r24, 0x30	; 48
     2b4:	08 95       	ret
     2b6:	80 5c       	subi	r24, 0xC0	; 192
     2b8:	9f 4f       	sbci	r25, 0xFF	; 255
     2ba:	08 95       	ret
     2bc:	80 5b       	subi	r24, 0xB0	; 176
     2be:	9f 4f       	sbci	r25, 0xFF	; 255
     2c0:	08 95       	ret
     2c2:	80 5a       	subi	r24, 0xA0	; 160
     2c4:	9f 4f       	sbci	r25, 0xFF	; 255
     2c6:	08 95       	ret
     2c8:	80 59       	subi	r24, 0x90	; 144
     2ca:	9f 4f       	sbci	r25, 0xFF	; 255
     2cc:	08 95       	ret
     2ce:	80 58       	subi	r24, 0x80	; 128
     2d0:	9f 4f       	sbci	r25, 0xFF	; 255
     2d2:	08 95       	ret
     2d4:	80 57       	subi	r24, 0x70	; 112
     2d6:	9f 4f       	sbci	r25, 0xFF	; 255
     2d8:	08 95       	ret
     2da:	80 eb       	ldi	r24, 0xB0	; 176
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	08 95       	ret
     2e0:	80 ec       	ldi	r24, 0xC0	; 192
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	08 95       	ret
     2e6:	80 ed       	ldi	r24, 0xD0	; 208
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	08 95       	ret
     2ec:	80 ee       	ldi	r24, 0xE0	; 224
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	08 95       	ret
     2f2:	80 ef       	ldi	r24, 0xF0	; 240
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	08 95       	ret
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	08 95       	ret
     2fe:	80 ea       	ldi	r24, 0xA0	; 160
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	08 95       	ret

00000304 <delay_ms>:
     304:	ab 01       	movw	r20, r22
     306:	bc 01       	movw	r22, r24
     308:	41 15       	cp	r20, r1
     30a:	51 05       	cpc	r21, r1
     30c:	61 05       	cpc	r22, r1
     30e:	71 05       	cpc	r23, r1
     310:	61 f4       	brne	.+24     	; 0x32a <delay_ms+0x26>
     312:	08 95       	ret
     314:	00 00       	nop
     316:	01 96       	adiw	r24, 0x01	; 1
     318:	8a 39       	cpi	r24, 0x9A	; 154
     31a:	21 e0       	ldi	r18, 0x01	; 1
     31c:	92 07       	cpc	r25, r18
     31e:	d1 f7       	brne	.-12     	; 0x314 <delay_ms+0x10>
     320:	41 50       	subi	r20, 0x01	; 1
     322:	51 09       	sbc	r21, r1
     324:	61 09       	sbc	r22, r1
     326:	71 09       	sbc	r23, r1
     328:	19 f0       	breq	.+6      	; 0x330 <delay_ms+0x2c>
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	f2 cf       	rjmp	.-28     	; 0x314 <delay_ms+0x10>
     330:	08 95       	ret

00000332 <userBlink>:
     332:	cf 93       	push	r28
     334:	c8 2f       	mov	r28, r24
     336:	21 9a       	sbi	0x04, 1	; 4
     338:	88 23       	and	r24, r24
     33a:	81 f0       	breq	.+32     	; 0x35c <userBlink+0x2a>
     33c:	29 98       	cbi	0x05, 1	; 5
     33e:	62 e3       	ldi	r22, 0x32	; 50
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     34a:	29 9a       	sbi	0x05, 1	; 5
     34c:	60 e5       	ldi	r22, 0x50	; 80
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     358:	c1 50       	subi	r28, 0x01	; 1
     35a:	81 f7       	brne	.-32     	; 0x33c <userBlink+0xa>
     35c:	21 98       	cbi	0x04, 1	; 4
     35e:	e1 e3       	ldi	r30, 0x31	; 49
     360:	f4 e0       	ldi	r31, 0x04	; 4
     362:	80 81       	ld	r24, Z
     364:	88 60       	ori	r24, 0x08	; 8
     366:	80 83       	st	Z, r24
     368:	cf 91       	pop	r28
     36a:	08 95       	ret

0000036c <myDelay_hus>:
     36c:	ab 01       	movw	r20, r22
     36e:	bc 01       	movw	r22, r24
     370:	41 15       	cp	r20, r1
     372:	51 05       	cpc	r21, r1
     374:	61 05       	cpc	r22, r1
     376:	71 05       	cpc	r23, r1
     378:	59 f4       	brne	.+22     	; 0x390 <myDelay_hus+0x24>
     37a:	08 95       	ret
     37c:	00 00       	nop
     37e:	01 96       	adiw	r24, 0x01	; 1
     380:	8e 32       	cpi	r24, 0x2E	; 46
     382:	91 05       	cpc	r25, r1
     384:	d9 f7       	brne	.-10     	; 0x37c <myDelay_hus+0x10>
     386:	41 50       	subi	r20, 0x01	; 1
     388:	51 09       	sbc	r21, r1
     38a:	61 09       	sbc	r22, r1
     38c:	71 09       	sbc	r23, r1
     38e:	19 f0       	breq	.+6      	; 0x396 <myDelay_hus+0x2a>
     390:	80 e0       	ldi	r24, 0x00	; 0
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	f3 cf       	rjmp	.-26     	; 0x37c <myDelay_hus+0x10>
     396:	08 95       	ret

00000398 <usart_put_string>:
     398:	66 23       	and	r22, r22
     39a:	71 f0       	breq	.+28     	; 0x3b8 <usart_put_string+0x20>
     39c:	dc 01       	movw	r26, r24
     39e:	9c 01       	movw	r18, r24
     3a0:	26 0f       	add	r18, r22
     3a2:	31 1d       	adc	r19, r1
     3a4:	e0 e0       	ldi	r30, 0x00	; 0
     3a6:	f8 e0       	ldi	r31, 0x08	; 8
     3a8:	94 81       	ldd	r25, Z+4	; 0x04
     3aa:	95 ff       	sbrs	r25, 5
     3ac:	fd cf       	rjmp	.-6      	; 0x3a8 <usart_put_string+0x10>
     3ae:	9d 91       	ld	r25, X+
     3b0:	92 83       	std	Z+2, r25	; 0x02
     3b2:	a2 17       	cp	r26, r18
     3b4:	b3 07       	cpc	r27, r19
     3b6:	c1 f7       	brne	.-16     	; 0x3a8 <usart_put_string+0x10>
     3b8:	08 95       	ret

000003ba <initGPSuBlox>:
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	c1 59       	subi	r28, 0x91	; 145
     3c4:	d1 09       	sbc	r29, r1
     3c6:	cd bf       	out	0x3d, r28	; 61
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	68 ee       	ldi	r22, 0xE8	; 232
     3cc:	73 e0       	ldi	r23, 0x03	; 3
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     3d6:	8d e1       	ldi	r24, 0x1D	; 29
     3d8:	e6 ec       	ldi	r30, 0xC6	; 198
     3da:	fe e9       	ldi	r31, 0x9E	; 158
     3dc:	de 01       	movw	r26, r28
     3de:	11 96       	adiw	r26, 0x01	; 1
     3e0:	01 90       	ld	r0, Z+
     3e2:	0d 92       	st	X+, r0
     3e4:	8a 95       	dec	r24
     3e6:	e1 f7       	brne	.-8      	; 0x3e0 <initGPSuBlox+0x26>
     3e8:	6d e1       	ldi	r22, 0x1D	; 29
     3ea:	ce 01       	movw	r24, r28
     3ec:	01 96       	adiw	r24, 0x01	; 1
     3ee:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
     3f2:	8d e1       	ldi	r24, 0x1D	; 29
     3f4:	e3 ee       	ldi	r30, 0xE3	; 227
     3f6:	fe e9       	ldi	r31, 0x9E	; 158
     3f8:	de 01       	movw	r26, r28
     3fa:	5e 96       	adiw	r26, 0x1e	; 30
     3fc:	01 90       	ld	r0, Z+
     3fe:	0d 92       	st	X+, r0
     400:	8a 95       	dec	r24
     402:	e1 f7       	brne	.-8      	; 0x3fc <initGPSuBlox+0x42>
     404:	6d e1       	ldi	r22, 0x1D	; 29
     406:	ce 01       	movw	r24, r28
     408:	4e 96       	adiw	r24, 0x1e	; 30
     40a:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
     40e:	8d e1       	ldi	r24, 0x1D	; 29
     410:	e0 e0       	ldi	r30, 0x00	; 0
     412:	ff e9       	ldi	r31, 0x9F	; 159
     414:	de 01       	movw	r26, r28
     416:	db 96       	adiw	r26, 0x3b	; 59
     418:	01 90       	ld	r0, Z+
     41a:	0d 92       	st	X+, r0
     41c:	8a 95       	dec	r24
     41e:	e1 f7       	brne	.-8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     420:	6d e1       	ldi	r22, 0x1D	; 29
     422:	ce 01       	movw	r24, r28
     424:	cb 96       	adiw	r24, 0x3b	; 59
     426:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
     42a:	8d e1       	ldi	r24, 0x1D	; 29
     42c:	ed e1       	ldi	r30, 0x1D	; 29
     42e:	ff e9       	ldi	r31, 0x9F	; 159
     430:	de 01       	movw	r26, r28
     432:	a8 5a       	subi	r26, 0xA8	; 168
     434:	bf 4f       	sbci	r27, 0xFF	; 255
     436:	01 90       	ld	r0, Z+
     438:	0d 92       	st	X+, r0
     43a:	8a 95       	dec	r24
     43c:	e1 f7       	brne	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     43e:	6d e1       	ldi	r22, 0x1D	; 29
     440:	ce 01       	movw	r24, r28
     442:	88 5a       	subi	r24, 0xA8	; 168
     444:	9f 4f       	sbci	r25, 0xFF	; 255
     446:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
     44a:	8d e1       	ldi	r24, 0x1D	; 29
     44c:	ea e3       	ldi	r30, 0x3A	; 58
     44e:	ff e9       	ldi	r31, 0x9F	; 159
     450:	de 01       	movw	r26, r28
     452:	ab 58       	subi	r26, 0x8B	; 139
     454:	bf 4f       	sbci	r27, 0xFF	; 255
     456:	01 90       	ld	r0, Z+
     458:	0d 92       	st	X+, r0
     45a:	8a 95       	dec	r24
     45c:	e1 f7       	brne	.-8      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     45e:	6d e1       	ldi	r22, 0x1D	; 29
     460:	ce 01       	movw	r24, r28
     462:	8b 58       	subi	r24, 0x8B	; 139
     464:	9f 4f       	sbci	r25, 0xFF	; 255
     466:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
     46a:	cf 56       	subi	r28, 0x6F	; 111
     46c:	df 4f       	sbci	r29, 0xFF	; 255
     46e:	cd bf       	out	0x3d, r28	; 61
     470:	de bf       	out	0x3e, r29	; 62
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	08 95       	ret

00000478 <clrRx>:
     478:	8a e0       	ldi	r24, 0x0A	; 10
     47a:	98 e3       	ldi	r25, 0x38	; 56
     47c:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
     480:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	28 e5       	ldi	r18, 0x58	; 88
     48a:	e0 91 ff 38 	lds	r30, 0x38FF	; 0x8038ff <p_GPSrcvData>
     48e:	f0 91 00 39 	lds	r31, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
     492:	e8 0f       	add	r30, r24
     494:	f9 1f       	adc	r31, r25
     496:	20 83       	st	Z, r18
     498:	01 96       	adiw	r24, 0x01	; 1
     49a:	86 3b       	cpi	r24, 0xB6	; 182
     49c:	91 05       	cpc	r25, r1
     49e:	a9 f7       	brne	.-22     	; 0x48a <clrRx+0x12>
     4a0:	8a e0       	ldi	r24, 0x0A	; 10
     4a2:	98 e3       	ldi	r25, 0x38	; 56
     4a4:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
     4a8:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
     4ac:	08 95       	ret

000004ae <gpsReqDateUblox>:
     4ae:	af 92       	push	r10
     4b0:	bf 92       	push	r11
     4b2:	cf 92       	push	r12
     4b4:	df 92       	push	r13
     4b6:	ef 92       	push	r14
     4b8:	ff 92       	push	r15
     4ba:	0f 93       	push	r16
     4bc:	1f 93       	push	r17
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	cd b7       	in	r28, 0x3d	; 61
     4c4:	de b7       	in	r29, 0x3e	; 62
     4c6:	6f 97       	sbiw	r28, 0x1f	; 31
     4c8:	cd bf       	out	0x3d, r28	; 61
     4ca:	de bf       	out	0x3e, r29	; 62
     4cc:	b8 2e       	mov	r11, r24
     4ce:	8f e0       	ldi	r24, 0x0F	; 15
     4d0:	e7 e5       	ldi	r30, 0x57	; 87
     4d2:	ff e9       	ldi	r31, 0x9F	; 159
     4d4:	de 01       	movw	r26, r28
     4d6:	11 96       	adiw	r26, 0x01	; 1
     4d8:	01 90       	ld	r0, Z+
     4da:	0d 92       	st	X+, r0
     4dc:	8a 95       	dec	r24
     4de:	e1 f7       	brne	.-8      	; 0x4d8 <gpsReqDateUblox+0x2a>
     4e0:	04 e0       	ldi	r16, 0x04	; 4
     4e2:	a1 2c       	mov	r10, r1
     4e4:	c1 2c       	mov	r12, r1
     4e6:	68 94       	set
     4e8:	dd 24       	eor	r13, r13
     4ea:	d3 f8       	bld	r13, 3
     4ec:	0f 2e       	mov	r0, r31
     4ee:	f1 ec       	ldi	r31, 0xC1	; 193
     4f0:	ef 2e       	mov	r14, r31
     4f2:	f8 e3       	ldi	r31, 0x38	; 56
     4f4:	ff 2e       	mov	r15, r31
     4f6:	f0 2d       	mov	r31, r0
     4f8:	a8 95       	wdr
     4fa:	6f e0       	ldi	r22, 0x0F	; 15
     4fc:	ce 01       	movw	r24, r28
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
     504:	0e 94 3c 02 	call	0x478	; 0x478 <clrRx>
     508:	f6 01       	movw	r30, r12
     50a:	85 81       	ldd	r24, Z+5	; 0x05
     50c:	80 68       	ori	r24, 0x80	; 128
     50e:	85 83       	std	Z+5, r24	; 0x05
     510:	10 92 f7 38 	sts	0x38F7, r1	; 0x8038f7 <endOfLineFlag>
     514:	78 94       	sei
     516:	80 91 f7 38 	lds	r24, 0x38F7	; 0x8038f7 <endOfLineFlag>
     51a:	81 11       	cpse	r24, r1
     51c:	0a c0       	rjmp	.+20     	; 0x532 <gpsReqDateUblox+0x84>
     51e:	64 e6       	ldi	r22, 0x64	; 100
     520:	70 e0       	ldi	r23, 0x00	; 0
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     52a:	1f e0       	ldi	r17, 0x0F	; 15
     52c:	11 50       	subi	r17, 0x01	; 1
     52e:	09 f0       	breq	.+2      	; 0x532 <gpsReqDateUblox+0x84>
     530:	11 c1       	rjmp	.+546    	; 0x754 <gpsReqDateUblox+0x2a6>
     532:	80 91 f5 38 	lds	r24, 0x38F5	; 0x8038f5 <timeToFix>
     536:	90 91 f6 38 	lds	r25, 0x38F6	; 0x8038f6 <timeToFix+0x1>
     53a:	01 96       	adiw	r24, 0x01	; 1
     53c:	80 93 f5 38 	sts	0x38F5, r24	; 0x8038f5 <timeToFix>
     540:	90 93 f6 38 	sts	0x38F6, r25	; 0x8038f6 <timeToFix+0x1>
     544:	81 3d       	cpi	r24, 0xD1	; 209
     546:	f2 e0       	ldi	r31, 0x02	; 2
     548:	9f 07       	cpc	r25, r31
     54a:	24 f0       	brlt	.+8      	; 0x554 <gpsReqDateUblox+0xa6>
     54c:	20 91 fe 38 	lds	r18, 0x38FE	; 0x8038fe <mState>
     550:	21 30       	cpi	r18, 0x01	; 1
     552:	19 f4       	brne	.+6      	; 0x55a <gpsReqDateUblox+0xac>
     554:	8d 3a       	cpi	r24, 0xAD	; 173
     556:	93 40       	sbci	r25, 0x03	; 3
     558:	34 f0       	brlt	.+12     	; 0x566 <gpsReqDateUblox+0xb8>
     55a:	8a e9       	ldi	r24, 0x9A	; 154
     55c:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     560:	8a e9       	ldi	r24, 0x9A	; 154
     562:	92 e0       	ldi	r25, 0x02	; 2
     564:	fe c0       	rjmp	.+508    	; 0x762 <gpsReqDateUblox+0x2b4>
     566:	f6 01       	movw	r30, r12
     568:	85 81       	ldd	r24, Z+5	; 0x05
     56a:	8f 77       	andi	r24, 0x7F	; 127
     56c:	85 83       	std	Z+5, r24	; 0x05
     56e:	41 e4       	ldi	r20, 0x41	; 65
     570:	64 e4       	ldi	r22, 0x44	; 68
     572:	8a e5       	ldi	r24, 0x5A	; 90
     574:	0e 94 9d 00 	call	0x13a	; 0x13a <searchRcvBuffuBlox>
     578:	89 2b       	or	r24, r25
     57a:	09 f0       	breq	.+2      	; 0x57e <gpsReqDateUblox+0xd0>
     57c:	67 c0       	rjmp	.+206    	; 0x64c <gpsReqDateUblox+0x19e>
     57e:	20 91 03 39 	lds	r18, 0x3903	; 0x803903 <GPSSearchPtr>
     582:	30 91 04 39 	lds	r19, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     586:	d9 01       	movw	r26, r18
     588:	12 97       	sbiw	r26, 0x02	; 2
     58a:	f8 e3       	ldi	r31, 0x38	; 56
     58c:	a0 3c       	cpi	r26, 0xC0	; 192
     58e:	bf 07       	cpc	r27, r31
     590:	09 f0       	breq	.+2      	; 0x594 <gpsReqDateUblox+0xe6>
     592:	78 f4       	brcc	.+30     	; 0x5b2 <gpsReqDateUblox+0x104>
     594:	fd 01       	movw	r30, r26
     596:	80 81       	ld	r24, Z
     598:	8a 32       	cpi	r24, 0x2A	; 42
     59a:	69 f0       	breq	.+26     	; 0x5b6 <gpsReqDateUblox+0x108>
     59c:	31 96       	adiw	r30, 0x01	; 1
     59e:	10 e0       	ldi	r17, 0x00	; 0
     5a0:	df 01       	movw	r26, r30
     5a2:	18 27       	eor	r17, r24
     5a4:	ee 16       	cp	r14, r30
     5a6:	ff 06       	cpc	r15, r31
     5a8:	39 f0       	breq	.+14     	; 0x5b8 <gpsReqDateUblox+0x10a>
     5aa:	81 91       	ld	r24, Z+
     5ac:	8a 32       	cpi	r24, 0x2A	; 42
     5ae:	c1 f7       	brne	.-16     	; 0x5a0 <gpsReqDateUblox+0xf2>
     5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <gpsReqDateUblox+0x10a>
     5b2:	10 e0       	ldi	r17, 0x00	; 0
     5b4:	01 c0       	rjmp	.+2      	; 0x5b8 <gpsReqDateUblox+0x10a>
     5b6:	10 e0       	ldi	r17, 0x00	; 0
     5b8:	12 96       	adiw	r26, 0x02	; 2
     5ba:	6c 91       	ld	r22, X
     5bc:	12 97       	sbiw	r26, 0x02	; 2
     5be:	11 96       	adiw	r26, 0x01	; 1
     5c0:	8c 91       	ld	r24, X
     5c2:	0e 94 10 01 	call	0x220	; 0x220 <asciiHexToHex>
     5c6:	21 2f       	mov	r18, r17
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	28 17       	cp	r18, r24
     5cc:	39 07       	cpc	r19, r25
     5ce:	f1 f5       	brne	.+124    	; 0x64c <gpsReqDateUblox+0x19e>
     5d0:	34 c0       	rjmp	.+104    	; 0x63a <gpsReqDateUblox+0x18c>
     5d2:	cf 01       	movw	r24, r30
     5d4:	01 96       	adiw	r24, 0x01	; 1
     5d6:	80 93 03 39 	sts	0x3903, r24	; 0x803903 <GPSSearchPtr>
     5da:	90 93 04 39 	sts	0x3904, r25	; 0x803904 <GPSSearchPtr+0x1>
     5de:	81 81       	ldd	r24, Z+1	; 0x01
     5e0:	8c 32       	cpi	r24, 0x2C	; 44
     5e2:	61 f5       	brne	.+88     	; 0x63c <gpsReqDateUblox+0x18e>
     5e4:	2f 5f       	subi	r18, 0xFF	; 255
     5e6:	22 30       	cpi	r18, 0x02	; 2
     5e8:	49 f5       	brne	.+82     	; 0x63c <gpsReqDateUblox+0x18e>
     5ea:	22 81       	ldd	r18, Z+2	; 0x02
     5ec:	2c 32       	cpi	r18, 0x2C	; 44
     5ee:	71 f1       	breq	.+92     	; 0x64c <gpsReqDateUblox+0x19e>
     5f0:	36 81       	ldd	r19, Z+6	; 0x06
     5f2:	38 35       	cpi	r19, 0x58	; 88
     5f4:	59 f1       	breq	.+86     	; 0x64c <gpsReqDateUblox+0x19e>
     5f6:	8a 2d       	mov	r24, r10
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	a4 e1       	ldi	r26, 0x14	; 20
     5fc:	b0 e0       	ldi	r27, 0x00	; 0
     5fe:	ac 0f       	add	r26, r28
     600:	bd 1f       	adc	r27, r29
     602:	a8 0f       	add	r26, r24
     604:	b9 1f       	adc	r27, r25
     606:	3c 93       	st	X, r19
     608:	a0 e1       	ldi	r26, 0x10	; 16
     60a:	b0 e0       	ldi	r27, 0x00	; 0
     60c:	ac 0f       	add	r26, r28
     60e:	bd 1f       	adc	r27, r29
     610:	a8 0f       	add	r26, r24
     612:	b9 1f       	adc	r27, r25
     614:	35 81       	ldd	r19, Z+5	; 0x05
     616:	3c 93       	st	X, r19
     618:	a8 e1       	ldi	r26, 0x18	; 24
     61a:	b0 e0       	ldi	r27, 0x00	; 0
     61c:	ac 0f       	add	r26, r28
     61e:	bd 1f       	adc	r27, r29
     620:	a8 0f       	add	r26, r24
     622:	b9 1f       	adc	r27, r25
     624:	33 81       	ldd	r19, Z+3	; 0x03
     626:	3c 93       	st	X, r19
     628:	ec e1       	ldi	r30, 0x1C	; 28
     62a:	f0 e0       	ldi	r31, 0x00	; 0
     62c:	ec 0f       	add	r30, r28
     62e:	fd 1f       	adc	r31, r29
     630:	e8 0f       	add	r30, r24
     632:	f9 1f       	adc	r31, r25
     634:	20 83       	st	Z, r18
     636:	a3 94       	inc	r10
     638:	09 c0       	rjmp	.+18     	; 0x64c <gpsReqDateUblox+0x19e>
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     640:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     644:	88 e3       	ldi	r24, 0x38	; 56
     646:	e0 3c       	cpi	r30, 0xC0	; 192
     648:	f8 07       	cpc	r31, r24
     64a:	18 f2       	brcs	.-122    	; 0x5d2 <gpsReqDateUblox+0x124>
     64c:	bb 20       	and	r11, r11
     64e:	19 f0       	breq	.+6      	; 0x656 <gpsReqDateUblox+0x1a8>
     650:	82 e0       	ldi	r24, 0x02	; 2
     652:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
     656:	01 50       	subi	r16, 0x01	; 1
     658:	09 f0       	breq	.+2      	; 0x65c <gpsReqDateUblox+0x1ae>
     65a:	4e cf       	rjmp	.-356    	; 0x4f8 <gpsReqDateUblox+0x4a>
     65c:	1f 89       	ldd	r17, Y+23	; 0x17
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	9e 89       	ldd	r25, Y+22	; 0x16
     662:	91 13       	cpse	r25, r17
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	9d 89       	ldd	r25, Y+21	; 0x15
     668:	19 13       	cpse	r17, r25
     66a:	01 c0       	rjmp	.+2      	; 0x66e <gpsReqDateUblox+0x1c0>
     66c:	8f 5f       	subi	r24, 0xFF	; 255
     66e:	9c 89       	ldd	r25, Y+20	; 0x14
     670:	19 13       	cpse	r17, r25
     672:	01 c0       	rjmp	.+2      	; 0x676 <gpsReqDateUblox+0x1c8>
     674:	8f 5f       	subi	r24, 0xFF	; 255
     676:	83 30       	cpi	r24, 0x03	; 3
     678:	08 f4       	brcc	.+2      	; 0x67c <gpsReqDateUblox+0x1ce>
     67a:	5d c0       	rjmp	.+186    	; 0x736 <gpsReqDateUblox+0x288>
     67c:	0b 89       	ldd	r16, Y+19	; 0x13
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	9a 89       	ldd	r25, Y+18	; 0x12
     682:	90 13       	cpse	r25, r16
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	99 89       	ldd	r25, Y+17	; 0x11
     688:	09 13       	cpse	r16, r25
     68a:	01 c0       	rjmp	.+2      	; 0x68e <gpsReqDateUblox+0x1e0>
     68c:	8f 5f       	subi	r24, 0xFF	; 255
     68e:	98 89       	ldd	r25, Y+16	; 0x10
     690:	09 13       	cpse	r16, r25
     692:	01 c0       	rjmp	.+2      	; 0x696 <gpsReqDateUblox+0x1e8>
     694:	8f 5f       	subi	r24, 0xFF	; 255
     696:	83 30       	cpi	r24, 0x03	; 3
     698:	08 f4       	brcc	.+2      	; 0x69c <gpsReqDateUblox+0x1ee>
     69a:	50 c0       	rjmp	.+160    	; 0x73c <gpsReqDateUblox+0x28e>
     69c:	fb 8c       	ldd	r15, Y+27	; 0x1b
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     6a2:	9f 11       	cpse	r25, r15
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	99 8d       	ldd	r25, Y+25	; 0x19
     6a8:	f9 12       	cpse	r15, r25
     6aa:	01 c0       	rjmp	.+2      	; 0x6ae <gpsReqDateUblox+0x200>
     6ac:	8f 5f       	subi	r24, 0xFF	; 255
     6ae:	98 8d       	ldd	r25, Y+24	; 0x18
     6b0:	f9 12       	cpse	r15, r25
     6b2:	01 c0       	rjmp	.+2      	; 0x6b6 <gpsReqDateUblox+0x208>
     6b4:	8f 5f       	subi	r24, 0xFF	; 255
     6b6:	83 30       	cpi	r24, 0x03	; 3
     6b8:	08 f4       	brcc	.+2      	; 0x6bc <gpsReqDateUblox+0x20e>
     6ba:	43 c0       	rjmp	.+134    	; 0x742 <gpsReqDateUblox+0x294>
     6bc:	ef 8c       	ldd	r14, Y+31	; 0x1f
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     6c2:	9e 11       	cpse	r25, r14
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	9d 8d       	ldd	r25, Y+29	; 0x1d
     6c8:	e9 12       	cpse	r14, r25
     6ca:	01 c0       	rjmp	.+2      	; 0x6ce <gpsReqDateUblox+0x220>
     6cc:	8f 5f       	subi	r24, 0xFF	; 255
     6ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6d0:	e9 12       	cpse	r14, r25
     6d2:	01 c0       	rjmp	.+2      	; 0x6d6 <gpsReqDateUblox+0x228>
     6d4:	8f 5f       	subi	r24, 0xFF	; 255
     6d6:	83 30       	cpi	r24, 0x03	; 3
     6d8:	b8 f1       	brcs	.+110    	; 0x748 <gpsReqDateUblox+0x29a>
     6da:	20 91 eb 38 	lds	r18, 0x38EB	; 0x8038eb <gpsParams+0xf>
     6de:	ec ed       	ldi	r30, 0xDC	; 220
     6e0:	f8 e3       	ldi	r31, 0x38	; 56
     6e2:	85 ef       	ldi	r24, 0xF5	; 245
     6e4:	98 e3       	ldi	r25, 0x38	; 56
     6e6:	11 92       	st	Z+, r1
     6e8:	e8 17       	cp	r30, r24
     6ea:	f9 07       	cpc	r31, r25
     6ec:	e1 f7       	brne	.-8      	; 0x6e6 <gpsReqDateUblox+0x238>
     6ee:	20 93 eb 38 	sts	0x38EB, r18	; 0x8038eb <gpsParams+0xf>
     6f2:	ec e2       	ldi	r30, 0x2C	; 44
     6f4:	fe 16       	cp	r15, r30
     6f6:	59 f1       	breq	.+86     	; 0x74e <gpsReqDateUblox+0x2a0>
     6f8:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     6fc:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     700:	62 85       	ldd	r22, Z+10	; 0x0a
     702:	81 85       	ldd	r24, Z+9	; 0x09
     704:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     708:	0f 2e       	mov	r0, r31
     70a:	fc ed       	ldi	r31, 0xDC	; 220
     70c:	cf 2e       	mov	r12, r31
     70e:	f8 e3       	ldi	r31, 0x38	; 56
     710:	df 2e       	mov	r13, r31
     712:	f0 2d       	mov	r31, r0
     714:	f6 01       	movw	r30, r12
     716:	81 87       	std	Z+9, r24	; 0x09
     718:	61 2f       	mov	r22, r17
     71a:	80 2f       	mov	r24, r16
     71c:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     720:	f6 01       	movw	r30, r12
     722:	82 87       	std	Z+10, r24	; 0x0a
     724:	6f 2d       	mov	r22, r15
     726:	8e 2d       	mov	r24, r14
     728:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     72c:	f6 01       	movw	r30, r12
     72e:	83 87       	std	Z+11, r24	; 0x0b
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	16 c0       	rjmp	.+44     	; 0x762 <gpsReqDateUblox+0x2b4>
     736:	8a e9       	ldi	r24, 0x9A	; 154
     738:	92 e0       	ldi	r25, 0x02	; 2
     73a:	13 c0       	rjmp	.+38     	; 0x762 <gpsReqDateUblox+0x2b4>
     73c:	8a e9       	ldi	r24, 0x9A	; 154
     73e:	92 e0       	ldi	r25, 0x02	; 2
     740:	10 c0       	rjmp	.+32     	; 0x762 <gpsReqDateUblox+0x2b4>
     742:	8a e9       	ldi	r24, 0x9A	; 154
     744:	92 e0       	ldi	r25, 0x02	; 2
     746:	0d c0       	rjmp	.+26     	; 0x762 <gpsReqDateUblox+0x2b4>
     748:	8a e9       	ldi	r24, 0x9A	; 154
     74a:	92 e0       	ldi	r25, 0x02	; 2
     74c:	0a c0       	rjmp	.+20     	; 0x762 <gpsReqDateUblox+0x2b4>
     74e:	8a e9       	ldi	r24, 0x9A	; 154
     750:	92 e0       	ldi	r25, 0x02	; 2
     752:	07 c0       	rjmp	.+14     	; 0x762 <gpsReqDateUblox+0x2b4>
     754:	64 e6       	ldi	r22, 0x64	; 100
     756:	70 e0       	ldi	r23, 0x00	; 0
     758:	80 e0       	ldi	r24, 0x00	; 0
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     760:	e5 ce       	rjmp	.-566    	; 0x52c <gpsReqDateUblox+0x7e>
     762:	6f 96       	adiw	r28, 0x1f	; 31
     764:	cd bf       	out	0x3d, r28	; 61
     766:	de bf       	out	0x3e, r29	; 62
     768:	df 91       	pop	r29
     76a:	cf 91       	pop	r28
     76c:	1f 91       	pop	r17
     76e:	0f 91       	pop	r16
     770:	ff 90       	pop	r15
     772:	ef 90       	pop	r14
     774:	df 90       	pop	r13
     776:	cf 90       	pop	r12
     778:	bf 90       	pop	r11
     77a:	af 90       	pop	r10
     77c:	08 95       	ret

0000077e <GPSgetDate>:
     77e:	cf 93       	push	r28
     780:	c8 2f       	mov	r28, r24
     782:	0e 94 57 02 	call	0x4ae	; 0x4ae <gpsReqDateUblox>
     786:	00 97       	sbiw	r24, 0x00	; 0
     788:	39 f4       	brne	.+14     	; 0x798 <GPSgetDate+0x1a>
     78a:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     78e:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     792:	22 85       	ldd	r18, Z+10	; 0x0a
     794:	28 35       	cpi	r18, 0x58	; 88
     796:	51 f5       	brne	.+84     	; 0x7ec <GPSgetDate+0x6e>
     798:	8c 2f       	mov	r24, r28
     79a:	0e 94 57 02 	call	0x4ae	; 0x4ae <gpsReqDateUblox>
     79e:	00 97       	sbiw	r24, 0x00	; 0
     7a0:	39 f4       	brne	.+14     	; 0x7b0 <GPSgetDate+0x32>
     7a2:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     7a6:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     7aa:	22 85       	ldd	r18, Z+10	; 0x0a
     7ac:	28 35       	cpi	r18, 0x58	; 88
     7ae:	f1 f4       	brne	.+60     	; 0x7ec <GPSgetDate+0x6e>
     7b0:	8c 2f       	mov	r24, r28
     7b2:	0e 94 57 02 	call	0x4ae	; 0x4ae <gpsReqDateUblox>
     7b6:	00 97       	sbiw	r24, 0x00	; 0
     7b8:	39 f4       	brne	.+14     	; 0x7c8 <GPSgetDate+0x4a>
     7ba:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     7be:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     7c2:	22 85       	ldd	r18, Z+10	; 0x0a
     7c4:	28 35       	cpi	r18, 0x58	; 88
     7c6:	91 f4       	brne	.+36     	; 0x7ec <GPSgetDate+0x6e>
     7c8:	8c 2f       	mov	r24, r28
     7ca:	0e 94 57 02 	call	0x4ae	; 0x4ae <gpsReqDateUblox>
     7ce:	00 97       	sbiw	r24, 0x00	; 0
     7d0:	41 f4       	brne	.+16     	; 0x7e2 <GPSgetDate+0x64>
     7d2:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     7d6:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     7da:	22 85       	ldd	r18, Z+10	; 0x0a
     7dc:	28 35       	cpi	r18, 0x58	; 88
     7de:	31 f4       	brne	.+12     	; 0x7ec <GPSgetDate+0x6e>
     7e0:	03 c0       	rjmp	.+6      	; 0x7e8 <GPSgetDate+0x6a>
     7e2:	8a e9       	ldi	r24, 0x9A	; 154
     7e4:	92 e0       	ldi	r25, 0x02	; 2
     7e6:	02 c0       	rjmp	.+4      	; 0x7ec <GPSgetDate+0x6e>
     7e8:	8a e9       	ldi	r24, 0x9A	; 154
     7ea:	92 e0       	ldi	r25, 0x02	; 2
     7ec:	cf 91       	pop	r28
     7ee:	08 95       	ret

000007f0 <gpsReqStatusUblox>:
     7f0:	bf 92       	push	r11
     7f2:	cf 92       	push	r12
     7f4:	df 92       	push	r13
     7f6:	ef 92       	push	r14
     7f8:	ff 92       	push	r15
     7fa:	0f 93       	push	r16
     7fc:	1f 93       	push	r17
     7fe:	cf 93       	push	r28
     800:	df 93       	push	r29
     802:	d8 2e       	mov	r13, r24
     804:	10 92 02 39 	sts	0x3902, r1	; 0x803902 <uBloxStatus>
     808:	68 94       	set
     80a:	bb 24       	eor	r11, r11
     80c:	b2 f8       	bld	r11, 2
     80e:	c1 2c       	mov	r12, r1
     810:	e1 2c       	mov	r14, r1
     812:	68 94       	set
     814:	ff 24       	eor	r15, r15
     816:	f3 f8       	bld	r15, 3
     818:	01 ec       	ldi	r16, 0xC1	; 193
     81a:	18 e3       	ldi	r17, 0x38	; 56
     81c:	a8 95       	wdr
     81e:	0e 94 3c 02 	call	0x478	; 0x478 <clrRx>
     822:	e7 01       	movw	r28, r14
     824:	8d 81       	ldd	r24, Y+5	; 0x05
     826:	80 68       	ori	r24, 0x80	; 128
     828:	8d 83       	std	Y+5, r24	; 0x05
     82a:	10 92 f7 38 	sts	0x38F7, r1	; 0x8038f7 <endOfLineFlag>
     82e:	78 94       	sei
     830:	80 91 f7 38 	lds	r24, 0x38F7	; 0x8038f7 <endOfLineFlag>
     834:	81 11       	cpse	r24, r1
     836:	0a c0       	rjmp	.+20     	; 0x84c <gpsReqStatusUblox+0x5c>
     838:	64 e6       	ldi	r22, 0x64	; 100
     83a:	70 e0       	ldi	r23, 0x00	; 0
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     844:	cf e0       	ldi	r28, 0x0F	; 15
     846:	c1 50       	subi	r28, 0x01	; 1
     848:	09 f0       	breq	.+2      	; 0x84c <gpsReqStatusUblox+0x5c>
     84a:	88 c0       	rjmp	.+272    	; 0x95c <gpsReqStatusUblox+0x16c>
     84c:	80 91 f5 38 	lds	r24, 0x38F5	; 0x8038f5 <timeToFix>
     850:	90 91 f6 38 	lds	r25, 0x38F6	; 0x8038f6 <timeToFix+0x1>
     854:	01 96       	adiw	r24, 0x01	; 1
     856:	80 93 f5 38 	sts	0x38F5, r24	; 0x8038f5 <timeToFix>
     85a:	90 93 f6 38 	sts	0x38F6, r25	; 0x8038f6 <timeToFix+0x1>
     85e:	81 3d       	cpi	r24, 0xD1	; 209
     860:	d2 e0       	ldi	r29, 0x02	; 2
     862:	9d 07       	cpc	r25, r29
     864:	24 f0       	brlt	.+8      	; 0x86e <gpsReqStatusUblox+0x7e>
     866:	20 91 fe 38 	lds	r18, 0x38FE	; 0x8038fe <mState>
     86a:	21 30       	cpi	r18, 0x01	; 1
     86c:	19 f4       	brne	.+6      	; 0x874 <gpsReqStatusUblox+0x84>
     86e:	8d 3a       	cpi	r24, 0xAD	; 173
     870:	93 40       	sbci	r25, 0x03	; 3
     872:	34 f0       	brlt	.+12     	; 0x880 <gpsReqStatusUblox+0x90>
     874:	8a e9       	ldi	r24, 0x9A	; 154
     876:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     87a:	8a e9       	ldi	r24, 0x9A	; 154
     87c:	92 e0       	ldi	r25, 0x02	; 2
     87e:	75 c0       	rjmp	.+234    	; 0x96a <gpsReqStatusUblox+0x17a>
     880:	e7 01       	movw	r28, r14
     882:	8d 81       	ldd	r24, Y+5	; 0x05
     884:	8f 77       	andi	r24, 0x7F	; 127
     886:	8d 83       	std	Y+5, r24	; 0x05
     888:	43 e4       	ldi	r20, 0x43	; 67
     88a:	6d e4       	ldi	r22, 0x4D	; 77
     88c:	82 e5       	ldi	r24, 0x52	; 82
     88e:	0e 94 9d 00 	call	0x13a	; 0x13a <searchRcvBuffuBlox>
     892:	89 2b       	or	r24, r25
     894:	09 f0       	breq	.+2      	; 0x898 <gpsReqStatusUblox+0xa8>
     896:	44 c0       	rjmp	.+136    	; 0x920 <gpsReqStatusUblox+0x130>
     898:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     89c:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     8a0:	df 01       	movw	r26, r30
     8a2:	12 97       	sbiw	r26, 0x02	; 2
     8a4:	d8 e3       	ldi	r29, 0x38	; 56
     8a6:	a0 3c       	cpi	r26, 0xC0	; 192
     8a8:	bd 07       	cpc	r27, r29
     8aa:	09 f0       	breq	.+2      	; 0x8ae <gpsReqStatusUblox+0xbe>
     8ac:	78 f4       	brcc	.+30     	; 0x8cc <gpsReqStatusUblox+0xdc>
     8ae:	ed 01       	movw	r28, r26
     8b0:	88 81       	ld	r24, Y
     8b2:	8a 32       	cpi	r24, 0x2A	; 42
     8b4:	69 f0       	breq	.+26     	; 0x8d0 <gpsReqStatusUblox+0xe0>
     8b6:	31 97       	sbiw	r30, 0x01	; 1
     8b8:	c0 e0       	ldi	r28, 0x00	; 0
     8ba:	df 01       	movw	r26, r30
     8bc:	c8 27       	eor	r28, r24
     8be:	e0 17       	cp	r30, r16
     8c0:	f1 07       	cpc	r31, r17
     8c2:	39 f0       	breq	.+14     	; 0x8d2 <gpsReqStatusUblox+0xe2>
     8c4:	81 91       	ld	r24, Z+
     8c6:	8a 32       	cpi	r24, 0x2A	; 42
     8c8:	c1 f7       	brne	.-16     	; 0x8ba <gpsReqStatusUblox+0xca>
     8ca:	03 c0       	rjmp	.+6      	; 0x8d2 <gpsReqStatusUblox+0xe2>
     8cc:	c0 e0       	ldi	r28, 0x00	; 0
     8ce:	01 c0       	rjmp	.+2      	; 0x8d2 <gpsReqStatusUblox+0xe2>
     8d0:	c0 e0       	ldi	r28, 0x00	; 0
     8d2:	12 96       	adiw	r26, 0x02	; 2
     8d4:	6c 91       	ld	r22, X
     8d6:	12 97       	sbiw	r26, 0x02	; 2
     8d8:	11 96       	adiw	r26, 0x01	; 1
     8da:	8c 91       	ld	r24, X
     8dc:	0e 94 10 01 	call	0x220	; 0x220 <asciiHexToHex>
     8e0:	2c 2f       	mov	r18, r28
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	28 17       	cp	r18, r24
     8e6:	39 07       	cpc	r19, r25
     8e8:	d9 f4       	brne	.+54     	; 0x920 <gpsReqStatusUblox+0x130>
     8ea:	11 c0       	rjmp	.+34     	; 0x90e <gpsReqStatusUblox+0x11e>
     8ec:	cf 01       	movw	r24, r30
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	80 93 03 39 	sts	0x3903, r24	; 0x803903 <GPSSearchPtr>
     8f4:	90 93 04 39 	sts	0x3904, r25	; 0x803904 <GPSSearchPtr+0x1>
     8f8:	81 81       	ldd	r24, Z+1	; 0x01
     8fa:	8c 32       	cpi	r24, 0x2C	; 44
     8fc:	49 f4       	brne	.+18     	; 0x910 <gpsReqStatusUblox+0x120>
     8fe:	2f 5f       	subi	r18, 0xFF	; 255
     900:	22 30       	cpi	r18, 0x02	; 2
     902:	31 f4       	brne	.+12     	; 0x910 <gpsReqStatusUblox+0x120>
     904:	82 81       	ldd	r24, Z+2	; 0x02
     906:	81 34       	cpi	r24, 0x41	; 65
     908:	59 f4       	brne	.+22     	; 0x920 <gpsReqStatusUblox+0x130>
     90a:	c3 94       	inc	r12
     90c:	09 c0       	rjmp	.+18     	; 0x920 <gpsReqStatusUblox+0x130>
     90e:	20 e0       	ldi	r18, 0x00	; 0
     910:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     914:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     918:	d8 e3       	ldi	r29, 0x38	; 56
     91a:	e0 3c       	cpi	r30, 0xC0	; 192
     91c:	fd 07       	cpc	r31, r29
     91e:	30 f3       	brcs	.-52     	; 0x8ec <gpsReqStatusUblox+0xfc>
     920:	dd 20       	and	r13, r13
     922:	19 f0       	breq	.+6      	; 0x92a <gpsReqStatusUblox+0x13a>
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
     92a:	ba 94       	dec	r11
     92c:	b1 10       	cpse	r11, r1
     92e:	76 cf       	rjmp	.-276    	; 0x81c <gpsReqStatusUblox+0x2c>
     930:	e1 e0       	ldi	r30, 0x01	; 1
     932:	ec 15       	cp	r30, r12
     934:	68 f4       	brcc	.+26     	; 0x950 <gpsReqStatusUblox+0x160>
     936:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     93a:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     93e:	81 81       	ldd	r24, Z+1	; 0x01
     940:	81 34       	cpi	r24, 0x41	; 65
     942:	31 f4       	brne	.+12     	; 0x950 <gpsReqStatusUblox+0x160>
     944:	89 e2       	ldi	r24, 0x29	; 41
     946:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     94a:	80 e0       	ldi	r24, 0x00	; 0
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	0d c0       	rjmp	.+26     	; 0x96a <gpsReqStatusUblox+0x17a>
     950:	8a e9       	ldi	r24, 0x9A	; 154
     952:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     956:	8a e9       	ldi	r24, 0x9A	; 154
     958:	92 e0       	ldi	r25, 0x02	; 2
     95a:	07 c0       	rjmp	.+14     	; 0x96a <gpsReqStatusUblox+0x17a>
     95c:	64 e6       	ldi	r22, 0x64	; 100
     95e:	70 e0       	ldi	r23, 0x00	; 0
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     968:	6e cf       	rjmp	.-292    	; 0x846 <gpsReqStatusUblox+0x56>
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	df 90       	pop	r13
     978:	cf 90       	pop	r12
     97a:	bf 90       	pop	r11
     97c:	08 95       	ret

0000097e <gpsReqLocUblox>:
     97e:	7f 92       	push	r7
     980:	8f 92       	push	r8
     982:	9f 92       	push	r9
     984:	af 92       	push	r10
     986:	bf 92       	push	r11
     988:	cf 92       	push	r12
     98a:	df 92       	push	r13
     98c:	ef 92       	push	r14
     98e:	ff 92       	push	r15
     990:	0f 93       	push	r16
     992:	1f 93       	push	r17
     994:	cf 93       	push	r28
     996:	df 93       	push	r29
     998:	cd b7       	in	r28, 0x3d	; 61
     99a:	de b7       	in	r29, 0x3e	; 62
     99c:	af 97       	sbiw	r28, 0x2f	; 47
     99e:	cd bf       	out	0x3d, r28	; 61
     9a0:	de bf       	out	0x3e, r29	; 62
     9a2:	a8 2e       	mov	r10, r24
     9a4:	8f e0       	ldi	r24, 0x0F	; 15
     9a6:	e6 e6       	ldi	r30, 0x66	; 102
     9a8:	ff e9       	ldi	r31, 0x9F	; 159
     9aa:	de 01       	movw	r26, r28
     9ac:	11 96       	adiw	r26, 0x01	; 1
     9ae:	01 90       	ld	r0, Z+
     9b0:	0d 92       	st	X+, r0
     9b2:	8a 95       	dec	r24
     9b4:	e1 f7       	brne	.-8      	; 0x9ae <gpsReqLocUblox+0x30>
     9b6:	21 e0       	ldi	r18, 0x01	; 1
     9b8:	2f 8f       	std	Y+31, r18	; 0x1f
     9ba:	92 e0       	ldi	r25, 0x02	; 2
     9bc:	9a 8f       	std	Y+26, r25	; 0x1a
     9be:	83 e0       	ldi	r24, 0x03	; 3
     9c0:	89 8f       	std	Y+25, r24	; 0x19
     9c2:	2f 8b       	std	Y+23, r18	; 0x17
     9c4:	9a 8b       	std	Y+18, r25	; 0x12
     9c6:	89 8b       	std	Y+17, r24	; 0x11
     9c8:	2f a3       	std	Y+39, r18	; 0x27
     9ca:	9a a3       	std	Y+34, r25	; 0x22
     9cc:	89 a3       	std	Y+33, r24	; 0x21
     9ce:	68 94       	set
     9d0:	bb 24       	eor	r11, r11
     9d2:	b3 f8       	bld	r11, 3
     9d4:	81 2c       	mov	r8, r1
     9d6:	c1 2c       	mov	r12, r1
     9d8:	68 94       	set
     9da:	dd 24       	eor	r13, r13
     9dc:	d3 f8       	bld	r13, 3
     9de:	0f 2e       	mov	r0, r31
     9e0:	f1 ec       	ldi	r31, 0xC1	; 193
     9e2:	ef 2e       	mov	r14, r31
     9e4:	f8 e3       	ldi	r31, 0x38	; 56
     9e6:	ff 2e       	mov	r15, r31
     9e8:	f0 2d       	mov	r31, r0
     9ea:	a8 95       	wdr
     9ec:	6f e0       	ldi	r22, 0x0F	; 15
     9ee:	ce 01       	movw	r24, r28
     9f0:	01 96       	adiw	r24, 0x01	; 1
     9f2:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
     9f6:	0e 94 3c 02 	call	0x478	; 0x478 <clrRx>
     9fa:	d6 01       	movw	r26, r12
     9fc:	15 96       	adiw	r26, 0x05	; 5
     9fe:	8c 91       	ld	r24, X
     a00:	15 97       	sbiw	r26, 0x05	; 5
     a02:	80 68       	ori	r24, 0x80	; 128
     a04:	15 96       	adiw	r26, 0x05	; 5
     a06:	8c 93       	st	X, r24
     a08:	10 92 f7 38 	sts	0x38F7, r1	; 0x8038f7 <endOfLineFlag>
     a0c:	78 94       	sei
     a0e:	80 91 f7 38 	lds	r24, 0x38F7	; 0x8038f7 <endOfLineFlag>
     a12:	81 11       	cpse	r24, r1
     a14:	0a c0       	rjmp	.+20     	; 0xa2a <gpsReqLocUblox+0xac>
     a16:	64 e6       	ldi	r22, 0x64	; 100
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     a22:	1f e0       	ldi	r17, 0x0F	; 15
     a24:	11 50       	subi	r17, 0x01	; 1
     a26:	09 f0       	breq	.+2      	; 0xa2a <gpsReqLocUblox+0xac>
     a28:	ec c1       	rjmp	.+984    	; 0xe02 <gpsReqLocUblox+0x484>
     a2a:	00 91 f5 38 	lds	r16, 0x38F5	; 0x8038f5 <timeToFix>
     a2e:	10 91 f6 38 	lds	r17, 0x38F6	; 0x8038f6 <timeToFix+0x1>
     a32:	01 3d       	cpi	r16, 0xD1	; 209
     a34:	b2 e0       	ldi	r27, 0x02	; 2
     a36:	1b 07       	cpc	r17, r27
     a38:	24 f0       	brlt	.+8      	; 0xa42 <gpsReqLocUblox+0xc4>
     a3a:	80 91 fe 38 	lds	r24, 0x38FE	; 0x8038fe <mState>
     a3e:	81 30       	cpi	r24, 0x01	; 1
     a40:	21 f4       	brne	.+8      	; 0xa4a <gpsReqLocUblox+0xcc>
     a42:	0d 3a       	cpi	r16, 0xAD	; 173
     a44:	e3 e0       	ldi	r30, 0x03	; 3
     a46:	1e 07       	cpc	r17, r30
     a48:	34 f0       	brlt	.+12     	; 0xa56 <gpsReqLocUblox+0xd8>
     a4a:	8a e9       	ldi	r24, 0x9A	; 154
     a4c:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     a50:	8a e9       	ldi	r24, 0x9A	; 154
     a52:	92 e0       	ldi	r25, 0x02	; 2
     a54:	dd c1       	rjmp	.+954    	; 0xe10 <gpsReqLocUblox+0x492>
     a56:	0f 5f       	subi	r16, 0xFF	; 255
     a58:	1f 4f       	sbci	r17, 0xFF	; 255
     a5a:	91 2e       	mov	r9, r17
     a5c:	00 93 f5 38 	sts	0x38F5, r16	; 0x8038f5 <timeToFix>
     a60:	10 93 f6 38 	sts	0x38F6, r17	; 0x8038f6 <timeToFix+0x1>
     a64:	d6 01       	movw	r26, r12
     a66:	15 96       	adiw	r26, 0x05	; 5
     a68:	8c 91       	ld	r24, X
     a6a:	15 97       	sbiw	r26, 0x05	; 5
     a6c:	8f 77       	andi	r24, 0x7F	; 127
     a6e:	15 96       	adiw	r26, 0x05	; 5
     a70:	8c 93       	st	X, r24
     a72:	aa 20       	and	r10, r10
     a74:	19 f0       	breq	.+6      	; 0xa7c <gpsReqLocUblox+0xfe>
     a76:	83 e0       	ldi	r24, 0x03	; 3
     a78:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
     a7c:	43 e5       	ldi	r20, 0x53	; 83
     a7e:	6e e4       	ldi	r22, 0x4E	; 78
     a80:	87 e4       	ldi	r24, 0x47	; 71
     a82:	0e 94 9d 00 	call	0x13a	; 0x13a <searchRcvBuffuBlox>
     a86:	89 2b       	or	r24, r25
     a88:	09 f0       	breq	.+2      	; 0xa8c <gpsReqLocUblox+0x10e>
     a8a:	7b c0       	rjmp	.+246    	; 0xb82 <gpsReqLocUblox+0x204>
     a8c:	20 91 03 39 	lds	r18, 0x3903	; 0x803903 <GPSSearchPtr>
     a90:	30 91 04 39 	lds	r19, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     a94:	d9 01       	movw	r26, r18
     a96:	12 97       	sbiw	r26, 0x02	; 2
     a98:	e8 e3       	ldi	r30, 0x38	; 56
     a9a:	a0 3c       	cpi	r26, 0xC0	; 192
     a9c:	be 07       	cpc	r27, r30
     a9e:	09 f0       	breq	.+2      	; 0xaa2 <gpsReqLocUblox+0x124>
     aa0:	78 f4       	brcc	.+30     	; 0xac0 <gpsReqLocUblox+0x142>
     aa2:	fd 01       	movw	r30, r26
     aa4:	80 81       	ld	r24, Z
     aa6:	8a 32       	cpi	r24, 0x2A	; 42
     aa8:	69 f0       	breq	.+26     	; 0xac4 <gpsReqLocUblox+0x146>
     aaa:	31 96       	adiw	r30, 0x01	; 1
     aac:	71 2c       	mov	r7, r1
     aae:	df 01       	movw	r26, r30
     ab0:	78 26       	eor	r7, r24
     ab2:	ee 15       	cp	r30, r14
     ab4:	ff 05       	cpc	r31, r15
     ab6:	39 f0       	breq	.+14     	; 0xac6 <gpsReqLocUblox+0x148>
     ab8:	81 91       	ld	r24, Z+
     aba:	8a 32       	cpi	r24, 0x2A	; 42
     abc:	c1 f7       	brne	.-16     	; 0xaae <gpsReqLocUblox+0x130>
     abe:	03 c0       	rjmp	.+6      	; 0xac6 <gpsReqLocUblox+0x148>
     ac0:	71 2c       	mov	r7, r1
     ac2:	01 c0       	rjmp	.+2      	; 0xac6 <gpsReqLocUblox+0x148>
     ac4:	71 2c       	mov	r7, r1
     ac6:	12 96       	adiw	r26, 0x02	; 2
     ac8:	6c 91       	ld	r22, X
     aca:	12 97       	sbiw	r26, 0x02	; 2
     acc:	11 96       	adiw	r26, 0x01	; 1
     ace:	8c 91       	ld	r24, X
     ad0:	0e 94 10 01 	call	0x220	; 0x220 <asciiHexToHex>
     ad4:	27 2d       	mov	r18, r7
     ad6:	30 e0       	ldi	r19, 0x00	; 0
     ad8:	28 17       	cp	r18, r24
     ada:	39 07       	cpc	r19, r25
     adc:	09 f0       	breq	.+2      	; 0xae0 <gpsReqLocUblox+0x162>
     ade:	51 c0       	rjmp	.+162    	; 0xb82 <gpsReqLocUblox+0x204>
     ae0:	46 c0       	rjmp	.+140    	; 0xb6e <gpsReqLocUblox+0x1f0>
     ae2:	cf 01       	movw	r24, r30
     ae4:	01 96       	adiw	r24, 0x01	; 1
     ae6:	80 93 03 39 	sts	0x3903, r24	; 0x803903 <GPSSearchPtr>
     aea:	90 93 04 39 	sts	0x3904, r25	; 0x803904 <GPSSearchPtr+0x1>
     aee:	81 81       	ldd	r24, Z+1	; 0x01
     af0:	8c 32       	cpi	r24, 0x2C	; 44
     af2:	f1 f5       	brne	.+124    	; 0xb70 <gpsReqLocUblox+0x1f2>
     af4:	2f 5f       	subi	r18, 0xFF	; 255
     af6:	22 30       	cpi	r18, 0x02	; 2
     af8:	d9 f5       	brne	.+118    	; 0xb70 <gpsReqLocUblox+0x1f2>
     afa:	82 81       	ldd	r24, Z+2	; 0x02
     afc:	8c 32       	cpi	r24, 0x2C	; 44
     afe:	09 f4       	brne	.+2      	; 0xb02 <gpsReqLocUblox+0x184>
     b00:	40 c0       	rjmp	.+128    	; 0xb82 <gpsReqLocUblox+0x204>
     b02:	88 35       	cpi	r24, 0x58	; 88
     b04:	f1 f1       	breq	.+124    	; 0xb82 <gpsReqLocUblox+0x204>
     b06:	88 2d       	mov	r24, r8
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	48 e1       	ldi	r20, 0x18	; 24
     b0c:	50 e0       	ldi	r21, 0x00	; 0
     b0e:	4c 0f       	add	r20, r28
     b10:	5d 1f       	adc	r21, r29
     b12:	48 0f       	add	r20, r24
     b14:	59 1f       	adc	r21, r25
     b16:	9f 01       	movw	r18, r30
     b18:	27 50       	subi	r18, 0x07	; 7
     b1a:	31 09       	sbc	r19, r1
     b1c:	d9 01       	movw	r26, r18
     b1e:	2c 91       	ld	r18, X
     b20:	da 01       	movw	r26, r20
     b22:	2c 93       	st	X, r18
     b24:	40 e1       	ldi	r20, 0x10	; 16
     b26:	50 e0       	ldi	r21, 0x00	; 0
     b28:	4c 0f       	add	r20, r28
     b2a:	5d 1f       	adc	r21, r29
     b2c:	48 0f       	add	r20, r24
     b2e:	59 1f       	adc	r21, r25
     b30:	9f 01       	movw	r18, r30
     b32:	28 50       	subi	r18, 0x08	; 8
     b34:	31 09       	sbc	r19, r1
     b36:	d9 01       	movw	r26, r18
     b38:	2c 91       	ld	r18, X
     b3a:	da 01       	movw	r26, r20
     b3c:	2c 93       	st	X, r18
     b3e:	40 e2       	ldi	r20, 0x20	; 32
     b40:	50 e0       	ldi	r21, 0x00	; 0
     b42:	4c 0f       	add	r20, r28
     b44:	5d 1f       	adc	r21, r29
     b46:	48 0f       	add	r20, r24
     b48:	59 1f       	adc	r21, r25
     b4a:	9f 01       	movw	r18, r30
     b4c:	25 50       	subi	r18, 0x05	; 5
     b4e:	31 09       	sbc	r19, r1
     b50:	d9 01       	movw	r26, r18
     b52:	2c 91       	ld	r18, X
     b54:	da 01       	movw	r26, r20
     b56:	2c 93       	st	X, r18
     b58:	a8 e2       	ldi	r26, 0x28	; 40
     b5a:	b0 e0       	ldi	r27, 0x00	; 0
     b5c:	ac 0f       	add	r26, r28
     b5e:	bd 1f       	adc	r27, r29
     b60:	a8 0f       	add	r26, r24
     b62:	b9 1f       	adc	r27, r25
     b64:	36 97       	sbiw	r30, 0x06	; 6
     b66:	20 81       	ld	r18, Z
     b68:	2c 93       	st	X, r18
     b6a:	83 94       	inc	r8
     b6c:	0a c0       	rjmp	.+20     	; 0xb82 <gpsReqLocUblox+0x204>
     b6e:	20 e0       	ldi	r18, 0x00	; 0
     b70:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     b74:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     b78:	b8 e3       	ldi	r27, 0x38	; 56
     b7a:	e0 3c       	cpi	r30, 0xC0	; 192
     b7c:	fb 07       	cpc	r31, r27
     b7e:	08 f4       	brcc	.+2      	; 0xb82 <gpsReqLocUblox+0x204>
     b80:	b0 cf       	rjmp	.-160    	; 0xae2 <gpsReqLocUblox+0x164>
     b82:	ba 94       	dec	r11
     b84:	b1 10       	cpse	r11, r1
     b86:	31 cf       	rjmp	.-414    	; 0x9ea <gpsReqLocUblox+0x6c>
     b88:	6f 8d       	ldd	r22, Y+31	; 0x1f
     b8a:	81 e0       	ldi	r24, 0x01	; 1
     b8c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b8e:	96 13       	cpse	r25, r22
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	9d 8d       	ldd	r25, Y+29	; 0x1d
     b94:	69 13       	cpse	r22, r25
     b96:	01 c0       	rjmp	.+2      	; 0xb9a <gpsReqLocUblox+0x21c>
     b98:	8f 5f       	subi	r24, 0xFF	; 255
     b9a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     b9c:	69 13       	cpse	r22, r25
     b9e:	01 c0       	rjmp	.+2      	; 0xba2 <gpsReqLocUblox+0x224>
     ba0:	8f 5f       	subi	r24, 0xFF	; 255
     ba2:	9b 8d       	ldd	r25, Y+27	; 0x1b
     ba4:	69 13       	cpse	r22, r25
     ba6:	01 c0       	rjmp	.+2      	; 0xbaa <gpsReqLocUblox+0x22c>
     ba8:	8f 5f       	subi	r24, 0xFF	; 255
     baa:	9a 8d       	ldd	r25, Y+26	; 0x1a
     bac:	69 13       	cpse	r22, r25
     bae:	01 c0       	rjmp	.+2      	; 0xbb2 <gpsReqLocUblox+0x234>
     bb0:	8f 5f       	subi	r24, 0xFF	; 255
     bb2:	99 8d       	ldd	r25, Y+25	; 0x19
     bb4:	69 13       	cpse	r22, r25
     bb6:	01 c0       	rjmp	.+2      	; 0xbba <gpsReqLocUblox+0x23c>
     bb8:	8f 5f       	subi	r24, 0xFF	; 255
     bba:	98 8d       	ldd	r25, Y+24	; 0x18
     bbc:	69 13       	cpse	r22, r25
     bbe:	01 c0       	rjmp	.+2      	; 0xbc2 <gpsReqLocUblox+0x244>
     bc0:	8f 5f       	subi	r24, 0xFF	; 255
     bc2:	86 30       	cpi	r24, 0x06	; 6
     bc4:	08 f4       	brcc	.+2      	; 0xbc8 <gpsReqLocUblox+0x24a>
     bc6:	0e c1       	rjmp	.+540    	; 0xde4 <gpsReqLocUblox+0x466>
     bc8:	8f 89       	ldd	r24, Y+23	; 0x17
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	2e 89       	ldd	r18, Y+22	; 0x16
     bce:	28 13       	cpse	r18, r24
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	2d 89       	ldd	r18, Y+21	; 0x15
     bd4:	82 13       	cpse	r24, r18
     bd6:	01 c0       	rjmp	.+2      	; 0xbda <gpsReqLocUblox+0x25c>
     bd8:	9f 5f       	subi	r25, 0xFF	; 255
     bda:	2c 89       	ldd	r18, Y+20	; 0x14
     bdc:	82 13       	cpse	r24, r18
     bde:	01 c0       	rjmp	.+2      	; 0xbe2 <gpsReqLocUblox+0x264>
     be0:	9f 5f       	subi	r25, 0xFF	; 255
     be2:	2b 89       	ldd	r18, Y+19	; 0x13
     be4:	82 13       	cpse	r24, r18
     be6:	01 c0       	rjmp	.+2      	; 0xbea <gpsReqLocUblox+0x26c>
     be8:	9f 5f       	subi	r25, 0xFF	; 255
     bea:	2a 89       	ldd	r18, Y+18	; 0x12
     bec:	82 13       	cpse	r24, r18
     bee:	01 c0       	rjmp	.+2      	; 0xbf2 <gpsReqLocUblox+0x274>
     bf0:	9f 5f       	subi	r25, 0xFF	; 255
     bf2:	29 89       	ldd	r18, Y+17	; 0x11
     bf4:	82 13       	cpse	r24, r18
     bf6:	01 c0       	rjmp	.+2      	; 0xbfa <gpsReqLocUblox+0x27c>
     bf8:	9f 5f       	subi	r25, 0xFF	; 255
     bfa:	28 89       	ldd	r18, Y+16	; 0x10
     bfc:	82 13       	cpse	r24, r18
     bfe:	01 c0       	rjmp	.+2      	; 0xc02 <gpsReqLocUblox+0x284>
     c00:	9f 5f       	subi	r25, 0xFF	; 255
     c02:	96 30       	cpi	r25, 0x06	; 6
     c04:	08 f4       	brcc	.+2      	; 0xc08 <gpsReqLocUblox+0x28a>
     c06:	f1 c0       	rjmp	.+482    	; 0xdea <gpsReqLocUblox+0x46c>
     c08:	ef a4       	ldd	r14, Y+47	; 0x2f
     c0a:	91 e0       	ldi	r25, 0x01	; 1
     c0c:	2e a5       	ldd	r18, Y+46	; 0x2e
     c0e:	2e 11       	cpse	r18, r14
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	2d a5       	ldd	r18, Y+45	; 0x2d
     c14:	e2 12       	cpse	r14, r18
     c16:	01 c0       	rjmp	.+2      	; 0xc1a <gpsReqLocUblox+0x29c>
     c18:	9f 5f       	subi	r25, 0xFF	; 255
     c1a:	2c a5       	ldd	r18, Y+44	; 0x2c
     c1c:	e2 12       	cpse	r14, r18
     c1e:	01 c0       	rjmp	.+2      	; 0xc22 <gpsReqLocUblox+0x2a4>
     c20:	9f 5f       	subi	r25, 0xFF	; 255
     c22:	2b a5       	ldd	r18, Y+43	; 0x2b
     c24:	e2 12       	cpse	r14, r18
     c26:	01 c0       	rjmp	.+2      	; 0xc2a <gpsReqLocUblox+0x2ac>
     c28:	9f 5f       	subi	r25, 0xFF	; 255
     c2a:	2a a5       	ldd	r18, Y+42	; 0x2a
     c2c:	e2 12       	cpse	r14, r18
     c2e:	01 c0       	rjmp	.+2      	; 0xc32 <gpsReqLocUblox+0x2b4>
     c30:	9f 5f       	subi	r25, 0xFF	; 255
     c32:	29 a5       	ldd	r18, Y+41	; 0x29
     c34:	e2 12       	cpse	r14, r18
     c36:	01 c0       	rjmp	.+2      	; 0xc3a <gpsReqLocUblox+0x2bc>
     c38:	9f 5f       	subi	r25, 0xFF	; 255
     c3a:	28 a5       	ldd	r18, Y+40	; 0x28
     c3c:	e2 12       	cpse	r14, r18
     c3e:	01 c0       	rjmp	.+2      	; 0xc42 <gpsReqLocUblox+0x2c4>
     c40:	9f 5f       	subi	r25, 0xFF	; 255
     c42:	96 30       	cpi	r25, 0x06	; 6
     c44:	08 f4       	brcc	.+2      	; 0xc48 <gpsReqLocUblox+0x2ca>
     c46:	d4 c0       	rjmp	.+424    	; 0xdf0 <gpsReqLocUblox+0x472>
     c48:	ff a0       	ldd	r15, Y+39	; 0x27
     c4a:	91 e0       	ldi	r25, 0x01	; 1
     c4c:	2e a1       	ldd	r18, Y+38	; 0x26
     c4e:	2f 11       	cpse	r18, r15
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	2d a1       	ldd	r18, Y+37	; 0x25
     c54:	f2 12       	cpse	r15, r18
     c56:	01 c0       	rjmp	.+2      	; 0xc5a <gpsReqLocUblox+0x2dc>
     c58:	9f 5f       	subi	r25, 0xFF	; 255
     c5a:	2c a1       	ldd	r18, Y+36	; 0x24
     c5c:	f2 12       	cpse	r15, r18
     c5e:	01 c0       	rjmp	.+2      	; 0xc62 <gpsReqLocUblox+0x2e4>
     c60:	9f 5f       	subi	r25, 0xFF	; 255
     c62:	2b a1       	ldd	r18, Y+35	; 0x23
     c64:	f2 12       	cpse	r15, r18
     c66:	01 c0       	rjmp	.+2      	; 0xc6a <gpsReqLocUblox+0x2ec>
     c68:	9f 5f       	subi	r25, 0xFF	; 255
     c6a:	2a a1       	ldd	r18, Y+34	; 0x22
     c6c:	f2 12       	cpse	r15, r18
     c6e:	01 c0       	rjmp	.+2      	; 0xc72 <gpsReqLocUblox+0x2f4>
     c70:	9f 5f       	subi	r25, 0xFF	; 255
     c72:	29 a1       	ldd	r18, Y+33	; 0x21
     c74:	f2 12       	cpse	r15, r18
     c76:	01 c0       	rjmp	.+2      	; 0xc7a <gpsReqLocUblox+0x2fc>
     c78:	9f 5f       	subi	r25, 0xFF	; 255
     c7a:	28 a1       	ldd	r18, Y+32	; 0x20
     c7c:	f2 12       	cpse	r15, r18
     c7e:	01 c0       	rjmp	.+2      	; 0xc82 <gpsReqLocUblox+0x304>
     c80:	9f 5f       	subi	r25, 0xFF	; 255
     c82:	96 30       	cpi	r25, 0x06	; 6
     c84:	08 f4       	brcc	.+2      	; 0xc88 <gpsReqLocUblox+0x30a>
     c86:	b7 c0       	rjmp	.+366    	; 0xdf6 <gpsReqLocUblox+0x478>
     c88:	ec e2       	ldi	r30, 0x2C	; 44
     c8a:	fe 16       	cp	r15, r30
     c8c:	09 f4       	brne	.+2      	; 0xc90 <gpsReqLocUblox+0x312>
     c8e:	b6 c0       	rjmp	.+364    	; 0xdfc <gpsReqLocUblox+0x47e>
     c90:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     c94:	0f 2e       	mov	r0, r31
     c96:	fc ed       	ldi	r31, 0xDC	; 220
     c98:	cf 2e       	mov	r12, r31
     c9a:	f8 e3       	ldi	r31, 0x38	; 56
     c9c:	df 2e       	mov	r13, r31
     c9e:	f0 2d       	mov	r31, r0
     ca0:	d6 01       	movw	r26, r12
     ca2:	1c 96       	adiw	r26, 0x0c	; 12
     ca4:	8c 93       	st	X, r24
     ca6:	6f 2d       	mov	r22, r15
     ca8:	8e 2d       	mov	r24, r14
     caa:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     cae:	f6 01       	movw	r30, r12
     cb0:	85 87       	std	Z+13, r24	; 0x0d
     cb2:	e0 90 03 39 	lds	r14, 0x3903	; 0x803903 <GPSSearchPtr>
     cb6:	f0 90 04 39 	lds	r15, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     cba:	d7 01       	movw	r26, r14
     cbc:	14 97       	sbiw	r26, 0x04	; 4
     cbe:	f7 01       	movw	r30, r14
     cc0:	35 97       	sbiw	r30, 0x05	; 5
     cc2:	6c 91       	ld	r22, X
     cc4:	80 81       	ld	r24, Z
     cc6:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     cca:	d6 01       	movw	r26, r12
     ccc:	1e 96       	adiw	r26, 0x0e	; 14
     cce:	8c 93       	st	X, r24
     cd0:	f7 01       	movw	r30, r14
     cd2:	60 a1       	ldd	r22, Z+32	; 0x20
     cd4:	87 8d       	ldd	r24, Z+31	; 0x1f
     cd6:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     cda:	d6 01       	movw	r26, r12
     cdc:	50 96       	adiw	r26, 0x10	; 16
     cde:	8c 93       	st	X, r24
     ce0:	f7 01       	movw	r30, r14
     ce2:	84 85       	ldd	r24, Z+12	; 0x0c
     ce4:	8e 34       	cpi	r24, 0x4E	; 78
     ce6:	21 f4       	brne	.+8      	; 0xcf0 <gpsReqLocUblox+0x372>
     ce8:	80 e8       	ldi	r24, 0x80	; 128
     cea:	80 93 dc 38 	sts	0x38DC, r24	; 0x8038dc <gpsParams>
     cee:	02 c0       	rjmp	.+4      	; 0xcf4 <gpsReqLocUblox+0x376>
     cf0:	10 92 dc 38 	sts	0x38DC, r1	; 0x8038dc <gpsParams>
     cf4:	d7 01       	movw	r26, r14
     cf6:	12 96       	adiw	r26, 0x02	; 2
     cf8:	6c 91       	ld	r22, X
     cfa:	12 97       	sbiw	r26, 0x02	; 2
     cfc:	11 96       	adiw	r26, 0x01	; 1
     cfe:	8c 91       	ld	r24, X
     d00:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     d04:	0f 2e       	mov	r0, r31
     d06:	fc ed       	ldi	r31, 0xDC	; 220
     d08:	cf 2e       	mov	r12, r31
     d0a:	f8 e3       	ldi	r31, 0x38	; 56
     d0c:	df 2e       	mov	r13, r31
     d0e:	f0 2d       	mov	r31, r0
     d10:	f6 01       	movw	r30, r12
     d12:	90 81       	ld	r25, Z
     d14:	89 0f       	add	r24, r25
     d16:	80 83       	st	Z, r24
     d18:	d7 01       	movw	r26, r14
     d1a:	14 96       	adiw	r26, 0x04	; 4
     d1c:	6c 91       	ld	r22, X
     d1e:	14 97       	sbiw	r26, 0x04	; 4
     d20:	13 96       	adiw	r26, 0x03	; 3
     d22:	8c 91       	ld	r24, X
     d24:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     d28:	f6 01       	movw	r30, r12
     d2a:	81 83       	std	Z+1, r24	; 0x01
     d2c:	d7 01       	movw	r26, r14
     d2e:	17 96       	adiw	r26, 0x07	; 7
     d30:	6c 91       	ld	r22, X
     d32:	17 97       	sbiw	r26, 0x07	; 7
     d34:	16 96       	adiw	r26, 0x06	; 6
     d36:	8c 91       	ld	r24, X
     d38:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     d3c:	f6 01       	movw	r30, r12
     d3e:	82 83       	std	Z+2, r24	; 0x02
     d40:	d7 01       	movw	r26, r14
     d42:	19 96       	adiw	r26, 0x09	; 9
     d44:	6c 91       	ld	r22, X
     d46:	19 97       	sbiw	r26, 0x09	; 9
     d48:	18 96       	adiw	r26, 0x08	; 8
     d4a:	8c 91       	ld	r24, X
     d4c:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     d50:	f6 01       	movw	r30, r12
     d52:	83 83       	std	Z+3, r24	; 0x03
     d54:	d7 01       	movw	r26, r14
     d56:	5a 96       	adiw	r26, 0x1a	; 26
     d58:	8c 91       	ld	r24, X
     d5a:	85 34       	cpi	r24, 0x45	; 69
     d5c:	21 f4       	brne	.+8      	; 0xd66 <gpsReqLocUblox+0x3e8>
     d5e:	8d e2       	ldi	r24, 0x2D	; 45
     d60:	80 93 e0 38 	sts	0x38E0, r24	; 0x8038e0 <gpsParams+0x4>
     d64:	03 c0       	rjmp	.+6      	; 0xd6c <gpsReqLocUblox+0x3ee>
     d66:	8b e2       	ldi	r24, 0x2B	; 43
     d68:	80 93 e0 38 	sts	0x38E0, r24	; 0x8038e0 <gpsParams+0x4>
     d6c:	f7 01       	movw	r30, r14
     d6e:	86 85       	ldd	r24, Z+14	; 0x0e
     d70:	81 33       	cpi	r24, 0x31	; 49
     d72:	19 f4       	brne	.+6      	; 0xd7a <gpsReqLocUblox+0x3fc>
     d74:	84 e6       	ldi	r24, 0x64	; 100
     d76:	80 93 e1 38 	sts	0x38E1, r24	; 0x8038e1 <gpsParams+0x5>
     d7a:	d7 01       	movw	r26, r14
     d7c:	50 96       	adiw	r26, 0x10	; 16
     d7e:	6c 91       	ld	r22, X
     d80:	50 97       	sbiw	r26, 0x10	; 16
     d82:	1f 96       	adiw	r26, 0x0f	; 15
     d84:	8c 91       	ld	r24, X
     d86:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     d8a:	0f 2e       	mov	r0, r31
     d8c:	fc ed       	ldi	r31, 0xDC	; 220
     d8e:	cf 2e       	mov	r12, r31
     d90:	f8 e3       	ldi	r31, 0x38	; 56
     d92:	df 2e       	mov	r13, r31
     d94:	f0 2d       	mov	r31, r0
     d96:	f6 01       	movw	r30, r12
     d98:	95 81       	ldd	r25, Z+5	; 0x05
     d9a:	89 0f       	add	r24, r25
     d9c:	85 83       	std	Z+5, r24	; 0x05
     d9e:	d7 01       	movw	r26, r14
     da0:	52 96       	adiw	r26, 0x12	; 18
     da2:	6c 91       	ld	r22, X
     da4:	52 97       	sbiw	r26, 0x12	; 18
     da6:	51 96       	adiw	r26, 0x11	; 17
     da8:	8c 91       	ld	r24, X
     daa:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     dae:	f6 01       	movw	r30, r12
     db0:	86 83       	std	Z+6, r24	; 0x06
     db2:	d7 01       	movw	r26, r14
     db4:	55 96       	adiw	r26, 0x15	; 21
     db6:	6c 91       	ld	r22, X
     db8:	55 97       	sbiw	r26, 0x15	; 21
     dba:	54 96       	adiw	r26, 0x14	; 20
     dbc:	8c 91       	ld	r24, X
     dbe:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     dc2:	f6 01       	movw	r30, r12
     dc4:	87 83       	std	Z+7, r24	; 0x07
     dc6:	d7 01       	movw	r26, r14
     dc8:	57 96       	adiw	r26, 0x17	; 23
     dca:	6c 91       	ld	r22, X
     dcc:	57 97       	sbiw	r26, 0x17	; 23
     dce:	56 96       	adiw	r26, 0x16	; 22
     dd0:	8c 91       	ld	r24, X
     dd2:	0e 94 c5 00 	call	0x18a	; 0x18a <asciiToHex>
     dd6:	f6 01       	movw	r30, r12
     dd8:	80 87       	std	Z+8, r24	; 0x08
     dda:	91 8a       	std	Z+17, r9	; 0x11
     ddc:	02 8b       	std	Z+18, r16	; 0x12
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	16 c0       	rjmp	.+44     	; 0xe10 <gpsReqLocUblox+0x492>
     de4:	8a e9       	ldi	r24, 0x9A	; 154
     de6:	92 e0       	ldi	r25, 0x02	; 2
     de8:	13 c0       	rjmp	.+38     	; 0xe10 <gpsReqLocUblox+0x492>
     dea:	8a e9       	ldi	r24, 0x9A	; 154
     dec:	92 e0       	ldi	r25, 0x02	; 2
     dee:	10 c0       	rjmp	.+32     	; 0xe10 <gpsReqLocUblox+0x492>
     df0:	8a e9       	ldi	r24, 0x9A	; 154
     df2:	92 e0       	ldi	r25, 0x02	; 2
     df4:	0d c0       	rjmp	.+26     	; 0xe10 <gpsReqLocUblox+0x492>
     df6:	8a e9       	ldi	r24, 0x9A	; 154
     df8:	92 e0       	ldi	r25, 0x02	; 2
     dfa:	0a c0       	rjmp	.+20     	; 0xe10 <gpsReqLocUblox+0x492>
     dfc:	8a e9       	ldi	r24, 0x9A	; 154
     dfe:	92 e0       	ldi	r25, 0x02	; 2
     e00:	07 c0       	rjmp	.+14     	; 0xe10 <gpsReqLocUblox+0x492>
     e02:	64 e6       	ldi	r22, 0x64	; 100
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	80 e0       	ldi	r24, 0x00	; 0
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
     e0e:	0a ce       	rjmp	.-1004   	; 0xa24 <gpsReqLocUblox+0xa6>
     e10:	af 96       	adiw	r28, 0x2f	; 47
     e12:	cd bf       	out	0x3d, r28	; 61
     e14:	de bf       	out	0x3e, r29	; 62
     e16:	df 91       	pop	r29
     e18:	cf 91       	pop	r28
     e1a:	1f 91       	pop	r17
     e1c:	0f 91       	pop	r16
     e1e:	ff 90       	pop	r15
     e20:	ef 90       	pop	r14
     e22:	df 90       	pop	r13
     e24:	cf 90       	pop	r12
     e26:	bf 90       	pop	r11
     e28:	af 90       	pop	r10
     e2a:	9f 90       	pop	r9
     e2c:	8f 90       	pop	r8
     e2e:	7f 90       	pop	r7
     e30:	08 95       	ret

00000e32 <GPSgetTime>:
     e32:	cf 93       	push	r28
     e34:	c8 2f       	mov	r28, r24
     e36:	0e 94 bf 04 	call	0x97e	; 0x97e <gpsReqLocUblox>
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	61 f4       	brne	.+24     	; 0xe56 <GPSgetTime+0x24>
     e3e:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     e42:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     e46:	23 a5       	ldd	r18, Z+43	; 0x2b
     e48:	28 35       	cpi	r18, 0x58	; 88
     e4a:	29 f0       	breq	.+10     	; 0xe56 <GPSgetTime+0x24>
     e4c:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
     e50:	24 30       	cpi	r18, 0x04	; 4
     e52:	08 f0       	brcs	.+2      	; 0xe56 <GPSgetTime+0x24>
     e54:	49 c0       	rjmp	.+146    	; 0xee8 <GPSgetTime+0xb6>
     e56:	8c 2f       	mov	r24, r28
     e58:	0e 94 bf 04 	call	0x97e	; 0x97e <gpsReqLocUblox>
     e5c:	00 97       	sbiw	r24, 0x00	; 0
     e5e:	59 f4       	brne	.+22     	; 0xe76 <GPSgetTime+0x44>
     e60:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     e64:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     e68:	23 a5       	ldd	r18, Z+43	; 0x2b
     e6a:	28 35       	cpi	r18, 0x58	; 88
     e6c:	21 f0       	breq	.+8      	; 0xe76 <GPSgetTime+0x44>
     e6e:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
     e72:	24 30       	cpi	r18, 0x04	; 4
     e74:	c8 f5       	brcc	.+114    	; 0xee8 <GPSgetTime+0xb6>
     e76:	8c 2f       	mov	r24, r28
     e78:	0e 94 bf 04 	call	0x97e	; 0x97e <gpsReqLocUblox>
     e7c:	00 97       	sbiw	r24, 0x00	; 0
     e7e:	59 f4       	brne	.+22     	; 0xe96 <GPSgetTime+0x64>
     e80:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     e84:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     e88:	23 a5       	ldd	r18, Z+43	; 0x2b
     e8a:	28 35       	cpi	r18, 0x58	; 88
     e8c:	21 f0       	breq	.+8      	; 0xe96 <GPSgetTime+0x64>
     e8e:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
     e92:	24 30       	cpi	r18, 0x04	; 4
     e94:	48 f5       	brcc	.+82     	; 0xee8 <GPSgetTime+0xb6>
     e96:	8c 2f       	mov	r24, r28
     e98:	0e 94 bf 04 	call	0x97e	; 0x97e <gpsReqLocUblox>
     e9c:	00 97       	sbiw	r24, 0x00	; 0
     e9e:	59 f4       	brne	.+22     	; 0xeb6 <GPSgetTime+0x84>
     ea0:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     ea4:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     ea8:	23 a5       	ldd	r18, Z+43	; 0x2b
     eaa:	28 35       	cpi	r18, 0x58	; 88
     eac:	21 f0       	breq	.+8      	; 0xeb6 <GPSgetTime+0x84>
     eae:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
     eb2:	24 30       	cpi	r18, 0x04	; 4
     eb4:	c8 f4       	brcc	.+50     	; 0xee8 <GPSgetTime+0xb6>
     eb6:	8c 2f       	mov	r24, r28
     eb8:	0e 94 bf 04 	call	0x97e	; 0x97e <gpsReqLocUblox>
     ebc:	00 97       	sbiw	r24, 0x00	; 0
     ebe:	61 f4       	brne	.+24     	; 0xed8 <GPSgetTime+0xa6>
     ec0:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     ec4:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     ec8:	23 a5       	ldd	r18, Z+43	; 0x2b
     eca:	28 35       	cpi	r18, 0x58	; 88
     ecc:	41 f0       	breq	.+16     	; 0xede <GPSgetTime+0xac>
     ece:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
     ed2:	24 30       	cpi	r18, 0x04	; 4
     ed4:	38 f0       	brcs	.+14     	; 0xee4 <GPSgetTime+0xb2>
     ed6:	08 c0       	rjmp	.+16     	; 0xee8 <GPSgetTime+0xb6>
     ed8:	8a e9       	ldi	r24, 0x9A	; 154
     eda:	92 e0       	ldi	r25, 0x02	; 2
     edc:	05 c0       	rjmp	.+10     	; 0xee8 <GPSgetTime+0xb6>
     ede:	8a e9       	ldi	r24, 0x9A	; 154
     ee0:	92 e0       	ldi	r25, 0x02	; 2
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <GPSgetTime+0xb6>
     ee4:	8a e9       	ldi	r24, 0x9A	; 154
     ee6:	92 e0       	ldi	r25, 0x02	; 2
     ee8:	cf 91       	pop	r28
     eea:	08 95       	ret

00000eec <calcCRC>:
     eec:	0f 93       	push	r16
     eee:	1f 93       	push	r17
     ef0:	cf 93       	push	r28
     ef2:	df 93       	push	r29
     ef4:	66 23       	and	r22, r22
     ef6:	c1 f1       	breq	.+112    	; 0xf68 <calcCRC+0x7c>
     ef8:	ec 01       	movw	r28, r24
     efa:	8c 01       	movw	r16, r24
     efc:	06 0f       	add	r16, r22
     efe:	11 1d       	adc	r17, r1
     f00:	8f ef       	ldi	r24, 0xFF	; 255
     f02:	9f ef       	ldi	r25, 0xFF	; 255
     f04:	1b c0       	rjmp	.+54     	; 0xf3c <calcCRC+0x50>
     f06:	bc 01       	movw	r22, r24
     f08:	66 0f       	add	r22, r22
     f0a:	77 1f       	adc	r23, r23
     f0c:	fd 01       	movw	r30, r26
     f0e:	e4 23       	and	r30, r20
     f10:	f5 23       	and	r31, r21
     f12:	ef 2b       	or	r30, r31
     f14:	11 f0       	breq	.+4      	; 0xf1a <calcCRC+0x2e>
     f16:	6f 5f       	subi	r22, 0xFF	; 255
     f18:	7f 4f       	sbci	r23, 0xFF	; 255
     f1a:	56 95       	lsr	r21
     f1c:	47 95       	ror	r20
     f1e:	99 23       	and	r25, r25
     f20:	34 f4       	brge	.+12     	; 0xf2e <calcCRC+0x42>
     f22:	cb 01       	movw	r24, r22
     f24:	e1 e2       	ldi	r30, 0x21	; 33
     f26:	8e 27       	eor	r24, r30
     f28:	e0 e1       	ldi	r30, 0x10	; 16
     f2a:	9e 27       	eor	r25, r30
     f2c:	01 c0       	rjmp	.+2      	; 0xf30 <calcCRC+0x44>
     f2e:	cb 01       	movw	r24, r22
     f30:	21 50       	subi	r18, 0x01	; 1
     f32:	31 09       	sbc	r19, r1
     f34:	41 f7       	brne	.-48     	; 0xf06 <calcCRC+0x1a>
     f36:	0c 17       	cp	r16, r28
     f38:	1d 07       	cpc	r17, r29
     f3a:	c1 f0       	breq	.+48     	; 0xf6c <calcCRC+0x80>
     f3c:	a9 91       	ld	r26, Y+
     f3e:	b0 e0       	ldi	r27, 0x00	; 0
     f40:	28 e0       	ldi	r18, 0x08	; 8
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	40 e8       	ldi	r20, 0x80	; 128
     f46:	50 e0       	ldi	r21, 0x00	; 0
     f48:	de cf       	rjmp	.-68     	; 0xf06 <calcCRC+0x1a>
     f4a:	99 23       	and	r25, r25
     f4c:	3c f4       	brge	.+14     	; 0xf5c <calcCRC+0x70>
     f4e:	88 0f       	add	r24, r24
     f50:	99 1f       	adc	r25, r25
     f52:	41 e2       	ldi	r20, 0x21	; 33
     f54:	84 27       	eor	r24, r20
     f56:	40 e1       	ldi	r20, 0x10	; 16
     f58:	94 27       	eor	r25, r20
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <calcCRC+0x74>
     f5c:	88 0f       	add	r24, r24
     f5e:	99 1f       	adc	r25, r25
     f60:	21 50       	subi	r18, 0x01	; 1
     f62:	31 09       	sbc	r19, r1
     f64:	91 f7       	brne	.-28     	; 0xf4a <calcCRC+0x5e>
     f66:	05 c0       	rjmp	.+10     	; 0xf72 <calcCRC+0x86>
     f68:	8f ef       	ldi	r24, 0xFF	; 255
     f6a:	9f ef       	ldi	r25, 0xFF	; 255
     f6c:	20 e1       	ldi	r18, 0x10	; 16
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	ec cf       	rjmp	.-40     	; 0xf4a <calcCRC+0x5e>
     f72:	df 91       	pop	r29
     f74:	cf 91       	pop	r28
     f76:	1f 91       	pop	r17
     f78:	0f 91       	pop	r16
     f7a:	08 95       	ret

00000f7c <getByteFromBig>:
     f7c:	f8 94       	cli
     f7e:	20 98       	cbi	0x04, 0	; 4
     f80:	e0 e3       	ldi	r30, 0x30	; 48
     f82:	f4 e0       	ldi	r31, 0x04	; 4
     f84:	80 81       	ld	r24, Z
     f86:	87 7f       	andi	r24, 0xF7	; 247
     f88:	80 83       	st	Z, r24
     f8a:	43 98       	cbi	0x08, 3	; 8
     f8c:	e3 e5       	ldi	r30, 0x53	; 83
     f8e:	f4 e0       	ldi	r31, 0x04	; 4
     f90:	80 81       	ld	r24, Z
     f92:	87 7f       	andi	r24, 0xF7	; 247
     f94:	80 83       	st	Z, r24
     f96:	53 9b       	sbis	0x0a, 3	; 10
     f98:	06 c0       	rjmp	.+12     	; 0xfa6 <getByteFromBig+0x2a>
     f9a:	87 e8       	ldi	r24, 0x87	; 135
     f9c:	93 e1       	ldi	r25, 0x13	; 19
     f9e:	53 9b       	sbis	0x0a, 3	; 10
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <getByteFromBig+0x2a>
     fa2:	01 97       	sbiw	r24, 0x01	; 1
     fa4:	e1 f7       	brne	.-8      	; 0xf9e <getByteFromBig+0x22>
     fa6:	30 9b       	sbis	0x06, 0	; 6
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <getByteFromBig+0x32>
     faa:	80 e8       	ldi	r24, 0x80	; 128
     fac:	01 c0       	rjmp	.+2      	; 0xfb0 <getByteFromBig+0x34>
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	53 99       	sbic	0x0a, 3	; 10
     fb2:	68 c0       	rjmp	.+208    	; 0x1084 <getByteFromBig+0x108>
     fb4:	99 ef       	ldi	r25, 0xF9	; 249
     fb6:	53 99       	sbic	0x0a, 3	; 10
     fb8:	65 c0       	rjmp	.+202    	; 0x1084 <getByteFromBig+0x108>
     fba:	91 50       	subi	r25, 0x01	; 1
     fbc:	e1 f7       	brne	.-8      	; 0xfb6 <getByteFromBig+0x3a>
     fbe:	62 c0       	rjmp	.+196    	; 0x1084 <getByteFromBig+0x108>
     fc0:	53 9b       	sbis	0x0a, 3	; 10
     fc2:	02 c0       	rjmp	.+4      	; 0xfc8 <getByteFromBig+0x4c>
     fc4:	91 50       	subi	r25, 0x01	; 1
     fc6:	e1 f7       	brne	.-8      	; 0xfc0 <getByteFromBig+0x44>
     fc8:	30 99       	sbic	0x06, 0	; 6
     fca:	80 64       	ori	r24, 0x40	; 64
     fcc:	53 99       	sbic	0x0a, 3	; 10
     fce:	5e c0       	rjmp	.+188    	; 0x108c <getByteFromBig+0x110>
     fd0:	99 ef       	ldi	r25, 0xF9	; 249
     fd2:	53 99       	sbic	0x0a, 3	; 10
     fd4:	5b c0       	rjmp	.+182    	; 0x108c <getByteFromBig+0x110>
     fd6:	91 50       	subi	r25, 0x01	; 1
     fd8:	e1 f7       	brne	.-8      	; 0xfd2 <getByteFromBig+0x56>
     fda:	58 c0       	rjmp	.+176    	; 0x108c <getByteFromBig+0x110>
     fdc:	53 9b       	sbis	0x0a, 3	; 10
     fde:	02 c0       	rjmp	.+4      	; 0xfe4 <getByteFromBig+0x68>
     fe0:	91 50       	subi	r25, 0x01	; 1
     fe2:	e1 f7       	brne	.-8      	; 0xfdc <getByteFromBig+0x60>
     fe4:	30 99       	sbic	0x06, 0	; 6
     fe6:	80 62       	ori	r24, 0x20	; 32
     fe8:	53 99       	sbic	0x0a, 3	; 10
     fea:	54 c0       	rjmp	.+168    	; 0x1094 <getByteFromBig+0x118>
     fec:	99 ef       	ldi	r25, 0xF9	; 249
     fee:	53 99       	sbic	0x0a, 3	; 10
     ff0:	51 c0       	rjmp	.+162    	; 0x1094 <getByteFromBig+0x118>
     ff2:	91 50       	subi	r25, 0x01	; 1
     ff4:	e1 f7       	brne	.-8      	; 0xfee <getByteFromBig+0x72>
     ff6:	4e c0       	rjmp	.+156    	; 0x1094 <getByteFromBig+0x118>
     ff8:	53 9b       	sbis	0x0a, 3	; 10
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <getByteFromBig+0x84>
     ffc:	91 50       	subi	r25, 0x01	; 1
     ffe:	e1 f7       	brne	.-8      	; 0xff8 <getByteFromBig+0x7c>
    1000:	30 99       	sbic	0x06, 0	; 6
    1002:	80 61       	ori	r24, 0x10	; 16
    1004:	53 99       	sbic	0x0a, 3	; 10
    1006:	4a c0       	rjmp	.+148    	; 0x109c <getByteFromBig+0x120>
    1008:	99 ef       	ldi	r25, 0xF9	; 249
    100a:	53 99       	sbic	0x0a, 3	; 10
    100c:	47 c0       	rjmp	.+142    	; 0x109c <getByteFromBig+0x120>
    100e:	91 50       	subi	r25, 0x01	; 1
    1010:	e1 f7       	brne	.-8      	; 0x100a <getByteFromBig+0x8e>
    1012:	44 c0       	rjmp	.+136    	; 0x109c <getByteFromBig+0x120>
    1014:	53 9b       	sbis	0x0a, 3	; 10
    1016:	02 c0       	rjmp	.+4      	; 0x101c <getByteFromBig+0xa0>
    1018:	91 50       	subi	r25, 0x01	; 1
    101a:	e1 f7       	brne	.-8      	; 0x1014 <getByteFromBig+0x98>
    101c:	30 99       	sbic	0x06, 0	; 6
    101e:	88 60       	ori	r24, 0x08	; 8
    1020:	53 99       	sbic	0x0a, 3	; 10
    1022:	40 c0       	rjmp	.+128    	; 0x10a4 <getByteFromBig+0x128>
    1024:	99 ef       	ldi	r25, 0xF9	; 249
    1026:	53 99       	sbic	0x0a, 3	; 10
    1028:	3d c0       	rjmp	.+122    	; 0x10a4 <getByteFromBig+0x128>
    102a:	91 50       	subi	r25, 0x01	; 1
    102c:	e1 f7       	brne	.-8      	; 0x1026 <getByteFromBig+0xaa>
    102e:	3a c0       	rjmp	.+116    	; 0x10a4 <getByteFromBig+0x128>
    1030:	53 9b       	sbis	0x0a, 3	; 10
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <getByteFromBig+0xbc>
    1034:	91 50       	subi	r25, 0x01	; 1
    1036:	e1 f7       	brne	.-8      	; 0x1030 <getByteFromBig+0xb4>
    1038:	30 99       	sbic	0x06, 0	; 6
    103a:	84 60       	ori	r24, 0x04	; 4
    103c:	53 99       	sbic	0x0a, 3	; 10
    103e:	36 c0       	rjmp	.+108    	; 0x10ac <getByteFromBig+0x130>
    1040:	99 ef       	ldi	r25, 0xF9	; 249
    1042:	53 99       	sbic	0x0a, 3	; 10
    1044:	33 c0       	rjmp	.+102    	; 0x10ac <getByteFromBig+0x130>
    1046:	91 50       	subi	r25, 0x01	; 1
    1048:	e1 f7       	brne	.-8      	; 0x1042 <getByteFromBig+0xc6>
    104a:	30 c0       	rjmp	.+96     	; 0x10ac <getByteFromBig+0x130>
    104c:	53 9b       	sbis	0x0a, 3	; 10
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <getByteFromBig+0xd8>
    1050:	91 50       	subi	r25, 0x01	; 1
    1052:	e1 f7       	brne	.-8      	; 0x104c <getByteFromBig+0xd0>
    1054:	30 99       	sbic	0x06, 0	; 6
    1056:	82 60       	ori	r24, 0x02	; 2
    1058:	53 99       	sbic	0x0a, 3	; 10
    105a:	2c c0       	rjmp	.+88     	; 0x10b4 <getByteFromBig+0x138>
    105c:	99 ef       	ldi	r25, 0xF9	; 249
    105e:	53 99       	sbic	0x0a, 3	; 10
    1060:	29 c0       	rjmp	.+82     	; 0x10b4 <getByteFromBig+0x138>
    1062:	91 50       	subi	r25, 0x01	; 1
    1064:	e1 f7       	brne	.-8      	; 0x105e <getByteFromBig+0xe2>
    1066:	26 c0       	rjmp	.+76     	; 0x10b4 <getByteFromBig+0x138>
    1068:	53 9b       	sbis	0x0a, 3	; 10
    106a:	02 c0       	rjmp	.+4      	; 0x1070 <getByteFromBig+0xf4>
    106c:	91 50       	subi	r25, 0x01	; 1
    106e:	e1 f7       	brne	.-8      	; 0x1068 <getByteFromBig+0xec>
    1070:	30 99       	sbic	0x06, 0	; 6
    1072:	81 60       	ori	r24, 0x01	; 1
    1074:	53 99       	sbic	0x0a, 3	; 10
    1076:	22 c0       	rjmp	.+68     	; 0x10bc <getByteFromBig+0x140>
    1078:	99 ef       	ldi	r25, 0xF9	; 249
    107a:	53 99       	sbic	0x0a, 3	; 10
    107c:	1f c0       	rjmp	.+62     	; 0x10bc <getByteFromBig+0x140>
    107e:	91 50       	subi	r25, 0x01	; 1
    1080:	e1 f7       	brne	.-8      	; 0x107a <getByteFromBig+0xfe>
    1082:	08 95       	ret
    1084:	53 9b       	sbis	0x0a, 3	; 10
    1086:	a0 cf       	rjmp	.-192    	; 0xfc8 <getByteFromBig+0x4c>
    1088:	99 ef       	ldi	r25, 0xF9	; 249
    108a:	9a cf       	rjmp	.-204    	; 0xfc0 <getByteFromBig+0x44>
    108c:	53 9b       	sbis	0x0a, 3	; 10
    108e:	aa cf       	rjmp	.-172    	; 0xfe4 <getByteFromBig+0x68>
    1090:	99 ef       	ldi	r25, 0xF9	; 249
    1092:	a4 cf       	rjmp	.-184    	; 0xfdc <getByteFromBig+0x60>
    1094:	53 9b       	sbis	0x0a, 3	; 10
    1096:	b4 cf       	rjmp	.-152    	; 0x1000 <getByteFromBig+0x84>
    1098:	99 ef       	ldi	r25, 0xF9	; 249
    109a:	ae cf       	rjmp	.-164    	; 0xff8 <getByteFromBig+0x7c>
    109c:	53 9b       	sbis	0x0a, 3	; 10
    109e:	be cf       	rjmp	.-132    	; 0x101c <getByteFromBig+0xa0>
    10a0:	99 ef       	ldi	r25, 0xF9	; 249
    10a2:	b8 cf       	rjmp	.-144    	; 0x1014 <getByteFromBig+0x98>
    10a4:	53 9b       	sbis	0x0a, 3	; 10
    10a6:	c8 cf       	rjmp	.-112    	; 0x1038 <getByteFromBig+0xbc>
    10a8:	99 ef       	ldi	r25, 0xF9	; 249
    10aa:	c2 cf       	rjmp	.-124    	; 0x1030 <getByteFromBig+0xb4>
    10ac:	53 9b       	sbis	0x0a, 3	; 10
    10ae:	d2 cf       	rjmp	.-92     	; 0x1054 <getByteFromBig+0xd8>
    10b0:	99 ef       	ldi	r25, 0xF9	; 249
    10b2:	cc cf       	rjmp	.-104    	; 0x104c <getByteFromBig+0xd0>
    10b4:	53 9b       	sbis	0x0a, 3	; 10
    10b6:	dc cf       	rjmp	.-72     	; 0x1070 <getByteFromBig+0xf4>
    10b8:	99 ef       	ldi	r25, 0xF9	; 249
    10ba:	d6 cf       	rjmp	.-84     	; 0x1068 <getByteFromBig+0xec>
    10bc:	08 95       	ret

000010be <sendByteToBig>:
    10be:	20 9a       	sbi	0x04, 0	; 4
    10c0:	88 23       	and	r24, r24
    10c2:	14 f0       	brlt	.+4      	; 0x10c8 <sendByteToBig+0xa>
    10c4:	28 98       	cbi	0x05, 0	; 5
    10c6:	93 c0       	rjmp	.+294    	; 0x11ee <sendByteToBig+0x130>
    10c8:	28 9a       	sbi	0x05, 0	; 5
    10ca:	91 c0       	rjmp	.+290    	; 0x11ee <sendByteToBig+0x130>
    10cc:	29 ef       	ldi	r18, 0xF9	; 249
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	53 9b       	sbis	0x0a, 3	; 10
    10d2:	8f c0       	rjmp	.+286    	; 0x11f2 <sendByteToBig+0x134>
    10d4:	21 50       	subi	r18, 0x01	; 1
    10d6:	31 09       	sbc	r19, r1
    10d8:	d9 f7       	brne	.-10     	; 0x10d0 <sendByteToBig+0x12>
    10da:	8b c0       	rjmp	.+278    	; 0x11f2 <sendByteToBig+0x134>
    10dc:	53 99       	sbic	0x0a, 3	; 10
    10de:	03 c0       	rjmp	.+6      	; 0x10e6 <sendByteToBig+0x28>
    10e0:	21 50       	subi	r18, 0x01	; 1
    10e2:	31 09       	sbc	r19, r1
    10e4:	d9 f7       	brne	.-10     	; 0x10dc <sendByteToBig+0x1e>
    10e6:	86 fd       	sbrc	r24, 6
    10e8:	02 c0       	rjmp	.+4      	; 0x10ee <sendByteToBig+0x30>
    10ea:	28 98       	cbi	0x05, 0	; 5
    10ec:	87 c0       	rjmp	.+270    	; 0x11fc <sendByteToBig+0x13e>
    10ee:	28 9a       	sbi	0x05, 0	; 5
    10f0:	85 c0       	rjmp	.+266    	; 0x11fc <sendByteToBig+0x13e>
    10f2:	29 ef       	ldi	r18, 0xF9	; 249
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	53 9b       	sbis	0x0a, 3	; 10
    10f8:	83 c0       	rjmp	.+262    	; 0x1200 <sendByteToBig+0x142>
    10fa:	21 50       	subi	r18, 0x01	; 1
    10fc:	31 09       	sbc	r19, r1
    10fe:	d9 f7       	brne	.-10     	; 0x10f6 <sendByteToBig+0x38>
    1100:	7f c0       	rjmp	.+254    	; 0x1200 <sendByteToBig+0x142>
    1102:	53 99       	sbic	0x0a, 3	; 10
    1104:	03 c0       	rjmp	.+6      	; 0x110c <sendByteToBig+0x4e>
    1106:	21 50       	subi	r18, 0x01	; 1
    1108:	31 09       	sbc	r19, r1
    110a:	d9 f7       	brne	.-10     	; 0x1102 <sendByteToBig+0x44>
    110c:	85 fd       	sbrc	r24, 5
    110e:	02 c0       	rjmp	.+4      	; 0x1114 <sendByteToBig+0x56>
    1110:	28 98       	cbi	0x05, 0	; 5
    1112:	7b c0       	rjmp	.+246    	; 0x120a <sendByteToBig+0x14c>
    1114:	28 9a       	sbi	0x05, 0	; 5
    1116:	79 c0       	rjmp	.+242    	; 0x120a <sendByteToBig+0x14c>
    1118:	29 ef       	ldi	r18, 0xF9	; 249
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	53 9b       	sbis	0x0a, 3	; 10
    111e:	77 c0       	rjmp	.+238    	; 0x120e <sendByteToBig+0x150>
    1120:	21 50       	subi	r18, 0x01	; 1
    1122:	31 09       	sbc	r19, r1
    1124:	d9 f7       	brne	.-10     	; 0x111c <sendByteToBig+0x5e>
    1126:	73 c0       	rjmp	.+230    	; 0x120e <sendByteToBig+0x150>
    1128:	53 99       	sbic	0x0a, 3	; 10
    112a:	03 c0       	rjmp	.+6      	; 0x1132 <sendByteToBig+0x74>
    112c:	21 50       	subi	r18, 0x01	; 1
    112e:	31 09       	sbc	r19, r1
    1130:	d9 f7       	brne	.-10     	; 0x1128 <sendByteToBig+0x6a>
    1132:	84 fd       	sbrc	r24, 4
    1134:	02 c0       	rjmp	.+4      	; 0x113a <sendByteToBig+0x7c>
    1136:	28 98       	cbi	0x05, 0	; 5
    1138:	6f c0       	rjmp	.+222    	; 0x1218 <sendByteToBig+0x15a>
    113a:	28 9a       	sbi	0x05, 0	; 5
    113c:	6d c0       	rjmp	.+218    	; 0x1218 <sendByteToBig+0x15a>
    113e:	29 ef       	ldi	r18, 0xF9	; 249
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	53 9b       	sbis	0x0a, 3	; 10
    1144:	6b c0       	rjmp	.+214    	; 0x121c <sendByteToBig+0x15e>
    1146:	21 50       	subi	r18, 0x01	; 1
    1148:	31 09       	sbc	r19, r1
    114a:	d9 f7       	brne	.-10     	; 0x1142 <sendByteToBig+0x84>
    114c:	67 c0       	rjmp	.+206    	; 0x121c <sendByteToBig+0x15e>
    114e:	53 99       	sbic	0x0a, 3	; 10
    1150:	03 c0       	rjmp	.+6      	; 0x1158 <sendByteToBig+0x9a>
    1152:	21 50       	subi	r18, 0x01	; 1
    1154:	31 09       	sbc	r19, r1
    1156:	d9 f7       	brne	.-10     	; 0x114e <sendByteToBig+0x90>
    1158:	83 fd       	sbrc	r24, 3
    115a:	02 c0       	rjmp	.+4      	; 0x1160 <sendByteToBig+0xa2>
    115c:	28 98       	cbi	0x05, 0	; 5
    115e:	63 c0       	rjmp	.+198    	; 0x1226 <sendByteToBig+0x168>
    1160:	28 9a       	sbi	0x05, 0	; 5
    1162:	61 c0       	rjmp	.+194    	; 0x1226 <sendByteToBig+0x168>
    1164:	29 ef       	ldi	r18, 0xF9	; 249
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	53 9b       	sbis	0x0a, 3	; 10
    116a:	5f c0       	rjmp	.+190    	; 0x122a <sendByteToBig+0x16c>
    116c:	21 50       	subi	r18, 0x01	; 1
    116e:	31 09       	sbc	r19, r1
    1170:	d9 f7       	brne	.-10     	; 0x1168 <sendByteToBig+0xaa>
    1172:	5b c0       	rjmp	.+182    	; 0x122a <sendByteToBig+0x16c>
    1174:	53 99       	sbic	0x0a, 3	; 10
    1176:	03 c0       	rjmp	.+6      	; 0x117e <sendByteToBig+0xc0>
    1178:	21 50       	subi	r18, 0x01	; 1
    117a:	31 09       	sbc	r19, r1
    117c:	d9 f7       	brne	.-10     	; 0x1174 <sendByteToBig+0xb6>
    117e:	82 fd       	sbrc	r24, 2
    1180:	02 c0       	rjmp	.+4      	; 0x1186 <sendByteToBig+0xc8>
    1182:	28 98       	cbi	0x05, 0	; 5
    1184:	57 c0       	rjmp	.+174    	; 0x1234 <sendByteToBig+0x176>
    1186:	28 9a       	sbi	0x05, 0	; 5
    1188:	55 c0       	rjmp	.+170    	; 0x1234 <sendByteToBig+0x176>
    118a:	29 ef       	ldi	r18, 0xF9	; 249
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	53 9b       	sbis	0x0a, 3	; 10
    1190:	53 c0       	rjmp	.+166    	; 0x1238 <sendByteToBig+0x17a>
    1192:	21 50       	subi	r18, 0x01	; 1
    1194:	31 09       	sbc	r19, r1
    1196:	d9 f7       	brne	.-10     	; 0x118e <sendByteToBig+0xd0>
    1198:	4f c0       	rjmp	.+158    	; 0x1238 <sendByteToBig+0x17a>
    119a:	53 99       	sbic	0x0a, 3	; 10
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <sendByteToBig+0xe6>
    119e:	21 50       	subi	r18, 0x01	; 1
    11a0:	31 09       	sbc	r19, r1
    11a2:	d9 f7       	brne	.-10     	; 0x119a <sendByteToBig+0xdc>
    11a4:	81 fd       	sbrc	r24, 1
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <sendByteToBig+0xee>
    11a8:	28 98       	cbi	0x05, 0	; 5
    11aa:	4b c0       	rjmp	.+150    	; 0x1242 <sendByteToBig+0x184>
    11ac:	28 9a       	sbi	0x05, 0	; 5
    11ae:	49 c0       	rjmp	.+146    	; 0x1242 <sendByteToBig+0x184>
    11b0:	29 ef       	ldi	r18, 0xF9	; 249
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	53 9b       	sbis	0x0a, 3	; 10
    11b6:	47 c0       	rjmp	.+142    	; 0x1246 <sendByteToBig+0x188>
    11b8:	21 50       	subi	r18, 0x01	; 1
    11ba:	31 09       	sbc	r19, r1
    11bc:	d9 f7       	brne	.-10     	; 0x11b4 <sendByteToBig+0xf6>
    11be:	43 c0       	rjmp	.+134    	; 0x1246 <sendByteToBig+0x188>
    11c0:	53 99       	sbic	0x0a, 3	; 10
    11c2:	03 c0       	rjmp	.+6      	; 0x11ca <sendByteToBig+0x10c>
    11c4:	21 50       	subi	r18, 0x01	; 1
    11c6:	31 09       	sbc	r19, r1
    11c8:	d9 f7       	brne	.-10     	; 0x11c0 <sendByteToBig+0x102>
    11ca:	80 fd       	sbrc	r24, 0
    11cc:	02 c0       	rjmp	.+4      	; 0x11d2 <sendByteToBig+0x114>
    11ce:	28 98       	cbi	0x05, 0	; 5
    11d0:	3f c0       	rjmp	.+126    	; 0x1250 <sendByteToBig+0x192>
    11d2:	28 9a       	sbi	0x05, 0	; 5
    11d4:	3d c0       	rjmp	.+122    	; 0x1250 <sendByteToBig+0x192>
    11d6:	89 ef       	ldi	r24, 0xF9	; 249
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	53 9b       	sbis	0x0a, 3	; 10
    11dc:	3b c0       	rjmp	.+118    	; 0x1254 <sendByteToBig+0x196>
    11de:	01 97       	sbiw	r24, 0x01	; 1
    11e0:	e1 f7       	brne	.-8      	; 0x11da <sendByteToBig+0x11c>
    11e2:	38 c0       	rjmp	.+112    	; 0x1254 <sendByteToBig+0x196>
    11e4:	53 99       	sbic	0x0a, 3	; 10
    11e6:	3b c0       	rjmp	.+118    	; 0x125e <sendByteToBig+0x1a0>
    11e8:	01 97       	sbiw	r24, 0x01	; 1
    11ea:	e1 f7       	brne	.-8      	; 0x11e4 <sendByteToBig+0x126>
    11ec:	08 95       	ret
    11ee:	53 99       	sbic	0x0a, 3	; 10
    11f0:	6d cf       	rjmp	.-294    	; 0x10cc <sendByteToBig+0xe>
    11f2:	53 99       	sbic	0x0a, 3	; 10
    11f4:	78 cf       	rjmp	.-272    	; 0x10e6 <sendByteToBig+0x28>
    11f6:	29 ef       	ldi	r18, 0xF9	; 249
    11f8:	30 e0       	ldi	r19, 0x00	; 0
    11fa:	70 cf       	rjmp	.-288    	; 0x10dc <sendByteToBig+0x1e>
    11fc:	53 99       	sbic	0x0a, 3	; 10
    11fe:	79 cf       	rjmp	.-270    	; 0x10f2 <sendByteToBig+0x34>
    1200:	53 99       	sbic	0x0a, 3	; 10
    1202:	84 cf       	rjmp	.-248    	; 0x110c <sendByteToBig+0x4e>
    1204:	29 ef       	ldi	r18, 0xF9	; 249
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	7c cf       	rjmp	.-264    	; 0x1102 <sendByteToBig+0x44>
    120a:	53 99       	sbic	0x0a, 3	; 10
    120c:	85 cf       	rjmp	.-246    	; 0x1118 <sendByteToBig+0x5a>
    120e:	53 99       	sbic	0x0a, 3	; 10
    1210:	90 cf       	rjmp	.-224    	; 0x1132 <sendByteToBig+0x74>
    1212:	29 ef       	ldi	r18, 0xF9	; 249
    1214:	30 e0       	ldi	r19, 0x00	; 0
    1216:	88 cf       	rjmp	.-240    	; 0x1128 <sendByteToBig+0x6a>
    1218:	53 99       	sbic	0x0a, 3	; 10
    121a:	91 cf       	rjmp	.-222    	; 0x113e <sendByteToBig+0x80>
    121c:	53 99       	sbic	0x0a, 3	; 10
    121e:	9c cf       	rjmp	.-200    	; 0x1158 <sendByteToBig+0x9a>
    1220:	29 ef       	ldi	r18, 0xF9	; 249
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	94 cf       	rjmp	.-216    	; 0x114e <sendByteToBig+0x90>
    1226:	53 99       	sbic	0x0a, 3	; 10
    1228:	9d cf       	rjmp	.-198    	; 0x1164 <sendByteToBig+0xa6>
    122a:	53 99       	sbic	0x0a, 3	; 10
    122c:	a8 cf       	rjmp	.-176    	; 0x117e <sendByteToBig+0xc0>
    122e:	29 ef       	ldi	r18, 0xF9	; 249
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	a0 cf       	rjmp	.-192    	; 0x1174 <sendByteToBig+0xb6>
    1234:	53 99       	sbic	0x0a, 3	; 10
    1236:	a9 cf       	rjmp	.-174    	; 0x118a <sendByteToBig+0xcc>
    1238:	53 99       	sbic	0x0a, 3	; 10
    123a:	b4 cf       	rjmp	.-152    	; 0x11a4 <sendByteToBig+0xe6>
    123c:	29 ef       	ldi	r18, 0xF9	; 249
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	ac cf       	rjmp	.-168    	; 0x119a <sendByteToBig+0xdc>
    1242:	53 99       	sbic	0x0a, 3	; 10
    1244:	b5 cf       	rjmp	.-150    	; 0x11b0 <sendByteToBig+0xf2>
    1246:	53 99       	sbic	0x0a, 3	; 10
    1248:	c0 cf       	rjmp	.-128    	; 0x11ca <sendByteToBig+0x10c>
    124a:	29 ef       	ldi	r18, 0xF9	; 249
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	b8 cf       	rjmp	.-144    	; 0x11c0 <sendByteToBig+0x102>
    1250:	53 99       	sbic	0x0a, 3	; 10
    1252:	c1 cf       	rjmp	.-126    	; 0x11d6 <sendByteToBig+0x118>
    1254:	53 99       	sbic	0x0a, 3	; 10
    1256:	03 c0       	rjmp	.+6      	; 0x125e <sendByteToBig+0x1a0>
    1258:	89 ef       	ldi	r24, 0xF9	; 249
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	c3 cf       	rjmp	.-122    	; 0x11e4 <sendByteToBig+0x126>
    125e:	08 95       	ret

00001260 <send25BytesToBig>:
    1260:	0f 93       	push	r16
    1262:	1f 93       	push	r17
    1264:	cf 93       	push	r28
    1266:	df 93       	push	r29
    1268:	8c 01       	movw	r16, r24
    126a:	20 9a       	sbi	0x04, 0	; 4
    126c:	43 98       	cbi	0x08, 3	; 8
    126e:	67 e1       	ldi	r22, 0x17	; 23
    1270:	0e 94 76 07 	call	0xeec	; 0xeec <calcCRC>
    1274:	f8 01       	movw	r30, r16
    1276:	97 8b       	std	Z+23, r25	; 0x17
    1278:	80 8f       	std	Z+24, r24	; 0x18
    127a:	c0 e3       	ldi	r28, 0x30	; 48
    127c:	d5 e7       	ldi	r29, 0x75	; 117
    127e:	28 98       	cbi	0x05, 0	; 5
    1280:	61 e0       	ldi	r22, 0x01	; 1
    1282:	70 e0       	ldi	r23, 0x00	; 0
    1284:	80 e0       	ldi	r24, 0x00	; 0
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	0e 94 b6 01 	call	0x36c	; 0x36c <myDelay_hus>
    128c:	53 9b       	sbis	0x0a, 3	; 10
    128e:	1a c0       	rjmp	.+52     	; 0x12c4 <send25BytesToBig+0x64>
    1290:	21 97       	sbiw	r28, 0x01	; 1
    1292:	a9 f7       	brne	.-22     	; 0x127e <send25BytesToBig+0x1e>
    1294:	17 c0       	rjmp	.+46     	; 0x12c4 <send25BytesToBig+0x64>
    1296:	8f e2       	ldi	r24, 0x2F	; 47
    1298:	95 e7       	ldi	r25, 0x75	; 117
    129a:	53 9b       	sbis	0x0a, 3	; 10
    129c:	15 c0       	rjmp	.+42     	; 0x12c8 <send25BytesToBig+0x68>
    129e:	01 97       	sbiw	r24, 0x01	; 1
    12a0:	e1 f7       	brne	.-8      	; 0x129a <send25BytesToBig+0x3a>
    12a2:	12 c0       	rjmp	.+36     	; 0x12c8 <send25BytesToBig+0x68>
    12a4:	53 99       	sbic	0x0a, 3	; 10
    12a6:	02 c0       	rjmp	.+4      	; 0x12ac <send25BytesToBig+0x4c>
    12a8:	01 97       	sbiw	r24, 0x01	; 1
    12aa:	e1 f7       	brne	.-8      	; 0x12a4 <send25BytesToBig+0x44>
    12ac:	40 9a       	sbi	0x08, 0	; 8
    12ae:	48 9a       	sbi	0x09, 0	; 9
    12b0:	e8 01       	movw	r28, r16
    12b2:	07 5e       	subi	r16, 0xE7	; 231
    12b4:	1f 4f       	sbci	r17, 0xFF	; 255
    12b6:	89 91       	ld	r24, Y+
    12b8:	0e 94 5f 08 	call	0x10be	; 0x10be <sendByteToBig>
    12bc:	0c 17       	cp	r16, r28
    12be:	1d 07       	cpc	r17, r29
    12c0:	d1 f7       	brne	.-12     	; 0x12b6 <send25BytesToBig+0x56>
    12c2:	07 c0       	rjmp	.+14     	; 0x12d2 <send25BytesToBig+0x72>
    12c4:	53 99       	sbic	0x0a, 3	; 10
    12c6:	e7 cf       	rjmp	.-50     	; 0x1296 <send25BytesToBig+0x36>
    12c8:	53 99       	sbic	0x0a, 3	; 10
    12ca:	f0 cf       	rjmp	.-32     	; 0x12ac <send25BytesToBig+0x4c>
    12cc:	8f e2       	ldi	r24, 0x2F	; 47
    12ce:	95 e7       	ldi	r25, 0x75	; 117
    12d0:	e9 cf       	rjmp	.-46     	; 0x12a4 <send25BytesToBig+0x44>
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	1f 91       	pop	r17
    12d8:	0f 91       	pop	r16
    12da:	08 95       	ret

000012dc <getPacketFromBig>:
    12dc:	cf 92       	push	r12
    12de:	df 92       	push	r13
    12e0:	ef 92       	push	r14
    12e2:	ff 92       	push	r15
    12e4:	0f 93       	push	r16
    12e6:	1f 93       	push	r17
    12e8:	cf 93       	push	r28
    12ea:	df 93       	push	r29
    12ec:	cd b7       	in	r28, 0x3d	; 61
    12ee:	de b7       	in	r29, 0x3e	; 62
    12f0:	29 97       	sbiw	r28, 0x09	; 9
    12f2:	cd bf       	out	0x3d, r28	; 61
    12f4:	de bf       	out	0x3e, r29	; 62
    12f6:	f8 94       	cli
    12f8:	0e 94 be 07 	call	0xf7c	; 0xf7c <getByteFromBig>
    12fc:	89 83       	std	Y+1, r24	; 0x01
    12fe:	0e 94 be 07 	call	0xf7c	; 0xf7c <getByteFromBig>
    1302:	8a 83       	std	Y+2, r24	; 0x02
    1304:	0e 94 be 07 	call	0xf7c	; 0xf7c <getByteFromBig>
    1308:	8b 83       	std	Y+3, r24	; 0x03
    130a:	0e 94 be 07 	call	0xf7c	; 0xf7c <getByteFromBig>
    130e:	8c 83       	std	Y+4, r24	; 0x04
    1310:	62 e0       	ldi	r22, 0x02	; 2
    1312:	ce 01       	movw	r24, r28
    1314:	01 96       	adiw	r24, 0x01	; 1
    1316:	0e 94 76 07 	call	0xeec	; 0xeec <calcCRC>
    131a:	20 9a       	sbi	0x04, 0	; 4
    131c:	2b 81       	ldd	r18, Y+3	; 0x03
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	32 2f       	mov	r19, r18
    1322:	22 27       	eor	r18, r18
    1324:	4c 81       	ldd	r20, Y+4	; 0x04
    1326:	24 0f       	add	r18, r20
    1328:	31 1d       	adc	r19, r1
    132a:	82 17       	cp	r24, r18
    132c:	93 07       	cpc	r25, r19
    132e:	09 f0       	breq	.+2      	; 0x1332 <getPacketFromBig+0x56>
    1330:	46 c0       	rjmp	.+140    	; 0x13be <getPacketFromBig+0xe2>
    1332:	89 81       	ldd	r24, Y+1	; 0x01
    1334:	80 93 f8 38 	sts	0x38F8, r24	; 0x8038f8 <g_rcvdCmd>
    1338:	00 ec       	ldi	r16, 0xC0	; 192
    133a:	18 e3       	ldi	r17, 0x38	; 56
    133c:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <g_motionMinTotalDN>
    1340:	f8 01       	movw	r30, r16
    1342:	81 87       	std	Z+9, r24	; 0x09
    1344:	ea 81       	ldd	r30, Y+2	; 0x02
    1346:	f0 e0       	ldi	r31, 0x00	; 0
    1348:	e4 52       	subi	r30, 0x24	; 36
    134a:	f7 4c       	sbci	r31, 0xC7	; 199
    134c:	80 81       	ld	r24, Z
    134e:	f8 01       	movw	r30, r16
    1350:	80 8f       	std	Z+24, r24	; 0x18
    1352:	43 98       	cbi	0x08, 3	; 8
    1354:	6a e1       	ldi	r22, 0x1A	; 26
    1356:	c8 01       	movw	r24, r16
    1358:	0e 94 76 07 	call	0xeec	; 0xeec <calcCRC>
    135c:	f8 01       	movw	r30, r16
    135e:	92 8f       	std	Z+26, r25	; 0x1a
    1360:	83 8f       	std	Z+27, r24	; 0x1b
    1362:	80 81       	ld	r24, Z
    1364:	88 23       	and	r24, r24
    1366:	14 f0       	brlt	.+4      	; 0x136c <getPacketFromBig+0x90>
    1368:	28 98       	cbi	0x05, 0	; 5
    136a:	31 c0       	rjmp	.+98     	; 0x13ce <getPacketFromBig+0xf2>
    136c:	28 9a       	sbi	0x05, 0	; 5
    136e:	2f c0       	rjmp	.+94     	; 0x13ce <getPacketFromBig+0xf2>
    1370:	8f e2       	ldi	r24, 0x2F	; 47
    1372:	95 e7       	ldi	r25, 0x75	; 117
    1374:	53 9b       	sbis	0x0a, 3	; 10
    1376:	2d c0       	rjmp	.+90     	; 0x13d2 <getPacketFromBig+0xf6>
    1378:	01 97       	sbiw	r24, 0x01	; 1
    137a:	e1 f7       	brne	.-8      	; 0x1374 <getPacketFromBig+0x98>
    137c:	2a c0       	rjmp	.+84     	; 0x13d2 <getPacketFromBig+0xf6>
    137e:	f8 01       	movw	r30, r16
    1380:	81 91       	ld	r24, Z+
    1382:	8f 01       	movw	r16, r30
    1384:	0e 94 5f 08 	call	0x10be	; 0x10be <sendByteToBig>
    1388:	0c 15       	cp	r16, r12
    138a:	1d 05       	cpc	r17, r13
    138c:	c1 f7       	brne	.-16     	; 0x137e <getPacketFromBig+0xa2>
    138e:	20 98       	cbi	0x04, 0	; 4
    1390:	30 9b       	sbis	0x06, 0	; 6
    1392:	2d c0       	rjmp	.+90     	; 0x13ee <getPacketFromBig+0x112>
    1394:	88 ec       	ldi	r24, 0xC8	; 200
    1396:	02 c0       	rjmp	.+4      	; 0x139c <getPacketFromBig+0xc0>
    1398:	30 9b       	sbis	0x06, 0	; 6
    139a:	29 c0       	rjmp	.+82     	; 0x13ee <getPacketFromBig+0x112>
	...
    13a4:	81 50       	subi	r24, 0x01	; 1
    13a6:	c1 f7       	brne	.-16     	; 0x1398 <getPacketFromBig+0xbc>
    13a8:	0a c0       	rjmp	.+20     	; 0x13be <getPacketFromBig+0xe2>
    13aa:	f7 01       	movw	r30, r14
    13ac:	11 92       	st	Z+, r1
    13ae:	7f 01       	movw	r14, r30
    13b0:	8e 17       	cp	r24, r30
    13b2:	9f 07       	cpc	r25, r31
    13b4:	d1 f7       	brne	.-12     	; 0x13aa <getPacketFromBig+0xce>
    13b6:	e0 ec       	ldi	r30, 0xC0	; 192
    13b8:	f8 e3       	ldi	r31, 0x38	; 56
    13ba:	16 8a       	std	Z+22, r1	; 0x16
    13bc:	17 8a       	std	Z+23, r1	; 0x17
    13be:	e0 e4       	ldi	r30, 0x40	; 64
    13c0:	f4 e0       	ldi	r31, 0x04	; 4
    13c2:	81 85       	ldd	r24, Z+9	; 0x09
    13c4:	82 60       	ori	r24, 0x02	; 2
    13c6:	81 87       	std	Z+9, r24	; 0x09
    13c8:	78 94       	sei
    13ca:	89 81       	ldd	r24, Y+1	; 0x01
    13cc:	15 c0       	rjmp	.+42     	; 0x13f8 <getPacketFromBig+0x11c>
    13ce:	53 99       	sbic	0x0a, 3	; 10
    13d0:	cf cf       	rjmp	.-98     	; 0x1370 <getPacketFromBig+0x94>
    13d2:	0f 2e       	mov	r0, r31
    13d4:	f0 ec       	ldi	r31, 0xC0	; 192
    13d6:	ef 2e       	mov	r14, r31
    13d8:	f8 e3       	ldi	r31, 0x38	; 56
    13da:	ff 2e       	mov	r15, r31
    13dc:	f0 2d       	mov	r31, r0
    13de:	0f 2e       	mov	r0, r31
    13e0:	fc ed       	ldi	r31, 0xDC	; 220
    13e2:	cf 2e       	mov	r12, r31
    13e4:	f8 e3       	ldi	r31, 0x38	; 56
    13e6:	df 2e       	mov	r13, r31
    13e8:	f0 2d       	mov	r31, r0
    13ea:	87 01       	movw	r16, r14
    13ec:	c8 cf       	rjmp	.-112    	; 0x137e <getPacketFromBig+0xa2>
    13ee:	10 92 04 38 	sts	0x3804, r1	; 0x803804 <g_motionMinTotalDN>
    13f2:	86 ed       	ldi	r24, 0xD6	; 214
    13f4:	98 e3       	ldi	r25, 0x38	; 56
    13f6:	d9 cf       	rjmp	.-78     	; 0x13aa <getPacketFromBig+0xce>
    13f8:	29 96       	adiw	r28, 0x09	; 9
    13fa:	cd bf       	out	0x3d, r28	; 61
    13fc:	de bf       	out	0x3e, r29	; 62
    13fe:	df 91       	pop	r29
    1400:	cf 91       	pop	r28
    1402:	1f 91       	pop	r17
    1404:	0f 91       	pop	r16
    1406:	ff 90       	pop	r15
    1408:	ef 90       	pop	r14
    140a:	df 90       	pop	r13
    140c:	cf 90       	pop	r12
    140e:	08 95       	ret

00001410 <USART0_ON>:
    1410:	23 98       	cbi	0x04, 3	; 4
    1412:	e3 e3       	ldi	r30, 0x33	; 51
    1414:	f4 e0       	ldi	r31, 0x04	; 4
    1416:	90 81       	ld	r25, Z
    1418:	97 7f       	andi	r25, 0xF7	; 247
    141a:	90 83       	st	Z, r25
    141c:	2a 9a       	sbi	0x05, 2	; 5
    141e:	22 9a       	sbi	0x04, 2	; 4
    1420:	2c e6       	ldi	r18, 0x6C	; 108
    1422:	35 e0       	ldi	r19, 0x05	; 5
    1424:	20 93 08 08 	sts	0x0808, r18	; 0x800808 <__TEXT_REGION_LENGTH__+0x700808>
    1428:	30 93 09 08 	sts	0x0809, r19	; 0x800809 <__TEXT_REGION_LENGTH__+0x700809>
    142c:	88 23       	and	r24, r24
    142e:	21 f0       	breq	.+8      	; 0x1438 <USART0_ON+0x28>
    1430:	80 ec       	ldi	r24, 0xC0	; 192
    1432:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    1436:	10 c0       	rjmp	.+32     	; 0x1458 <USART0_ON+0x48>
    1438:	23 98       	cbi	0x04, 3	; 4
    143a:	e3 e3       	ldi	r30, 0x33	; 51
    143c:	f4 e0       	ldi	r31, 0x04	; 4
    143e:	80 81       	ld	r24, Z
    1440:	87 7f       	andi	r24, 0xF7	; 247
    1442:	80 83       	st	Z, r24
    1444:	2a 9a       	sbi	0x05, 2	; 5
    1446:	22 9a       	sbi	0x04, 2	; 4
    1448:	e0 e0       	ldi	r30, 0x00	; 0
    144a:	f8 e0       	ldi	r31, 0x08	; 8
    144c:	8c e6       	ldi	r24, 0x6C	; 108
    144e:	95 e0       	ldi	r25, 0x05	; 5
    1450:	80 87       	std	Z+8, r24	; 0x08
    1452:	91 87       	std	Z+9, r25	; 0x09
    1454:	80 e4       	ldi	r24, 0x40	; 64
    1456:	86 83       	std	Z+6, r24	; 0x06
    1458:	e0 e0       	ldi	r30, 0x00	; 0
    145a:	f8 e0       	ldi	r31, 0x08	; 8
    145c:	81 81       	ldd	r24, Z+1	; 0x01
    145e:	80 81       	ld	r24, Z
    1460:	08 95       	ret

00001462 <openGPSuBlox>:
    1462:	04 98       	cbi	0x00, 4	; 0
    1464:	e4 e1       	ldi	r30, 0x14	; 20
    1466:	f4 e0       	ldi	r31, 0x04	; 4
    1468:	80 81       	ld	r24, Z
    146a:	88 60       	ori	r24, 0x08	; 8
    146c:	80 83       	st	Z, r24
    146e:	45 9a       	sbi	0x08, 5	; 8
    1470:	4d 9a       	sbi	0x09, 5	; 9
    1472:	8a e0       	ldi	r24, 0x0A	; 10
    1474:	98 e3       	ldi	r25, 0x38	; 56
    1476:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
    147a:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	0e 94 08 0a 	call	0x1410	; 0x1410 <USART0_ON>
    1484:	08 95       	ret

00001486 <USART0_OFF>:
    1486:	10 92 06 08 	sts	0x0806, r1	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    148a:	23 9a       	sbi	0x04, 3	; 4
    148c:	22 9a       	sbi	0x04, 2	; 4
    148e:	2a 98       	cbi	0x05, 2	; 5
    1490:	2b 98       	cbi	0x05, 3	; 5
    1492:	e2 e3       	ldi	r30, 0x32	; 50
    1494:	f4 e0       	ldi	r31, 0x04	; 4
    1496:	80 81       	ld	r24, Z
    1498:	87 7f       	andi	r24, 0xF7	; 247
    149a:	80 83       	st	Z, r24
    149c:	e3 e3       	ldi	r30, 0x33	; 51
    149e:	f4 e0       	ldi	r31, 0x04	; 4
    14a0:	80 81       	ld	r24, Z
    14a2:	87 7f       	andi	r24, 0xF7	; 247
    14a4:	80 83       	st	Z, r24
    14a6:	08 95       	ret

000014a8 <closeGPS>:
    14a8:	45 9a       	sbi	0x08, 5	; 8
    14aa:	4d 98       	cbi	0x09, 5	; 9
    14ac:	e4 e1       	ldi	r30, 0x14	; 20
    14ae:	f4 e0       	ldi	r31, 0x04	; 4
    14b0:	80 81       	ld	r24, Z
    14b2:	87 7f       	andi	r24, 0xF7	; 247
    14b4:	80 83       	st	Z, r24
    14b6:	04 9a       	sbi	0x00, 4	; 0
    14b8:	0c 98       	cbi	0x01, 4	; 1
    14ba:	0e 94 43 0a 	call	0x1486	; 0x1486 <USART0_OFF>
    14be:	08 95       	ret

000014c0 <gTryUblox>:
    14c0:	af 92       	push	r10
    14c2:	bf 92       	push	r11
    14c4:	cf 92       	push	r12
    14c6:	df 92       	push	r13
    14c8:	ef 92       	push	r14
    14ca:	ff 92       	push	r15
    14cc:	0f 93       	push	r16
    14ce:	1f 93       	push	r17
    14d0:	cf 93       	push	r28
    14d2:	df 93       	push	r29
    14d4:	e8 2e       	mov	r14, r24
    14d6:	68 94       	set
    14d8:	aa 24       	eor	r10, r10
    14da:	a3 f8       	bld	r10, 3
    14dc:	00 e0       	ldi	r16, 0x00	; 0
    14de:	18 e0       	ldi	r17, 0x08	; 8
    14e0:	c6 e3       	ldi	r28, 0x36	; 54
    14e2:	d4 e0       	ldi	r29, 0x04	; 4
    14e4:	0f 2e       	mov	r0, r31
    14e6:	f9 ef       	ldi	r31, 0xF9	; 249
    14e8:	bf 2e       	mov	r11, r31
    14ea:	f0 2d       	mov	r31, r0
    14ec:	0f 2e       	mov	r0, r31
    14ee:	f3 e0       	ldi	r31, 0x03	; 3
    14f0:	ff 2e       	mov	r15, r31
    14f2:	f0 2d       	mov	r31, r0
    14f4:	a8 95       	wdr
    14f6:	6a ef       	ldi	r22, 0xFA	; 250
    14f8:	70 e0       	ldi	r23, 0x00	; 0
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
    1502:	0e 94 3c 02 	call	0x478	; 0x478 <clrRx>
    1506:	f8 01       	movw	r30, r16
    1508:	85 81       	ldd	r24, Z+5	; 0x05
    150a:	80 68       	ori	r24, 0x80	; 128
    150c:	85 83       	std	Z+5, r24	; 0x05
    150e:	78 94       	sei
    1510:	8e 2d       	mov	r24, r14
    1512:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <gpsReqStatusUblox>
    1516:	6c 01       	movw	r12, r24
    1518:	88 81       	ld	r24, Y
    151a:	88 7f       	andi	r24, 0xF8	; 248
    151c:	82 60       	ori	r24, 0x02	; 2
    151e:	88 83       	st	Y, r24
    1520:	ee 20       	and	r14, r14
    1522:	19 f0       	breq	.+6      	; 0x152a <gTryUblox+0x6a>
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
    152a:	fa 94       	dec	r15
    152c:	ff 20       	and	r15, r15
    152e:	29 f0       	breq	.+10     	; 0x153a <gTryUblox+0x7a>
    1530:	fa e9       	ldi	r31, 0x9A	; 154
    1532:	cf 16       	cp	r12, r31
    1534:	f2 e0       	ldi	r31, 0x02	; 2
    1536:	df 06       	cpc	r13, r31
    1538:	e9 f2       	breq	.-70     	; 0x14f4 <gTryUblox+0x34>
    153a:	ee 20       	and	r14, r14
    153c:	19 f0       	breq	.+6      	; 0x1544 <gTryUblox+0x84>
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
    1544:	ba 94       	dec	r11
    1546:	bb 20       	and	r11, r11
    1548:	31 f0       	breq	.+12     	; 0x1556 <gTryUblox+0x96>
    154a:	8a e9       	ldi	r24, 0x9A	; 154
    154c:	c8 16       	cp	r12, r24
    154e:	82 e0       	ldi	r24, 0x02	; 2
    1550:	d8 06       	cpc	r13, r24
    1552:	61 f2       	breq	.-104    	; 0x14ec <gTryUblox+0x2c>
    1554:	15 c0       	rjmp	.+42     	; 0x1580 <gTryUblox+0xc0>
    1556:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <closeGPS>
    155a:	68 ee       	ldi	r22, 0xE8	; 232
    155c:	73 e0       	ldi	r23, 0x03	; 3
    155e:	80 e0       	ldi	r24, 0x00	; 0
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
    1566:	0e 94 31 0a 	call	0x1462	; 0x1462 <openGPSuBlox>
    156a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <initGPSuBlox>
    156e:	aa 94       	dec	r10
    1570:	aa 20       	and	r10, r10
    1572:	31 f0       	breq	.+12     	; 0x1580 <gTryUblox+0xc0>
    1574:	ea e9       	ldi	r30, 0x9A	; 154
    1576:	ce 16       	cp	r12, r30
    1578:	e2 e0       	ldi	r30, 0x02	; 2
    157a:	de 06       	cpc	r13, r30
    157c:	09 f4       	brne	.+2      	; 0x1580 <gTryUblox+0xc0>
    157e:	b2 cf       	rjmp	.-156    	; 0x14e4 <gTryUblox+0x24>
    1580:	c6 01       	movw	r24, r12
    1582:	df 91       	pop	r29
    1584:	cf 91       	pop	r28
    1586:	1f 91       	pop	r17
    1588:	0f 91       	pop	r16
    158a:	ff 90       	pop	r15
    158c:	ef 90       	pop	r14
    158e:	df 90       	pop	r13
    1590:	cf 90       	pop	r12
    1592:	bf 90       	pop	r11
    1594:	af 90       	pop	r10
    1596:	08 95       	ret

00001598 <sleepPins>:
    1598:	00 98       	cbi	0x00, 0	; 0
    159a:	e0 e1       	ldi	r30, 0x10	; 16
    159c:	f4 e0       	ldi	r31, 0x04	; 4
    159e:	90 81       	ld	r25, Z
    15a0:	98 60       	ori	r25, 0x08	; 8
    15a2:	90 83       	st	Z, r25
    15a4:	01 98       	cbi	0x00, 1	; 0
    15a6:	e1 e1       	ldi	r30, 0x11	; 17
    15a8:	f4 e0       	ldi	r31, 0x04	; 4
    15aa:	90 81       	ld	r25, Z
    15ac:	98 60       	ori	r25, 0x08	; 8
    15ae:	90 83       	st	Z, r25
    15b0:	02 98       	cbi	0x00, 2	; 0
    15b2:	e2 e1       	ldi	r30, 0x12	; 18
    15b4:	f4 e0       	ldi	r31, 0x04	; 4
    15b6:	90 81       	ld	r25, Z
    15b8:	98 60       	ori	r25, 0x08	; 8
    15ba:	90 83       	st	Z, r25
    15bc:	03 98       	cbi	0x00, 3	; 0
    15be:	e3 e1       	ldi	r30, 0x13	; 19
    15c0:	f4 e0       	ldi	r31, 0x04	; 4
    15c2:	90 81       	ld	r25, Z
    15c4:	98 60       	ori	r25, 0x08	; 8
    15c6:	90 83       	st	Z, r25
    15c8:	e4 e1       	ldi	r30, 0x14	; 20
    15ca:	f4 e0       	ldi	r31, 0x04	; 4
    15cc:	90 81       	ld	r25, Z
    15ce:	97 7f       	andi	r25, 0xF7	; 247
    15d0:	90 83       	st	Z, r25
    15d2:	04 9a       	sbi	0x00, 4	; 0
    15d4:	0c 98       	cbi	0x01, 4	; 1
    15d6:	05 98       	cbi	0x00, 5	; 0
    15d8:	e5 e1       	ldi	r30, 0x15	; 21
    15da:	f4 e0       	ldi	r31, 0x04	; 4
    15dc:	90 81       	ld	r25, Z
    15de:	98 60       	ori	r25, 0x08	; 8
    15e0:	90 83       	st	Z, r25
    15e2:	90 81       	ld	r25, Z
    15e4:	98 7f       	andi	r25, 0xF8	; 248
    15e6:	95 60       	ori	r25, 0x05	; 5
    15e8:	90 83       	st	Z, r25
    15ea:	06 98       	cbi	0x00, 6	; 0
    15ec:	e6 e1       	ldi	r30, 0x16	; 22
    15ee:	f4 e0       	ldi	r31, 0x04	; 4
    15f0:	90 81       	ld	r25, Z
    15f2:	98 60       	ori	r25, 0x08	; 8
    15f4:	90 83       	st	Z, r25
    15f6:	07 98       	cbi	0x00, 7	; 0
    15f8:	e7 e1       	ldi	r30, 0x17	; 23
    15fa:	f4 e0       	ldi	r31, 0x04	; 4
    15fc:	90 81       	ld	r25, Z
    15fe:	98 60       	ori	r25, 0x08	; 8
    1600:	90 83       	st	Z, r25
    1602:	20 98       	cbi	0x04, 0	; 4
    1604:	e0 e3       	ldi	r30, 0x30	; 48
    1606:	f4 e0       	ldi	r31, 0x04	; 4
    1608:	90 81       	ld	r25, Z
    160a:	97 7f       	andi	r25, 0xF7	; 247
    160c:	90 83       	st	Z, r25
    160e:	21 98       	cbi	0x04, 1	; 4
    1610:	e1 e3       	ldi	r30, 0x31	; 49
    1612:	f4 e0       	ldi	r31, 0x04	; 4
    1614:	90 81       	ld	r25, Z
    1616:	98 60       	ori	r25, 0x08	; 8
    1618:	90 83       	st	Z, r25
    161a:	24 98       	cbi	0x04, 4	; 4
    161c:	e4 e3       	ldi	r30, 0x34	; 52
    161e:	f4 e0       	ldi	r31, 0x04	; 4
    1620:	90 81       	ld	r25, Z
    1622:	98 60       	ori	r25, 0x08	; 8
    1624:	90 83       	st	Z, r25
    1626:	25 98       	cbi	0x04, 5	; 4
    1628:	e5 e3       	ldi	r30, 0x35	; 53
    162a:	f4 e0       	ldi	r31, 0x04	; 4
    162c:	90 81       	ld	r25, Z
    162e:	98 60       	ori	r25, 0x08	; 8
    1630:	90 83       	st	Z, r25
    1632:	26 98       	cbi	0x04, 6	; 4
    1634:	e6 e3       	ldi	r30, 0x36	; 54
    1636:	f4 e0       	ldi	r31, 0x04	; 4
    1638:	90 81       	ld	r25, Z
    163a:	97 7f       	andi	r25, 0xF7	; 247
    163c:	90 83       	st	Z, r25
    163e:	27 98       	cbi	0x04, 7	; 4
    1640:	e7 e3       	ldi	r30, 0x37	; 55
    1642:	f4 e0       	ldi	r31, 0x04	; 4
    1644:	90 81       	ld	r25, Z
    1646:	98 60       	ori	r25, 0x08	; 8
    1648:	90 83       	st	Z, r25
    164a:	40 98       	cbi	0x08, 0	; 8
    164c:	e0 e5       	ldi	r30, 0x50	; 80
    164e:	f4 e0       	ldi	r31, 0x04	; 4
    1650:	90 81       	ld	r25, Z
    1652:	98 60       	ori	r25, 0x08	; 8
    1654:	90 83       	st	Z, r25
    1656:	41 98       	cbi	0x08, 1	; 8
    1658:	e1 e5       	ldi	r30, 0x51	; 81
    165a:	f4 e0       	ldi	r31, 0x04	; 4
    165c:	90 81       	ld	r25, Z
    165e:	98 60       	ori	r25, 0x08	; 8
    1660:	90 83       	st	Z, r25
    1662:	88 23       	and	r24, r24
    1664:	29 f0       	breq	.+10     	; 0x1670 <sleepPins+0xd8>
    1666:	80 81       	ld	r24, Z
    1668:	88 7f       	andi	r24, 0xF8	; 248
    166a:	85 60       	ori	r24, 0x05	; 5
    166c:	80 83       	st	Z, r24
    166e:	05 c0       	rjmp	.+10     	; 0x167a <sleepPins+0xe2>
    1670:	e1 e5       	ldi	r30, 0x51	; 81
    1672:	f4 e0       	ldi	r31, 0x04	; 4
    1674:	80 81       	ld	r24, Z
    1676:	88 7f       	andi	r24, 0xF8	; 248
    1678:	80 83       	st	Z, r24
    167a:	42 98       	cbi	0x08, 2	; 8
    167c:	e2 e5       	ldi	r30, 0x52	; 82
    167e:	f4 e0       	ldi	r31, 0x04	; 4
    1680:	80 81       	ld	r24, Z
    1682:	88 60       	ori	r24, 0x08	; 8
    1684:	80 83       	st	Z, r24
    1686:	43 98       	cbi	0x08, 3	; 8
    1688:	e3 e5       	ldi	r30, 0x53	; 83
    168a:	f4 e0       	ldi	r31, 0x04	; 4
    168c:	80 81       	ld	r24, Z
    168e:	87 7f       	andi	r24, 0xF7	; 247
    1690:	80 83       	st	Z, r24
    1692:	44 98       	cbi	0x08, 4	; 8
    1694:	e4 e5       	ldi	r30, 0x54	; 84
    1696:	f4 e0       	ldi	r31, 0x04	; 4
    1698:	80 81       	ld	r24, Z
    169a:	88 60       	ori	r24, 0x08	; 8
    169c:	80 83       	st	Z, r24
    169e:	e5 e5       	ldi	r30, 0x55	; 85
    16a0:	f4 e0       	ldi	r31, 0x04	; 4
    16a2:	80 81       	ld	r24, Z
    16a4:	87 7f       	andi	r24, 0xF7	; 247
    16a6:	80 83       	st	Z, r24
    16a8:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
    16ac:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    16b0:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <closeGPS>
    16b4:	08 95       	ret

000016b6 <getGPS>:
    16b6:	ef 92       	push	r14
    16b8:	ff 92       	push	r15
    16ba:	1f 93       	push	r17
    16bc:	cf 93       	push	r28
    16be:	df 93       	push	r29
    16c0:	d8 2f       	mov	r29, r24
    16c2:	0e 94 31 0a 	call	0x1462	; 0x1462 <openGPSuBlox>
    16c6:	0e 94 dd 01 	call	0x3ba	; 0x3ba <initGPSuBlox>
    16ca:	dd 23       	and	r29, r29
    16cc:	09 f4       	brne	.+2      	; 0x16d0 <getGPS+0x1a>
    16ce:	6c c0       	rjmp	.+216    	; 0x17a8 <getGPS+0xf2>
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
    16d6:	0e 94 dd 01 	call	0x3ba	; 0x3ba <initGPSuBlox>
    16da:	81 e0       	ldi	r24, 0x01	; 1
    16dc:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
    16e0:	0e 94 dd 01 	call	0x3ba	; 0x3ba <initGPSuBlox>
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
    16ea:	62 c0       	rjmp	.+196    	; 0x17b0 <getGPS+0xfa>
    16ec:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <closeGPS>
    16f0:	0f 2e       	mov	r0, r31
    16f2:	fa e9       	ldi	r31, 0x9A	; 154
    16f4:	ef 2e       	mov	r14, r31
    16f6:	f2 e0       	ldi	r31, 0x02	; 2
    16f8:	ff 2e       	mov	r15, r31
    16fa:	f0 2d       	mov	r31, r0
    16fc:	68 c0       	rjmp	.+208    	; 0x17ce <getGPS+0x118>
    16fe:	c1 50       	subi	r28, 0x01	; 1
    1700:	21 f4       	brne	.+8      	; 0x170a <getGPS+0x54>
    1702:	10 c0       	rjmp	.+32     	; 0x1724 <getGPS+0x6e>
    1704:	c1 11       	cpse	r28, r1
    1706:	09 c0       	rjmp	.+18     	; 0x171a <getGPS+0x64>
    1708:	0d c0       	rjmp	.+26     	; 0x1724 <getGPS+0x6e>
    170a:	8d 2f       	mov	r24, r29
    170c:	0e 94 bf 03 	call	0x77e	; 0x77e <GPSgetDate>
    1710:	89 2b       	or	r24, r25
    1712:	a9 f7       	brne	.-22     	; 0x16fe <getGPS+0x48>
    1714:	f7 cf       	rjmp	.-18     	; 0x1704 <getGPS+0x4e>
    1716:	c1 50       	subi	r28, 0x01	; 1
    1718:	29 f0       	breq	.+10     	; 0x1724 <getGPS+0x6e>
    171a:	8d 2f       	mov	r24, r29
    171c:	0e 94 19 07 	call	0xe32	; 0xe32 <GPSgetTime>
    1720:	89 2b       	or	r24, r25
    1722:	c9 f7       	brne	.-14     	; 0x1716 <getGPS+0x60>
    1724:	6a e0       	ldi	r22, 0x0A	; 10
    1726:	85 e7       	ldi	r24, 0x75	; 117
    1728:	9f e9       	ldi	r25, 0x9F	; 159
    172a:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
    172e:	f8 94       	cli
    1730:	c0 e0       	ldi	r28, 0x00	; 0
    1732:	a8 95       	wdr
    1734:	cf 5f       	subi	r28, 0xFF	; 255
    1736:	40 9a       	sbi	0x08, 0	; 8
    1738:	48 98       	cbi	0x09, 0	; 9
    173a:	8c ed       	ldi	r24, 0xDC	; 220
    173c:	98 e3       	ldi	r25, 0x38	; 56
    173e:	0e 94 30 09 	call	0x1260	; 0x1260 <send25BytesToBig>
    1742:	0e 94 be 07 	call	0xf7c	; 0xf7c <getByteFromBig>
    1746:	18 2f       	mov	r17, r24
    1748:	6a e0       	ldi	r22, 0x0A	; 10
    174a:	80 e8       	ldi	r24, 0x80	; 128
    174c:	9f e9       	ldi	r25, 0x9F	; 159
    174e:	0e 94 cc 01 	call	0x398	; 0x398 <usart_put_string>
    1752:	6c 2f       	mov	r22, r28
    1754:	62 95       	swap	r22
    1756:	66 95       	lsr	r22
    1758:	66 95       	lsr	r22
    175a:	63 70       	andi	r22, 0x03	; 3
    175c:	70 e0       	ldi	r23, 0x00	; 0
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
    1766:	17 34       	cpi	r17, 0x47	; 71
    1768:	11 f0       	breq	.+4      	; 0x176e <getGPS+0xb8>
    176a:	ce 31       	cpi	r28, 0x1E	; 30
    176c:	11 f7       	brne	.-60     	; 0x1732 <getGPS+0x7c>
    176e:	78 94       	sei
    1770:	a8 95       	wdr
    1772:	dd 23       	and	r29, r29
    1774:	11 f0       	breq	.+4      	; 0x177a <getGPS+0xc4>
    1776:	21 9a       	sbi	0x04, 1	; 4
    1778:	29 98       	cbi	0x05, 1	; 5
    177a:	60 ed       	ldi	r22, 0xD0	; 208
    177c:	77 e0       	ldi	r23, 0x07	; 7
    177e:	80 e0       	ldi	r24, 0x00	; 0
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
    1786:	a8 95       	wdr
    1788:	60 ed       	ldi	r22, 0xD0	; 208
    178a:	77 e0       	ldi	r23, 0x07	; 7
    178c:	80 e0       	ldi	r24, 0x00	; 0
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
    1794:	a8 95       	wdr
    1796:	0e 94 43 0a 	call	0x1486	; 0x1486 <USART0_OFF>
    179a:	21 98       	cbi	0x04, 1	; 4
    179c:	e1 e3       	ldi	r30, 0x31	; 49
    179e:	f4 e0       	ldi	r31, 0x04	; 4
    17a0:	80 81       	ld	r24, Z
    17a2:	88 60       	ori	r24, 0x08	; 8
    17a4:	80 83       	st	Z, r24
    17a6:	13 c0       	rjmp	.+38     	; 0x17ce <getGPS+0x118>
    17a8:	0e 94 dd 01 	call	0x3ba	; 0x3ba <initGPSuBlox>
    17ac:	0e 94 dd 01 	call	0x3ba	; 0x3ba <initGPSuBlox>
    17b0:	10 92 f5 38 	sts	0x38F5, r1	; 0x8038f5 <timeToFix>
    17b4:	10 92 f6 38 	sts	0x38F6, r1	; 0x8038f6 <timeToFix+0x1>
    17b8:	10 92 eb 38 	sts	0x38EB, r1	; 0x8038eb <gpsParams+0xf>
    17bc:	8d 2f       	mov	r24, r29
    17be:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <gTryUblox>
    17c2:	7c 01       	movw	r14, r24
    17c4:	89 2b       	or	r24, r25
    17c6:	09 f0       	breq	.+2      	; 0x17ca <getGPS+0x114>
    17c8:	91 cf       	rjmp	.-222    	; 0x16ec <getGPS+0x36>
    17ca:	cf e0       	ldi	r28, 0x0F	; 15
    17cc:	9e cf       	rjmp	.-196    	; 0x170a <getGPS+0x54>
    17ce:	c7 01       	movw	r24, r14
    17d0:	df 91       	pop	r29
    17d2:	cf 91       	pop	r28
    17d4:	1f 91       	pop	r17
    17d6:	ff 90       	pop	r15
    17d8:	ef 90       	pop	r14
    17da:	08 95       	ret

000017dc <pirSUdelay>:
    17dc:	80 e0       	ldi	r24, 0x00	; 0
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	00 00       	nop
    17e2:	01 96       	adiw	r24, 0x01	; 1
    17e4:	88 32       	cpi	r24, 0x28	; 40
    17e6:	91 05       	cpc	r25, r1
    17e8:	d9 f7       	brne	.-10     	; 0x17e0 <pirSUdelay+0x4>
    17ea:	08 95       	ret

000017ec <setPIRbitDN>:
    17ec:	0f 93       	push	r16
    17ee:	1f 93       	push	r17
    17f0:	cf 93       	push	r28
    17f2:	df 93       	push	r29
    17f4:	c7 e0       	ldi	r28, 0x07	; 7
    17f6:	d0 e0       	ldi	r29, 0x00	; 0
    17f8:	08 2f       	mov	r16, r24
    17fa:	10 e0       	ldi	r17, 0x00	; 0
    17fc:	2f 98       	cbi	0x05, 7	; 5
    17fe:	00 00       	nop
    1800:	00 00       	nop
    1802:	2f 9a       	sbi	0x05, 7	; 5
    1804:	00 00       	nop
    1806:	00 00       	nop
    1808:	98 01       	movw	r18, r16
    180a:	0c 2e       	mov	r0, r28
    180c:	02 c0       	rjmp	.+4      	; 0x1812 <setPIRbitDN+0x26>
    180e:	35 95       	asr	r19
    1810:	27 95       	ror	r18
    1812:	0a 94       	dec	r0
    1814:	e2 f7       	brpl	.-8      	; 0x180e <setPIRbitDN+0x22>
    1816:	20 fd       	sbrc	r18, 0
    1818:	02 c0       	rjmp	.+4      	; 0x181e <setPIRbitDN+0x32>
    181a:	2f 98       	cbi	0x05, 7	; 5
    181c:	01 c0       	rjmp	.+2      	; 0x1820 <setPIRbitDN+0x34>
    181e:	2f 9a       	sbi	0x05, 7	; 5
    1820:	0e 94 ee 0b 	call	0x17dc	; 0x17dc <pirSUdelay>
    1824:	21 97       	sbiw	r28, 0x01	; 1
    1826:	50 f7       	brcc	.-44     	; 0x17fc <setPIRbitDN+0x10>
    1828:	df 91       	pop	r29
    182a:	cf 91       	pop	r28
    182c:	1f 91       	pop	r17
    182e:	0f 91       	pop	r16
    1830:	08 95       	ret

00001832 <setPIRconfigDN>:
    1832:	0f 93       	push	r16
    1834:	1f 93       	push	r17
    1836:	cf 93       	push	r28
    1838:	df 93       	push	r29
    183a:	08 2f       	mov	r16, r24
    183c:	16 2f       	mov	r17, r22
    183e:	d4 2f       	mov	r29, r20
    1840:	c2 2f       	mov	r28, r18
    1842:	2f 98       	cbi	0x05, 7	; 5
    1844:	27 9a       	sbi	0x04, 7	; 4
    1846:	0e 94 ee 0b 	call	0x17dc	; 0x17dc <pirSUdelay>
    184a:	2f 9a       	sbi	0x05, 7	; 5
    184c:	00 fd       	sbrc	r16, 0
    184e:	02 c0       	rjmp	.+4      	; 0x1854 <setPIRconfigDN+0x22>
    1850:	2f 98       	cbi	0x05, 7	; 5
    1852:	01 c0       	rjmp	.+2      	; 0x1856 <setPIRconfigDN+0x24>
    1854:	2f 9a       	sbi	0x05, 7	; 5
    1856:	0e 94 ee 0b 	call	0x17dc	; 0x17dc <pirSUdelay>
    185a:	81 2f       	mov	r24, r17
    185c:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <setPIRbitDN>
    1860:	8d 2f       	mov	r24, r29
    1862:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <setPIRbitDN>
    1866:	8c 2f       	mov	r24, r28
    1868:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <setPIRbitDN>
    186c:	df 91       	pop	r29
    186e:	cf 91       	pop	r28
    1870:	1f 91       	pop	r17
    1872:	0f 91       	pop	r16
    1874:	08 95       	ret

00001876 <pirENDdelay>:
	for(tickCtr=PIR_SU_DELAY;tickCtr>0;tickCtr--){NOP();}
}
/*******************************************
*    PIR RX DELAY
********************************************/
void pirENDdelay (void){
    1876:	80 e0       	ldi	r24, 0x00	; 0
    1878:	90 e0       	ldi	r25, 0x00	; 0
	uint32_t tickCtr;
	for(tickCtr=PIR_END_DELAY;tickCtr>0;tickCtr--){NOP();}
    187a:	00 00       	nop
    187c:	01 96       	adiw	r24, 0x01	; 1
    187e:	8c 33       	cpi	r24, 0x3C	; 60
    1880:	91 05       	cpc	r25, r1
    1882:	d9 f7       	brne	.-10     	; 0x187a <pirENDdelay+0x4>
}
    1884:	08 95       	ret

00001886 <clearBothPIRinterrupts>:
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1886:	2e 98       	cbi	0x05, 6	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1888:	26 9a       	sbi	0x04, 6	; 4
	TPB6_set_dir(PORT_DIR_OUT);
#ifdef HAS_SEC_PIR	
	PORTA_set_pin_level(1, 0);
	TPA1_set_dir(PORT_DIR_OUT);
#endif	
	pirENDdelay();
    188a:	0e 94 3b 0c 	call	0x1876	; 0x1876 <pirENDdelay>
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    188e:	26 98       	cbi	0x04, 6	; 4
    1890:	08 95       	ret

00001892 <main>:
	char returnStr[]={0x0A,0x0D};
	int countGPStest = 0;
	int delay_ctr;
	short gotALS,gotProx;

	g_motionMinTotalDN=0;
    1892:	10 92 04 38 	sts	0x3804, r1	; 0x803804 <g_motionMinTotalDN>
	g_motionMinTotalENT=0;
	g_rxDataIndex=0;
	g_durCtr=DURCTR_MAX;
    1896:	8e ef       	ldi	r24, 0xFE	; 254
    1898:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <_edata>
    189c:	ec ed       	ldi	r30, 0xDC	; 220
    189e:	f8 e3       	ldi	r31, 0x38	; 56
    18a0:	85 ef       	ldi	r24, 0xF5	; 245
    18a2:	98 e3       	ldi	r25, 0x38	; 56
	g_numTripZeroCtrENT=0;
	g_numTrips=0;
	g_durIndexENT=DUR_INDEX;


	for (iters=0;iters<SIZEOFGPSPARAMS;iters++)gpsParams[iters]=0;
    18a4:	11 92       	st	Z+, r1
    18a6:	e8 17       	cp	r30, r24
    18a8:	f9 07       	cpc	r31, r25
    18aa:	e1 f7       	brne	.-8      	; 0x18a4 <main+0x12>

	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    18ac:	0e 94 9a 00 	call	0x134	; 0x134 <atmel_start_init>
	CCP = 0xD8;//enable writes to WDT
    18b0:	88 ed       	ldi	r24, 0xD8	; 216
    18b2:	84 bf       	out	0x34, r24	; 52
	WDT.STATUS = 0x00;//
    18b4:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
	CCP = 0xD8;//enable writes to WDT
    18b8:	84 bf       	out	0x34, r24	; 52

	DISABLE_INTERRUPTS();
    18ba:	f8 94       	cli
	ccp_write_io((void*)&(CLKCTRL.OSC32KCTRLA),1 << CLKCTRL_RUNSTDBY_bp /* Run standby: enabled */);
    18bc:	62 e0       	ldi	r22, 0x02	; 2
    18be:	70 e0       	ldi	r23, 0x00	; 0
    18c0:	88 e7       	ldi	r24, 0x78	; 120
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <ccp_write_io>
#ifdef DO_DIAGS
	redBlink(11);
	userBlink(10);
#endif
	mState=BEGIN;
    18c8:	10 92 fe 38 	sts	0x38FE, r1	; 0x8038fe <mState>
    18cc:	c0 ec       	ldi	r28, 0xC0	; 192
    18ce:	d8 e3       	ldi	r29, 0x38	; 56
    18d0:	0c ed       	ldi	r16, 0xDC	; 220
    18d2:	18 e3       	ldi	r17, 0x38	; 56
    18d4:	fe 01       	movw	r30, r28
	for (iters=0;iters<SIZEOFMOTPARAMS;iters++)motParams[iters]=0x00;//
    18d6:	11 92       	st	Z+, r1
    18d8:	e0 17       	cp	r30, r16
    18da:	f1 07       	cpc	r31, r17
    18dc:	e1 f7       	brne	.-8      	; 0x18d6 <main+0x44>
	for (iters=0;iters<10;iters++)partialParams[iters]=0;//Initialize place holders for partial GPS loc params.
	sleepPins(1);
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	0e 94 cc 0a 	call	0x1598	; 0x1598 <sleepPins>
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
	NOP();
	sleep_enable();
	sleep_cpu();
#endif
	WDT.CTRLA = MY_WDT;//MY_WDT;//0=disable watchdog. 0x0B=8 seconds
    18e4:	8b e0       	ldi	r24, 0x0B	; 11
    18e6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
#ifdef DO_DIAGS
	USART_0_initialization();
	USART_0_initialization();
#endif
	NOP();
    18ea:	00 00       	nop
	WDT_RST();
    18ec:	a8 95       	wdr
#ifdef DO_DIAGS
//	usart_put_string(&("HeartBeat "),10);
#endif
  }
#endif
	DISABLE_INTERRUPTS();
    18ee:	f8 94       	cli
// 	}
// 	WDT_RST();
// 	delay_ms(1000);
#endif
//	usart_put_string("PAST SOLAR\r\n",12);
	DISABLE_INTERRUPTS();
    18f0:	f8 94       	cli
	for (iters=0;iters<SIZEOFMOTPARAMS;iters++)motParams[iters]=0x00;//
    18f2:	19 92       	st	Y+, r1
    18f4:	c0 17       	cp	r28, r16
    18f6:	d1 07       	cpc	r29, r17
    18f8:	e1 f7       	brne	.-8      	; 0x18f2 <main+0x60>
	for (iters=0;iters<10;iters++)partialParams[iters]=iters+0xF0;//Initialize place holders for partial GPS loc params.
	sleepPins(1);
    18fa:	81 e0       	ldi	r24, 0x01	; 1
    18fc:	0e 94 cc 0a 	call	0x1598	; 0x1598 <sleepPins>
	NOP();
    1900:	00 00       	nop
	WDT_RST();
    1902:	a8 95       	wdr
	DISABLE_INTERRUPTS();
    1904:	f8 94       	cli

	g_sensitivityHiBit = sensitivtyAll>>8;
    1906:	10 92 01 39 	sts	0x3901, r1	; 0x803901 <g_sensitivityHiBit>
	g_sensitivityLoByte = (char)((sensitivtyAll&0x00FF)<<1);
    190a:	80 ea       	ldi	r24, 0xA0	; 160
    190c:	80 93 fd 38 	sts	0x38FD, r24	; 0x8038fd <g_sensitivityLoByte>

 int PIRa;
 short PIRb,PIRc;
 char* lastByte;

	VPORTA_INTFLAGS = 0xFF;
    1910:	8f ef       	ldi	r24, 0xFF	; 255
    1912:	83 b9       	out	0x03, r24	; 3
	VPORTB_INTFLAGS = 0xFF;
    1914:	87 b9       	out	0x07, r24	; 7
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1916:	27 9a       	sbi	0x04, 7	; 4

 /** CONFIG PRIMARY PIR **/
	TPB7_set_dir(PORT_DIR_OUT);
	setPIRconfigDN(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1918:	21 e3       	ldi	r18, 0x31	; 49
    191a:	41 e0       	ldi	r20, 0x01	; 1
    191c:	60 91 fd 38 	lds	r22, 0x38FD	; 0x8038fd <g_sensitivityLoByte>
    1920:	80 91 01 39 	lds	r24, 0x3901	; 0x803901 <g_sensitivityHiBit>
    1924:	0e 94 19 0c 	call	0x1832	; 0x1832 <setPIRconfigDN>
	delay_ms(500);
    1928:	64 ef       	ldi	r22, 0xF4	; 244
    192a:	71 e0       	ldi	r23, 0x01	; 1
    192c:	80 e0       	ldi	r24, 0x00	; 0
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	0e 94 82 01 	call	0x304	; 0x304 <delay_ms>
	setPIRconfigDN(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1934:	21 e3       	ldi	r18, 0x31	; 49
    1936:	41 e0       	ldi	r20, 0x01	; 1
    1938:	60 91 fd 38 	lds	r22, 0x38FD	; 0x8038fd <g_sensitivityLoByte>
    193c:	80 91 01 39 	lds	r24, 0x3901	; 0x803901 <g_sensitivityHiBit>
    1940:	0e 94 19 0c 	call	0x1832	; 0x1832 <setPIRconfigDN>
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1944:	e6 e3       	ldi	r30, 0x36	; 54
    1946:	f4 e0       	ldi	r31, 0x04	; 4
    1948:	80 81       	ld	r24, Z
    194a:	88 7f       	andi	r24, 0xF8	; 248
    194c:	82 60       	ori	r24, 0x02	; 2
    194e:	80 83       	st	Z, r24
#endif

mState=IDLE;
#ifdef HAS_GPS
#ifdef TAKE_PWRUP_GPS
	mState=BEGIN;
    1950:	10 92 fe 38 	sts	0x38FE, r1	; 0x8038fe <mState>
// 				LCDspace();

				delay_ms(15);
			#endif
			break;
		default: mState=IDLE;
    1954:	0f 2e       	mov	r0, r31
    1956:	f7 e0       	ldi	r31, 0x07	; 7
    1958:	ef 2e       	mov	r14, r31
    195a:	f0 2d       	mov	r31, r0
			if(!getGPS(0))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_LONGTERM;
			break;
		case IDLE://7
 			WDT_RST();
			WDT.CTRLA = MY_WDT;//watchdog
    195c:	81 2c       	mov	r8, r1
    195e:	99 24       	eor	r9, r9
    1960:	93 94       	inc	r9
    1962:	0f 2e       	mov	r0, r31
    1964:	fb e0       	ldi	r31, 0x0B	; 11
    1966:	bf 2e       	mov	r11, r31
    1968:	f0 2d       	mov	r31, r0
 			WDT_RST();
			clearBothPIRinterrupts();
#ifdef HAS_GPS
			if((g_rcvdCmd&0x10)==0x10){
				g_rcvdCmd=0;
				mState=GET_GPS;
    196a:	68 94       	set
    196c:	55 24       	eor	r5, r5
    196e:	51 f8       	bld	r5, 1
			if(!getGPS(0))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_LONGTERM;
			break;
		case NO_INITIAL_GPS_LONGTERM://6
			if(!getGPS(0))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_LONGTERM;
    1970:	0f 2e       	mov	r0, r31
    1972:	f6 e0       	ldi	r31, 0x06	; 6
    1974:	af 2e       	mov	r10, r31
    1976:	f0 2d       	mov	r31, r0
			if(!getGPS(1))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_B;
			break;
		case NO_INITIAL_GPS_B://4
			if(!getGPS(0))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_C;
    1978:	0f 2e       	mov	r0, r31
    197a:	f5 e0       	ldi	r31, 0x05	; 5
    197c:	6f 2e       	mov	r6, r31
    197e:	f0 2d       	mov	r31, r0
			#endif
			mState=IDLE;
			break;
		case NO_INITIAL_GPS_A://3
			if(!getGPS(1))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_B;
    1980:	68 94       	set
    1982:	77 24       	eor	r7, r7
    1984:	72 f8       	bld	r7, 2
		case BEGIN://0
			mState=INITIAL_GPS;
			break;
		case INITIAL_GPS://
			if(!getGPS(1))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_A;
    1986:	0f 2e       	mov	r0, r31
    1988:	f3 e0       	ldi	r31, 0x03	; 3
    198a:	ff 2e       	mov	r15, r31
    198c:	f0 2d       	mov	r31, r0
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    198e:	01 e5       	ldi	r16, 0x51	; 81
    1990:	14 e0       	ldi	r17, 0x04	; 4
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1992:	c6 e3       	ldi	r28, 0x36	; 54
    1994:	d4 e0       	ldi	r29, 0x04	; 4
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
#ifdef HAS_SEC_PIR	
	TPA1_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
#endif	
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1996:	0f 2e       	mov	r0, r31
    1998:	f0 e5       	ldi	r31, 0x50	; 80
    199a:	cf 2e       	mov	r12, r31
    199c:	d1 2c       	mov	r13, r1
    199e:	f0 2d       	mov	r31, r0
	mState=BEGIN;
#endif
#endif

for(;;){
	WDT_RST();
    19a0:	a8 95       	wdr
	clearBothPIRinterrupts();
    19a2:	0e 94 43 0c 	call	0x1886	; 0x1886 <clearBothPIRinterrupts>
	switch(mState){
    19a6:	e0 91 fe 38 	lds	r30, 0x38FE	; 0x8038fe <mState>
    19aa:	8e 2f       	mov	r24, r30
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	88 30       	cpi	r24, 0x08	; 8
    19b0:	91 05       	cpc	r25, r1
    19b2:	08 f0       	brcs	.+2      	; 0x19b6 <main+0x124>
    19b4:	59 c0       	rjmp	.+178    	; 0x1a68 <main+0x1d6>
    19b6:	fc 01       	movw	r30, r24
    19b8:	e2 58       	subi	r30, 0x82	; 130
    19ba:	ff 4f       	sbci	r31, 0xFF	; 255
    19bc:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__tablejump2__>
		case BEGIN://0
			mState=INITIAL_GPS;
    19c0:	81 e0       	ldi	r24, 0x01	; 1
    19c2:	80 93 fe 38 	sts	0x38FE, r24	; 0x8038fe <mState>
			break;
    19c6:	53 c0       	rjmp	.+166    	; 0x1a6e <main+0x1dc>
		case INITIAL_GPS://
			if(!getGPS(1))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <getGPS>
    19ce:	89 2b       	or	r24, r25
    19d0:	19 f4       	brne	.+6      	; 0x19d8 <main+0x146>
    19d2:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
    19d6:	4b c0       	rjmp	.+150    	; 0x1a6e <main+0x1dc>
			else mState=NO_INITIAL_GPS_A;
    19d8:	f0 92 fe 38 	sts	0x38FE, r15	; 0x8038fe <mState>
    19dc:	48 c0       	rjmp	.+144    	; 0x1a6e <main+0x1dc>
				LCDclear();
				usart_put_string("Got Initial GPS",15);
			#endif
			break;
		case GET_GPS://2
			getGPS(0);
    19de:	80 e0       	ldi	r24, 0x00	; 0
    19e0:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <getGPS>
			closeGPS();
    19e4:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <closeGPS>
			#ifdef DO_DIAGS
				USART_0_initialization();
				LCDclear ();
				usart_put_string("GotGPS",6);
			#endif
			mState=IDLE;
    19e8:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
			break;
    19ec:	40 c0       	rjmp	.+128    	; 0x1a6e <main+0x1dc>
		case NO_INITIAL_GPS_A://3
			if(!getGPS(1))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    19ee:	81 e0       	ldi	r24, 0x01	; 1
    19f0:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <getGPS>
    19f4:	89 2b       	or	r24, r25
    19f6:	19 f4       	brne	.+6      	; 0x19fe <main+0x16c>
    19f8:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
    19fc:	38 c0       	rjmp	.+112    	; 0x1a6e <main+0x1dc>
			else mState=NO_INITIAL_GPS_B;
    19fe:	70 92 fe 38 	sts	0x38FE, r7	; 0x8038fe <mState>
    1a02:	35 c0       	rjmp	.+106    	; 0x1a6e <main+0x1dc>
			break;
		case NO_INITIAL_GPS_B://4
			if(!getGPS(0))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1a04:	80 e0       	ldi	r24, 0x00	; 0
    1a06:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <getGPS>
    1a0a:	89 2b       	or	r24, r25
    1a0c:	19 f4       	brne	.+6      	; 0x1a14 <main+0x182>
    1a0e:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
    1a12:	2d c0       	rjmp	.+90     	; 0x1a6e <main+0x1dc>
			else mState=NO_INITIAL_GPS_C;
    1a14:	60 92 fe 38 	sts	0x38FE, r6	; 0x8038fe <mState>
    1a18:	2a c0       	rjmp	.+84     	; 0x1a6e <main+0x1dc>
			break;
		case NO_INITIAL_GPS_C://5
			if(!getGPS(0))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <getGPS>
    1a20:	89 2b       	or	r24, r25
    1a22:	19 f4       	brne	.+6      	; 0x1a2a <main+0x198>
    1a24:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
    1a28:	22 c0       	rjmp	.+68     	; 0x1a6e <main+0x1dc>
			else mState=NO_INITIAL_GPS_LONGTERM;
    1a2a:	a0 92 fe 38 	sts	0x38FE, r10	; 0x8038fe <mState>
    1a2e:	1f c0       	rjmp	.+62     	; 0x1a6e <main+0x1dc>
			break;
		case NO_INITIAL_GPS_LONGTERM://6
			if(!getGPS(0))mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1a30:	80 e0       	ldi	r24, 0x00	; 0
    1a32:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <getGPS>
    1a36:	89 2b       	or	r24, r25
    1a38:	19 f4       	brne	.+6      	; 0x1a40 <main+0x1ae>
    1a3a:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
    1a3e:	17 c0       	rjmp	.+46     	; 0x1a6e <main+0x1dc>
			else mState=NO_INITIAL_GPS_LONGTERM;
    1a40:	a0 92 fe 38 	sts	0x38FE, r10	; 0x8038fe <mState>
    1a44:	14 c0       	rjmp	.+40     	; 0x1a6e <main+0x1dc>
			break;
		case IDLE://7
 			WDT_RST();
    1a46:	a8 95       	wdr
			WDT.CTRLA = MY_WDT;//watchdog
    1a48:	f4 01       	movw	r30, r8
    1a4a:	b0 82       	st	Z, r11
			closeGPS();
    1a4c:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <closeGPS>
 			WDT_RST();
    1a50:	a8 95       	wdr
			clearBothPIRinterrupts();
    1a52:	0e 94 43 0c 	call	0x1886	; 0x1886 <clearBothPIRinterrupts>
#ifdef HAS_GPS
			if((g_rcvdCmd&0x10)==0x10){
    1a56:	80 91 f8 38 	lds	r24, 0x38F8	; 0x8038f8 <g_rcvdCmd>
    1a5a:	84 ff       	sbrs	r24, 4
    1a5c:	08 c0       	rjmp	.+16     	; 0x1a6e <main+0x1dc>
				g_rcvdCmd=0;
    1a5e:	10 92 f8 38 	sts	0x38F8, r1	; 0x8038f8 <g_rcvdCmd>
				mState=GET_GPS;
    1a62:	50 92 fe 38 	sts	0x38FE, r5	; 0x8038fe <mState>
    1a66:	03 c0       	rjmp	.+6      	; 0x1a6e <main+0x1dc>
// 				LCDspace();

				delay_ms(15);
			#endif
			break;
		default: mState=IDLE;
    1a68:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
 			WDT_RST();
    1a6c:	a8 95       	wdr
			break;
	}
	sleepPins(1);
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	0e 94 cc 0a 	call	0x1598	; 0x1598 <sleepPins>
	ENABLE_INTERRUPTS();//might not have to do this every time.
    1a74:	78 94       	sei
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1a76:	f8 01       	movw	r30, r16
    1a78:	80 81       	ld	r24, Z
    1a7a:	88 7f       	andi	r24, 0xF8	; 248
    1a7c:	85 60       	ori	r24, 0x05	; 5
    1a7e:	80 83       	st	Z, r24
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1a80:	88 81       	ld	r24, Y
    1a82:	88 7f       	andi	r24, 0xF8	; 248
    1a84:	82 60       	ori	r24, 0x02	; 2
    1a86:	88 83       	st	Y, r24
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
#ifdef HAS_SEC_PIR	
	TPA1_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
#endif	
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1a88:	f6 01       	movw	r30, r12
    1a8a:	f0 82       	st	Z, r15
	NOP();
    1a8c:	00 00       	nop
	SLEEP();
    1a8e:	88 95       	sleep
}
    1a90:	87 cf       	rjmp	.-242    	; 0x19a0 <main+0x10e>

00001a92 <__vector_13>:
***********************************************************************
***********************************************************************/
/***********************************************************************
*  ISR TCB0 Timer for Prox PWM capture
***********************************************************************/
ISR(TCB0_INT_vect){
    1a92:	1f 92       	push	r1
    1a94:	0f 92       	push	r0
    1a96:	0f b6       	in	r0, 0x3f	; 63
    1a98:	0f 92       	push	r0
    1a9a:	11 24       	eor	r1, r1
    1a9c:	8f 93       	push	r24
    1a9e:	9f 93       	push	r25
	short dumb;
		dumb=TCB0_CCMP;
    1aa0:	80 91 4c 0a 	lds	r24, 0x0A4C	; 0x800a4c <__TEXT_REGION_LENGTH__+0x700a4c>
    1aa4:	90 91 4d 0a 	lds	r25, 0x0A4D	; 0x800a4d <__TEXT_REGION_LENGTH__+0x700a4d>
// 		TCB0_INTCTRL = 0x01;//Enable capture interrupt flag
// 		TCB0_EVCTRL = 0x11;//Enable Captu
}
    1aa8:	9f 91       	pop	r25
    1aaa:	8f 91       	pop	r24
    1aac:	0f 90       	pop	r0
    1aae:	0f be       	out	0x3f, r0	; 63
    1ab0:	0f 90       	pop	r0
    1ab2:	1f 90       	pop	r1
    1ab4:	18 95       	reti

00001ab6 <__vector_5>:
/***********************************************************************
*  ISR WAKEUP FROM BIG
***********************************************************************/
//	APRIL 2, 2020: THERE CAN BE A 30ms DELAY RESPONDING TO THE INTERRUPT FROM BIG BECAUSE TINY IS BUSY WITH RTC-PIT INTERRUPT
ISR(PORTC_PORT_vect){
    1ab6:	1f 92       	push	r1
    1ab8:	0f 92       	push	r0
    1aba:	0f b6       	in	r0, 0x3f	; 63
    1abc:	0f 92       	push	r0
    1abe:	11 24       	eor	r1, r1
    1ac0:	2f 93       	push	r18
    1ac2:	3f 93       	push	r19
    1ac4:	4f 93       	push	r20
    1ac6:	5f 93       	push	r21
    1ac8:	6f 93       	push	r22
    1aca:	7f 93       	push	r23
    1acc:	8f 93       	push	r24
    1ace:	9f 93       	push	r25
    1ad0:	af 93       	push	r26
    1ad2:	bf 93       	push	r27
    1ad4:	ef 93       	push	r30
    1ad6:	ff 93       	push	r31
	DISABLE_INTERRUPTS();
    1ad8:	f8 94       	cli
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1ada:	e1 e5       	ldi	r30, 0x51	; 81
    1adc:	f4 e0       	ldi	r31, 0x04	; 4
    1ade:	80 81       	ld	r24, Z
    1ae0:	88 7f       	andi	r24, 0xF8	; 248
    1ae2:	80 83       	st	Z, r24
	TPC1_set_isc(PORT_ISC_INTDISABLE_gc);//C1=WAKEUP FROM BIG
	PORTC.INTFLAGS |= (1 << 1);
    1ae4:	e0 e4       	ldi	r30, 0x40	; 64
    1ae6:	f4 e0       	ldi	r31, 0x04	; 4
    1ae8:	81 85       	ldd	r24, Z+9	; 0x09
    1aea:	82 60       	ori	r24, 0x02	; 2
    1aec:	81 87       	std	Z+9, r24	; 0x09
	char gotCmd;
	char iters;

	if(mState!=SOLAR_WAIT)gotCmd=getPacketFromBig();
    1aee:	80 91 fe 38 	lds	r24, 0x38FE	; 0x8038fe <mState>
    1af2:	88 30       	cpi	r24, 0x08	; 8
    1af4:	11 f0       	breq	.+4      	; 0x1afa <__vector_5+0x44>
    1af6:	0e 94 6e 09 	call	0x12dc	; 0x12dc <getPacketFromBig>
	PORTC.INTFLAGS |= (1 << 1);
    1afa:	e0 e4       	ldi	r30, 0x40	; 64
    1afc:	f4 e0       	ldi	r31, 0x04	; 4
    1afe:	81 85       	ldd	r24, Z+9	; 0x09
    1b00:	82 60       	ori	r24, 0x02	; 2
    1b02:	81 87       	std	Z+9, r24	; 0x09
	if(mState==IDLE){
    1b04:	80 91 fe 38 	lds	r24, 0x38FE	; 0x8038fe <mState>
    1b08:	87 30       	cpi	r24, 0x07	; 7
    1b0a:	31 f4       	brne	.+12     	; 0x1b18 <__vector_5+0x62>
		sleepPins(1);//
    1b0c:	81 e0       	ldi	r24, 0x01	; 1
    1b0e:	0e 94 cc 0a 	call	0x1598	; 0x1598 <sleepPins>
		sleepPins(1);//
    1b12:	81 e0       	ldi	r24, 0x01	; 1
    1b14:	0e 94 cc 0a 	call	0x1598	; 0x1598 <sleepPins>
	}
	WDT_RST();//
    1b18:	a8 95       	wdr
    1b1a:	e1 e5       	ldi	r30, 0x51	; 81
    1b1c:	f4 e0       	ldi	r31, 0x04	; 4
    1b1e:	80 81       	ld	r24, Z
    1b20:	88 7f       	andi	r24, 0xF8	; 248
    1b22:	85 60       	ori	r24, 0x05	; 5
    1b24:	80 83       	st	Z, r24
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	ENABLE_INTERRUPTS();
    1b26:	78 94       	sei
}
    1b28:	ff 91       	pop	r31
    1b2a:	ef 91       	pop	r30
    1b2c:	bf 91       	pop	r27
    1b2e:	af 91       	pop	r26
    1b30:	9f 91       	pop	r25
    1b32:	8f 91       	pop	r24
    1b34:	7f 91       	pop	r23
    1b36:	6f 91       	pop	r22
    1b38:	5f 91       	pop	r21
    1b3a:	4f 91       	pop	r20
    1b3c:	3f 91       	pop	r19
    1b3e:	2f 91       	pop	r18
    1b40:	0f 90       	pop	r0
    1b42:	0f be       	out	0x3f, r0	; 63
    1b44:	0f 90       	pop	r0
    1b46:	1f 90       	pop	r1
    1b48:	18 95       	reti

00001b4a <__vector_27>:
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
    1b4a:	1f 92       	push	r1
    1b4c:	0f 92       	push	r0
    1b4e:	0f b6       	in	r0, 0x3f	; 63
    1b50:	0f 92       	push	r0
    1b52:	11 24       	eor	r1, r1
    1b54:	8f 93       	push	r24
    1b56:	9f 93       	push	r25
    1b58:	ef 93       	push	r30
    1b5a:	ff 93       	push	r31
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
    1b5c:	e0 91 ff 38 	lds	r30, 0x38FF	; 0x8038ff <p_GPSrcvData>
    1b60:	f0 91 00 39 	lds	r31, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
    1b64:	88 e3       	ldi	r24, 0x38	; 56
    1b66:	e0 3c       	cpi	r30, 0xC0	; 192
    1b68:	f8 07       	cpc	r31, r24
    1b6a:	d8 f0       	brcs	.+54     	; 0x1ba2 <__vector_27+0x58>
    1b6c:	8f eb       	ldi	r24, 0xBF	; 191
    1b6e:	98 e3       	ldi	r25, 0x38	; 56
    1b70:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
    1b74:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    1b78:	fc 01       	movw	r30, r24
		*p_GPSrcvData=USART0.RXDATAL;
    1b7a:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    1b7e:	80 83       	st	Z, r24
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
    1b80:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    1b84:	8a 30       	cpi	r24, 0x0A	; 10
    1b86:	19 f4       	brne	.+6      	; 0x1b8e <__vector_27+0x44>
    1b88:	81 e0       	ldi	r24, 0x01	; 1
    1b8a:	80 93 f7 38 	sts	0x38F7, r24	; 0x8038f7 <endOfLineFlag>
	p_GPSrcvData++;
    1b8e:	80 91 ff 38 	lds	r24, 0x38FF	; 0x8038ff <p_GPSrcvData>
    1b92:	90 91 00 39 	lds	r25, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
    1b96:	01 96       	adiw	r24, 0x01	; 1
    1b98:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
    1b9c:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
}
    1ba0:	05 c0       	rjmp	.+10     	; 0x1bac <__vector_27+0x62>
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    1ba2:	88 e3       	ldi	r24, 0x38	; 56
    1ba4:	ea 30       	cpi	r30, 0x0A	; 10
    1ba6:	f8 07       	cpc	r31, r24
    1ba8:	58 f3       	brcs	.-42     	; 0x1b80 <__vector_27+0x36>
    1baa:	e7 cf       	rjmp	.-50     	; 0x1b7a <__vector_27+0x30>
		*p_GPSrcvData=USART0.RXDATAL;
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
	p_GPSrcvData++;
}
    1bac:	ff 91       	pop	r31
    1bae:	ef 91       	pop	r30
    1bb0:	9f 91       	pop	r25
    1bb2:	8f 91       	pop	r24
    1bb4:	0f 90       	pop	r0
    1bb6:	0f be       	out	0x3f, r0	; 63
    1bb8:	0f 90       	pop	r0
    1bba:	1f 90       	pop	r1
    1bbc:	18 95       	reti

00001bbe <__vector_4>:
/***********************************************************************
*  ISR PRIMARY MOTION
***********************************************************************/
ISR(PORTB_PORT_vect){
    1bbe:	1f 92       	push	r1
    1bc0:	0f 92       	push	r0
    1bc2:	0f b6       	in	r0, 0x3f	; 63
    1bc4:	0f 92       	push	r0
    1bc6:	11 24       	eor	r1, r1
    1bc8:	8f 93       	push	r24
    1bca:	ef 93       	push	r30
    1bcc:	ff 93       	push	r31
	// B6 is Motion
	WDT_RST();//
    1bce:	a8 95       	wdr
	if(!g_tripFlagDN){
    1bd0:	80 91 07 38 	lds	r24, 0x3807	; 0x803807 <g_tripFlagDN>
    1bd4:	81 11       	cpse	r24, r1
    1bd6:	0a c0       	rjmp	.+20     	; 0x1bec <__vector_4+0x2e>
		g_tripFlagDN=1;
    1bd8:	81 e0       	ldi	r24, 0x01	; 1
    1bda:	80 93 07 38 	sts	0x3807, r24	; 0x803807 <g_tripFlagDN>
		motParams[NUM_TRIPS_INDEX]++;
    1bde:	e0 ec       	ldi	r30, 0xC0	; 192
    1be0:	f8 e3       	ldi	r31, 0x38	; 56
    1be2:	86 89       	ldd	r24, Z+22	; 0x16
    1be4:	8f 5f       	subi	r24, 0xFF	; 255
    1be6:	86 8b       	std	Z+22, r24	; 0x16
		g_durCtr=0;
    1be8:	10 92 00 38 	sts	0x3800, r1	; 0x803800 <_edata>
	}
	g_numTripZeroCtrDN=0;
    1bec:	10 92 08 38 	sts	0x3808, r1	; 0x803808 <g_numTripZeroCtrDN>
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    1bf0:	26 98       	cbi	0x04, 6	; 4
	TPB6_set_dir(PORT_DIR_IN);
	g_gotMotionDN=1;
    1bf2:	81 e0       	ldi	r24, 0x01	; 1
    1bf4:	80 93 09 38 	sts	0x3809, r24	; 0x803809 <g_gotMotionDN>
	PORTB.INTFLAGS |= (1 << 6);
    1bf8:	e0 e2       	ldi	r30, 0x20	; 32
    1bfa:	f4 e0       	ldi	r31, 0x04	; 4
    1bfc:	81 85       	ldd	r24, Z+9	; 0x09
    1bfe:	80 64       	ori	r24, 0x40	; 64
    1c00:	81 87       	std	Z+9, r24	; 0x09
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1c02:	e6 e3       	ldi	r30, 0x36	; 54
    1c04:	f4 e0       	ldi	r31, 0x04	; 4
    1c06:	80 81       	ld	r24, Z
    1c08:	88 7f       	andi	r24, 0xF8	; 248
    1c0a:	80 83       	st	Z, r24
	TPB6_set_isc(PORT_ISC_INTDISABLE_gc);
}
    1c0c:	ff 91       	pop	r31
    1c0e:	ef 91       	pop	r30
    1c10:	8f 91       	pop	r24
    1c12:	0f 90       	pop	r0
    1c14:	0f be       	out	0x3f, r0	; 63
    1c16:	0f 90       	pop	r0
    1c18:	1f 90       	pop	r1
    1c1a:	18 95       	reti

00001c1c <__vector_3>:
/***********************************************************************
*  ISR USER PUSHBUTTON AND SECONDARY MOTION
***********************************************************************/
ISR(PORTA_PORT_vect){
    1c1c:	1f 92       	push	r1
    1c1e:	0f 92       	push	r0
    1c20:	0f b6       	in	r0, 0x3f	; 63
    1c22:	0f 92       	push	r0
    1c24:	11 24       	eor	r1, r1
    1c26:	2f 93       	push	r18
    1c28:	3f 93       	push	r19
    1c2a:	4f 93       	push	r20
    1c2c:	5f 93       	push	r21
    1c2e:	6f 93       	push	r22
    1c30:	7f 93       	push	r23
    1c32:	8f 93       	push	r24
    1c34:	9f 93       	push	r25
    1c36:	af 93       	push	r26
    1c38:	bf 93       	push	r27
    1c3a:	cf 93       	push	r28
    1c3c:	df 93       	push	r29
    1c3e:	ef 93       	push	r30
    1c40:	ff 93       	push	r31
	DISABLE_INTERRUPTS();
    1c42:	f8 94       	cli
	if((PORTA.INTFLAGS & 0x20)==0x20){//THIS LOOKS TO SEE IF IT WAS A5 (Pushbutton) or secondary PIR
    1c44:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x700409>
    1c48:	85 ff       	sbrs	r24, 5
    1c4a:	16 c0       	rjmp	.+44     	; 0x1c78 <__vector_3+0x5c>
		PORTA.INTFLAGS |= (1 << 5);
    1c4c:	c0 e0       	ldi	r28, 0x00	; 0
    1c4e:	d4 e0       	ldi	r29, 0x04	; 4
    1c50:	89 85       	ldd	r24, Y+9	; 0x09
    1c52:	80 62       	ori	r24, 0x20	; 32
    1c54:	89 87       	std	Y+9, r24	; 0x09
		WDT_RST();//
    1c56:	a8 95       	wdr
		userBlink(1);
    1c58:	81 e0       	ldi	r24, 0x01	; 1
    1c5a:	0e 94 99 01 	call	0x332	; 0x332 <userBlink>
		#ifdef HAS_GPS
			mState=BEGIN;
    1c5e:	10 92 fe 38 	sts	0x38FE, r1	; 0x8038fe <mState>
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1c62:	e5 e1       	ldi	r30, 0x15	; 21
    1c64:	f4 e0       	ldi	r31, 0x04	; 4
    1c66:	80 81       	ld	r24, Z
    1c68:	88 7f       	andi	r24, 0xF8	; 248
    1c6a:	85 60       	ori	r24, 0x05	; 5
    1c6c:	80 83       	st	Z, r24
		#endif
		TPA5_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM  USER PUSHBUTTON
		PORTA.INTFLAGS |= (1 << 5);
    1c6e:	89 85       	ldd	r24, Y+9	; 0x09
    1c70:	80 62       	ori	r24, 0x20	; 32
    1c72:	89 87       	std	Y+9, r24	; 0x09
		ENABLE_INTERRUPTS();
    1c74:	78 94       	sei
		return;
    1c76:	05 c0       	rjmp	.+10     	; 0x1c82 <__vector_3+0x66>
	TPA1_set_dir(PORT_DIR_IN);
	g_gotMotionENT=1;
	PORTA.INTFLAGS |= (1 << 1);
	TPA1_set_isc(PORT_ISC_INTDISABLE_gc);
#endif	
	PORTA.INTFLAGS |= (1 << 1);//for safety, in case get an interrupt from secondary PIR, which we shouldn't. But if do the ISR will get stuck here.
    1c78:	e0 e0       	ldi	r30, 0x00	; 0
    1c7a:	f4 e0       	ldi	r31, 0x04	; 4
    1c7c:	81 85       	ldd	r24, Z+9	; 0x09
    1c7e:	82 60       	ori	r24, 0x02	; 2
    1c80:	81 87       	std	Z+9, r24	; 0x09
	}
}
    1c82:	ff 91       	pop	r31
    1c84:	ef 91       	pop	r30
    1c86:	df 91       	pop	r29
    1c88:	cf 91       	pop	r28
    1c8a:	bf 91       	pop	r27
    1c8c:	af 91       	pop	r26
    1c8e:	9f 91       	pop	r25
    1c90:	8f 91       	pop	r24
    1c92:	7f 91       	pop	r23
    1c94:	6f 91       	pop	r22
    1c96:	5f 91       	pop	r21
    1c98:	4f 91       	pop	r20
    1c9a:	3f 91       	pop	r19
    1c9c:	2f 91       	pop	r18
    1c9e:	0f 90       	pop	r0
    1ca0:	0f be       	out	0x3f, r0	; 63
    1ca2:	0f 90       	pop	r0
    1ca4:	1f 90       	pop	r1
    1ca6:	18 95       	reti

00001ca8 <__vector_7>:
/***********************************************************************
*  ISR PIT (RTC)
*  BAD COMMS FROM BIG HIT WHEN TINY IS BUSY WITH THIS RTC-PIT INTERRUPT WHEN INTERRUPT FROM BIG HITS. RTC-PIT INTERRUPT ROUTINE TAKES ABOUT 30ms.
***********************************************************************/
ISR(RTC_PIT_vect)
{
    1ca8:	1f 92       	push	r1
    1caa:	0f 92       	push	r0
    1cac:	0f b6       	in	r0, 0x3f	; 63
    1cae:	0f 92       	push	r0
    1cb0:	11 24       	eor	r1, r1
    1cb2:	2f 93       	push	r18
    1cb4:	3f 93       	push	r19
    1cb6:	4f 93       	push	r20
    1cb8:	5f 93       	push	r21
    1cba:	6f 93       	push	r22
    1cbc:	7f 93       	push	r23
    1cbe:	8f 93       	push	r24
    1cc0:	9f 93       	push	r25
    1cc2:	af 93       	push	r26
    1cc4:	bf 93       	push	r27
    1cc6:	ef 93       	push	r30
    1cc8:	ff 93       	push	r31
	char iters;

	WDT_RST();//seems to require this one. Not sure why the main loop doesn't take care of it.
    1cca:	a8 95       	wdr
	if(g_gotMotionENT) usart_put_string("2",1);
	else usart_put_string("0",1);
#endif	
	delay_ms(30);
#endif
	if(g_motSecCtrDN>59)g_holdForBigFlag--;
    1ccc:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <g_motSecCtrDN>
    1cd0:	8c 33       	cpi	r24, 0x3C	; 60
    1cd2:	28 f0       	brcs	.+10     	; 0x1cde <__vector_7+0x36>
    1cd4:	90 91 01 38 	lds	r25, 0x3801	; 0x803801 <g_holdForBigFlag>
    1cd8:	91 50       	subi	r25, 0x01	; 1
    1cda:	90 93 01 38 	sts	0x3801, r25	; 0x803801 <g_holdForBigFlag>
	if((++g_motSecCtrDN>59)&&(g_holdForBigFlag<5)){
    1cde:	8f 5f       	subi	r24, 0xFF	; 255
    1ce0:	80 93 06 38 	sts	0x3806, r24	; 0x803806 <g_motSecCtrDN>
    1ce4:	8c 33       	cpi	r24, 0x3C	; 60
    1ce6:	98 f0       	brcs	.+38     	; 0x1d0e <__vector_7+0x66>
    1ce8:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_holdForBigFlag>
    1cec:	85 30       	cpi	r24, 0x05	; 5
    1cee:	78 f4       	brcc	.+30     	; 0x1d0e <__vector_7+0x66>
		g_holdForBigFlag=58;//reset for one minute of holding data before giving up on Big and restarting anyway.
    1cf0:	8a e3       	ldi	r24, 0x3A	; 58
    1cf2:	80 93 01 38 	sts	0x3801, r24	; 0x803801 <g_holdForBigFlag>
		g_noMotionFlagDN=1;
		g_motSecCtrDN=0;
    1cf6:	10 92 06 38 	sts	0x3806, r1	; 0x803806 <g_motSecCtrDN>
		g_durIndexDN=DUR_INDEX;
    1cfa:	8a e0       	ldi	r24, 0x0A	; 10
    1cfc:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <g_durIndexDN>
		g_motionPatternIndexDN=MOTION_INDEX;//1 because the raw motion patterns go into motParams[1..8]
    1d00:	81 e0       	ldi	r24, 0x01	; 1
    1d02:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_motionPatternIndexDN>
		g_motionPatternMaskDN=0x80;
    1d06:	80 e8       	ldi	r24, 0x80	; 128
    1d08:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <g_motionPatternMaskDN>
    1d0c:	15 c0       	rjmp	.+42     	; 0x1d38 <__vector_7+0x90>
		}else{
		g_motionPatternMaskDN>>=1;
    1d0e:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <g_motionPatternMaskDN>
    1d12:	86 95       	lsr	r24
		if(g_motionPatternMaskDN==0){
    1d14:	19 f0       	breq	.+6      	; 0x1d1c <__vector_7+0x74>
		g_motSecCtrDN=0;
		g_durIndexDN=DUR_INDEX;
		g_motionPatternIndexDN=MOTION_INDEX;//1 because the raw motion patterns go into motParams[1..8]
		g_motionPatternMaskDN=0x80;
		}else{
		g_motionPatternMaskDN>>=1;
    1d16:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <g_motionPatternMaskDN>
    1d1a:	0e c0       	rjmp	.+28     	; 0x1d38 <__vector_7+0x90>
		if(g_motionPatternMaskDN==0){
			g_motionPatternMaskDN=0x80;
    1d1c:	80 e8       	ldi	r24, 0x80	; 128
    1d1e:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <g_motionPatternMaskDN>
			if(++g_motionPatternIndexDN>8)g_motionPatternIndexDN=1;
    1d22:	80 91 03 38 	lds	r24, 0x3803	; 0x803803 <g_motionPatternIndexDN>
    1d26:	8f 5f       	subi	r24, 0xFF	; 255
    1d28:	89 30       	cpi	r24, 0x09	; 9
    1d2a:	18 f4       	brcc	.+6      	; 0x1d32 <__vector_7+0x8a>
    1d2c:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_motionPatternIndexDN>
    1d30:	03 c0       	rjmp	.+6      	; 0x1d38 <__vector_7+0x90>
    1d32:	81 e0       	ldi	r24, 0x01	; 1
    1d34:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_motionPatternIndexDN>
		}
	}//end of <59 or >59

	if(g_gotMotionDN){
    1d38:	80 91 09 38 	lds	r24, 0x3809	; 0x803809 <g_gotMotionDN>
    1d3c:	88 23       	and	r24, r24
    1d3e:	a1 f0       	breq	.+40     	; 0x1d68 <__vector_7+0xc0>
		g_noMotionFlagDN=0;
		g_motionMinTotalDN++;
    1d40:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <g_motionMinTotalDN>
    1d44:	8f 5f       	subi	r24, 0xFF	; 255
    1d46:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <g_motionMinTotalDN>
		if(g_motSecCtrDN<60)motParams[g_motionPatternIndexDN]|=g_motionPatternMaskDN;
    1d4a:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <g_motSecCtrDN>
    1d4e:	8c 33       	cpi	r24, 0x3C	; 60
    1d50:	50 f5       	brcc	.+84     	; 0x1da6 <__vector_7+0xfe>
    1d52:	e0 91 03 38 	lds	r30, 0x3803	; 0x803803 <g_motionPatternIndexDN>
    1d56:	f0 e0       	ldi	r31, 0x00	; 0
    1d58:	e0 54       	subi	r30, 0x40	; 64
    1d5a:	f7 4c       	sbci	r31, 0xC7	; 199
    1d5c:	90 81       	ld	r25, Z
    1d5e:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <g_motionPatternMaskDN>
    1d62:	89 2b       	or	r24, r25
    1d64:	80 83       	st	Z, r24
    1d66:	1f c0       	rjmp	.+62     	; 0x1da6 <__vector_7+0xfe>

	}else{
		g_numTripZeroCtrDN++;
    1d68:	80 91 08 38 	lds	r24, 0x3808	; 0x803808 <g_numTripZeroCtrDN>
    1d6c:	8f 5f       	subi	r24, 0xFF	; 255
    1d6e:	80 93 08 38 	sts	0x3808, r24	; 0x803808 <g_numTripZeroCtrDN>
		if(g_numTripZeroCtrDN>100)g_numTripZeroCtrDN=100;
    1d72:	85 36       	cpi	r24, 0x65	; 101
    1d74:	20 f0       	brcs	.+8      	; 0x1d7e <__vector_7+0xd6>
    1d76:	84 e6       	ldi	r24, 0x64	; 100
    1d78:	80 93 08 38 	sts	0x3808, r24	; 0x803808 <g_numTripZeroCtrDN>
    1d7c:	14 c0       	rjmp	.+40     	; 0x1da6 <__vector_7+0xfe>
		if(g_numTripZeroCtrDN==NUMMOTSECS_BETWEEN_TRIPS){
    1d7e:	85 30       	cpi	r24, 0x05	; 5
    1d80:	91 f4       	brne	.+36     	; 0x1da6 <__vector_7+0xfe>
			motParams[g_durIndexDN]=g_durCtr-NUMMOTSECS_BETWEEN_TRIPS;
    1d82:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <g_durIndexDN>
    1d86:	e8 2f       	mov	r30, r24
    1d88:	f0 e0       	ldi	r31, 0x00	; 0
    1d8a:	e0 54       	subi	r30, 0x40	; 64
    1d8c:	f7 4c       	sbci	r31, 0xC7	; 199
    1d8e:	90 91 00 38 	lds	r25, 0x3800	; 0x803800 <_edata>
    1d92:	95 50       	subi	r25, 0x05	; 5
    1d94:	90 83       	st	Z, r25
			g_tripFlagDN=0;
    1d96:	10 92 07 38 	sts	0x3807, r1	; 0x803807 <g_tripFlagDN>
			g_durCtr=DURCTR_MAX;
    1d9a:	9e ef       	ldi	r25, 0xFE	; 254
    1d9c:	90 93 00 38 	sts	0x3800, r25	; 0x803800 <_edata>
			g_durIndexDN++;
    1da0:	8f 5f       	subi	r24, 0xFF	; 255
    1da2:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <g_durIndexDN>
// 			g_tripFlagENT=0;
// 			g_durCtr=DURCTR_MAX;
// 			g_durIndexENT++;
// 		}
// 	}
	clearBothPIRinterrupts();//PIR DL line (interrupts) can get stuck high if not acknowledged by a pull low.
    1da6:	0e 94 43 0c 	call	0x1886	; 0x1886 <clearBothPIRinterrupts>
	/* Overflow interrupt flag has to be cleared manually */
	g_gotMotionDN=0;
    1daa:	10 92 09 38 	sts	0x3809, r1	; 0x803809 <g_gotMotionDN>
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1dae:	e6 e3       	ldi	r30, 0x36	; 54
    1db0:	f4 e0       	ldi	r31, 0x04	; 4
    1db2:	80 81       	ld	r24, Z
    1db4:	88 7f       	andi	r24, 0xF8	; 248
    1db6:	82 60       	ori	r24, 0x02	; 2
    1db8:	80 83       	st	Z, r24
	g_gotMotionENT=0;
	TPB6_set_isc(PORT_ISC_RISING_gc);
#ifdef HAS_SEC_PIR	
	TPA1_set_isc(PORT_ISC_RISING_gc);
#endif	
	RTC.PITINTFLAGS = 1;
    1dba:	81 e0       	ldi	r24, 0x01	; 1
    1dbc:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
}
    1dc0:	ff 91       	pop	r31
    1dc2:	ef 91       	pop	r30
    1dc4:	bf 91       	pop	r27
    1dc6:	af 91       	pop	r26
    1dc8:	9f 91       	pop	r25
    1dca:	8f 91       	pop	r24
    1dcc:	7f 91       	pop	r23
    1dce:	6f 91       	pop	r22
    1dd0:	5f 91       	pop	r21
    1dd2:	4f 91       	pop	r20
    1dd4:	3f 91       	pop	r19
    1dd6:	2f 91       	pop	r18
    1dd8:	0f 90       	pop	r0
    1dda:	0f be       	out	0x3f, r0	; 63
    1ddc:	0f 90       	pop	r0
    1dde:	1f 90       	pop	r1
    1de0:	18 95       	reti

00001de2 <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	08 95       	ret

00001de6 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    1de6:	42 e0       	ldi	r20, 0x02	; 2
    1de8:	68 ed       	ldi	r22, 0xD8	; 216
    1dea:	88 e7       	ldi	r24, 0x78	; 120
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <protected_write_io>
    1df2:	40 e0       	ldi	r20, 0x00	; 0
    1df4:	68 ed       	ldi	r22, 0xD8	; 216
    1df6:	80 e7       	ldi	r24, 0x70	; 112
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <protected_write_io>
    1dfe:	40 e0       	ldi	r20, 0x00	; 0
    1e00:	68 ed       	ldi	r22, 0xD8	; 216
    1e02:	80 e6       	ldi	r24, 0x60	; 96
    1e04:	90 e0       	ldi	r25, 0x00	; 0
    1e06:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <protected_write_io>
	 //ccp_write_io((void*)&(CLKCTRL.OSC20MCTRLA),1 << CLKCTRL_RUNSTDBY_bp /* Run standby: ENabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	08 95       	ret

00001e0e <CPUINT_init>:
	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

//	ENABLE_INTERRUPTS();

	return 0;
}
    1e0e:	80 e0       	ldi	r24, 0x00	; 0
    1e10:	08 95       	ret

00001e12 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    1e12:	e0 e1       	ldi	r30, 0x10	; 16
    1e14:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1e16:	80 81       	ld	r24, Z
    1e18:	88 60       	ori	r24, 0x08	; 8
    1e1a:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1e1c:	e8 31       	cpi	r30, 0x18	; 24
    1e1e:	84 e0       	ldi	r24, 0x04	; 4
    1e20:	f8 07       	cpc	r31, r24
    1e22:	c9 f7       	brne	.-14     	; 0x1e16 <mcu_init+0x4>
    1e24:	e0 e3       	ldi	r30, 0x30	; 48
    1e26:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1e28:	80 81       	ld	r24, Z
    1e2a:	88 60       	ori	r24, 0x08	; 8
    1e2c:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1e2e:	e8 33       	cpi	r30, 0x38	; 56
    1e30:	84 e0       	ldi	r24, 0x04	; 4
    1e32:	f8 07       	cpc	r31, r24
    1e34:	c9 f7       	brne	.-14     	; 0x1e28 <mcu_init+0x16>
	}

//	for (uint8_t i = 0; i < 8; i++) {
//		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
//	}
}
    1e36:	08 95       	ret

00001e38 <USART_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    1e38:	23 98       	cbi	0x04, 3	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1e3a:	e3 e3       	ldi	r30, 0x33	; 51
    1e3c:	f4 e0       	ldi	r31, 0x04	; 4
    1e3e:	80 81       	ld	r24, Z
    1e40:	87 7f       	andi	r24, 0xF7	; 247
    1e42:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1e44:	22 9a       	sbi	0x04, 2	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1e46:	2a 98       	cbi	0x05, 2	; 5
{
	TPB3_set_dir(PORT_DIR_IN);
	TPB3_set_pull_mode(PORT_PULL_OFF);
	TPB2_set_dir(PORT_DIR_OUT);
	TPB2_set_level(0);
	USART_0_init();
    1e48:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <USART_0_init>
    1e4c:	08 95       	ret

00001e4e <system_init>:
}
void system_init()
{
	mcu_init();
    1e4e:	0e 94 09 0f 	call	0x1e12	; 0x1e12 <mcu_init>

	/* PORT setting on PB4 */

	CLKCTRL_init();
    1e52:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <CLKCTRL_init>

	RTC_0_init();
    1e56:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <RTC_0_init>

//	ADC_0_initialization();

	USART_0_initialization();
    1e5a:	0e 94 1c 0f 	call	0x1e38	; 0x1e38 <USART_0_initialization>

	CPUINT_init();
    1e5e:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <CPUINT_init>

	SLPCTRL_init();
    1e62:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <SLPCTRL_init>

	BOD_init();
    1e66:	0e 94 f1 0e 	call	0x1de2	; 0x1de2 <BOD_init>
    1e6a:	08 95       	ret

00001e6c <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
    1e6c:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    1e6e:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    1e70:	40 83       	st	Z, r20
	ret                             // Return to caller
    1e72:	08 95       	ret

00001e74 <RTC_0_init>:
 * \brief Initialize RTC interface
 */
int8_t RTC_0_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
    1e74:	e0 e4       	ldi	r30, 0x40	; 64
    1e76:	f1 e0       	ldi	r31, 0x01	; 1
    1e78:	81 81       	ldd	r24, Z+1	; 0x01
    1e7a:	81 11       	cpse	r24, r1
    1e7c:	fd cf       	rjmp	.-6      	; 0x1e78 <RTC_0_init+0x4>

// 	RTC.INTCTRL = 0 << RTC_CMP_bp    /* Compare Match Interrupt enable: disabled */
// 	              | 1 << RTC_OVF_bp; /* Overflow Interrupt enable: enabled */


	RTC.PITCTRLA = RTC_PERIOD_CYC32768_gc /* Off */
    1e7e:	e0 e4       	ldi	r30, 0x40	; 64
    1e80:	f1 e0       	ldi	r31, 0x01	; 1
    1e82:	81 e7       	ldi	r24, 0x71	; 113
    1e84:	80 8b       	std	Z+16, r24	; 0x10
//	RTC.PITCTRLA = RTC_PERIOD_CYC16384_gc /* Off */
			 | 1 << RTC_PITEN_bp; /* Enable: disabled */

	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.PITINTCTRL = 1 << RTC_PI_bp; /* Periodic Interrupt: disabled */
    1e86:	81 e0       	ldi	r24, 0x01	; 1
    1e88:	82 8b       	std	Z+18, r24	; 0x12

	return 0;
}
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	08 95       	ret

00001e8e <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    1e8e:	80 e0       	ldi	r24, 0x00	; 0
    1e90:	08 95       	ret

00001e92 <USART_0_init>:
 * \brief Initialize usart interface
 */
int8_t USART_0_init()
{

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600); /* set baud rate register */
    1e92:	e0 e0       	ldi	r30, 0x00	; 0
    1e94:	f8 e0       	ldi	r31, 0x08	; 8
    1e96:	8c e6       	ldi	r24, 0x6C	; 108
    1e98:	95 e0       	ldi	r25, 0x05	; 5
    1e9a:	80 87       	std	Z+8, r24	; 0x08
    1e9c:	91 87       	std	Z+9, r25	; 0x09

	 USART0.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    1e9e:	80 e8       	ldi	r24, 0x80	; 128
    1ea0:	85 83       	std	Z+5, r24	; 0x05
			 | USART_RS485_OFF_gc /* RS485 Mode disabled */
			 | 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: enabled */
			 | 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			 | 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */
		
	USART0.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    1ea2:	80 ec       	ldi	r24, 0xC0	; 192
    1ea4:	86 83       	std	Z+6, r24	; 0x06
	// USART0.RXPLCTRL = 0x0 << USART_RXPL_gp; /* Receiver Pulse Lenght: 0x0 */

	// USART0.TXPLCTRL = 0x0 << USART_TXPL_gp; /* Transmit pulse length: 0x0 */

	return 0;
}
    1ea6:	80 e0       	ldi	r24, 0x00	; 0
    1ea8:	08 95       	ret

00001eaa <__tablejump2__>:
    1eaa:	ee 0f       	add	r30, r30
    1eac:	ff 1f       	adc	r31, r31
    1eae:	05 90       	lpm	r0, Z+
    1eb0:	f4 91       	lpm	r31, Z
    1eb2:	e0 2d       	mov	r30, r0
    1eb4:	09 94       	ijmp

00001eb6 <ccp_write_io>:
    1eb6:	dc 01       	movw	r26, r24
    1eb8:	28 ed       	ldi	r18, 0xD8	; 216
    1eba:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x700034>
    1ebe:	6c 93       	st	X, r22
    1ec0:	08 95       	ret

00001ec2 <_exit>:
    1ec2:	f8 94       	cli

00001ec4 <__stop_program>:
    1ec4:	ff cf       	rjmp	.-2      	; 0x1ec4 <__stop_program>
