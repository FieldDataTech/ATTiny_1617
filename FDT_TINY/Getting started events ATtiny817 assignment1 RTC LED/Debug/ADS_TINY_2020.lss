
ADS_TINY_2020.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  000024e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002338  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000116  0000a338  00002338  000023cc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000105  00803800  00803800  000024e2  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  000024e2  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002514  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000328  00000000  00000000  00002558  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000926f  00000000  00000000  00002880  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000022c0  00000000  00000000  0000baef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000033d0  00000000  00000000  0000ddaf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000818  00000000  00000000  00011180  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000220e  00000000  00000000  00011998  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00004b54  00000000  00000000  00013ba6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000318  00000000  00000000  000186fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 96 00 	jmp	0x12c	; 0x12c <__ctors_end>
       4:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       8:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      10:	0c 94 1d 10 	jmp	0x203a	; 0x203a <__vector_4>
      14:	0c 94 99 0f 	jmp	0x1f32	; 0x1f32 <__vector_5>
      18:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      1c:	0c 94 4c 10 	jmp	0x2098	; 0x2098 <__vector_7>
      20:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      24:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      28:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      2c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      30:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      34:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__vector_13>
      38:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      3c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      40:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      44:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      48:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      4c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      50:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      54:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      58:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      5c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      60:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      64:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      68:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      6c:	0c 94 e3 0f 	jmp	0x1fc6	; 0x1fc6 <__vector_27>
      70:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      74:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      78:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      7c:	e1 00       	.word	0x00e1	; ????
      7e:	e4 00       	.word	0x00e4	; ????
      80:	e7 00       	.word	0x00e7	; ????
      82:	ea 00       	.word	0x00ea	; ????
      84:	ed 00       	.word	0x00ed	; ????
      86:	f0 00       	.word	0x00f0	; ????
      88:	f3 00       	.word	0x00f3	; ????
      8a:	f6 00       	.word	0x00f6	; ????
      8c:	f9 00       	.word	0x00f9	; ????
      8e:	1f 01       	movw	r2, r30
      90:	08 01       	movw	r0, r16
      92:	0a 01       	movw	r0, r20
      94:	0c 01       	movw	r0, r24
      96:	0e 01       	movw	r0, r28
      98:	10 01       	movw	r2, r0
      9a:	12 01       	movw	r2, r4
      9c:	14 01       	movw	r2, r8
      9e:	17 01       	movw	r2, r14
      a0:	1a 01       	movw	r2, r20
      a2:	2c 01       	movw	r4, r24
      a4:	2f 01       	movw	r4, r30
      a6:	32 01       	movw	r6, r4
      a8:	35 01       	movw	r6, r10
      aa:	38 01       	movw	r6, r16
      ac:	3b 01       	movw	r6, r22
      ae:	3e 01       	movw	r6, r28
      b0:	41 01       	movw	r8, r2
      b2:	44 01       	movw	r8, r8
      b4:	59 01       	movw	r10, r18
      b6:	59 01       	movw	r10, r18
      b8:	59 01       	movw	r10, r18
      ba:	59 01       	movw	r10, r18
      bc:	59 01       	movw	r10, r18
      be:	59 01       	movw	r10, r18
      c0:	59 01       	movw	r10, r18
      c2:	47 01       	movw	r8, r14
      c4:	4a 01       	movw	r8, r20
      c6:	4d 01       	movw	r8, r26
      c8:	50 01       	movw	r10, r0
      ca:	53 01       	movw	r10, r6
      cc:	56 01       	movw	r10, r12
      ce:	91 01       	movw	r18, r2
      d0:	65 01       	movw	r12, r10
      d2:	67 01       	movw	r12, r14
      d4:	69 01       	movw	r12, r18
      d6:	6b 01       	movw	r12, r22
      d8:	6e 01       	movw	r12, r28
      da:	71 01       	movw	r14, r2
      dc:	74 01       	movw	r14, r8
      de:	77 01       	movw	r14, r14
      e0:	7a 01       	movw	r14, r20
      e2:	8c 01       	movw	r16, r24
      e4:	8c 01       	movw	r16, r24
      e6:	8c 01       	movw	r16, r24
      e8:	8c 01       	movw	r16, r24
      ea:	8c 01       	movw	r16, r24
      ec:	8c 01       	movw	r16, r24
      ee:	8c 01       	movw	r16, r24
      f0:	8f 01       	movw	r16, r30
      f2:	7d 01       	movw	r14, r26
      f4:	80 01       	movw	r16, r0
      f6:	83 01       	movw	r16, r6
      f8:	86 01       	movw	r16, r12
      fa:	89 01       	movw	r16, r18
      fc:	f4 02       	muls	r31, r20
      fe:	f6 02       	muls	r31, r22
     100:	f8 02       	muls	r31, r24
     102:	fa 02       	muls	r31, r26
     104:	fc 02       	muls	r31, r28
     106:	fe 02       	muls	r31, r30
     108:	00 03       	mulsu	r16, r16
     10a:	02 03       	mulsu	r16, r18
     10c:	04 03       	mulsu	r16, r20
     10e:	06 03       	mulsu	r16, r22
     110:	08 03       	fmul	r16, r16
     112:	0a 03       	fmul	r16, r18
     114:	0c 03       	fmul	r16, r20
     116:	0e 03       	fmul	r16, r22
     118:	10 03       	mulsu	r17, r16
     11a:	12 03       	mulsu	r17, r18
     11c:	0b 0f       	add	r16, r27
     11e:	0e 0f       	add	r16, r30
     120:	21 0f       	add	r18, r17
     122:	31 0f       	add	r19, r17
     124:	3b 0f       	add	r19, r27
     126:	45 0f       	add	r20, r21
     128:	4f 0f       	add	r20, r31
     12a:	59 0f       	add	r21, r25

0000012c <__ctors_end>:
     12c:	11 24       	eor	r1, r1
     12e:	1f be       	out	0x3f, r1	; 63
     130:	cf ef       	ldi	r28, 0xFF	; 255
     132:	cd bf       	out	0x3d, r28	; 61
     134:	df e3       	ldi	r29, 0x3F	; 63
     136:	de bf       	out	0x3e, r29	; 62

00000138 <__do_clear_bss>:
     138:	29 e3       	ldi	r18, 0x39	; 57
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	b8 e3       	ldi	r27, 0x38	; 56
     13e:	01 c0       	rjmp	.+2      	; 0x142 <.do_clear_bss_start>

00000140 <.do_clear_bss_loop>:
     140:	1d 92       	st	X+, r1

00000142 <.do_clear_bss_start>:
     142:	a5 30       	cpi	r26, 0x05	; 5
     144:	b2 07       	cpc	r27, r18
     146:	e1 f7       	brne	.-8      	; 0x140 <.do_clear_bss_loop>
     148:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <main>
     14c:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <_exit>

00000150 <__bad_interrupt>:
     150:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000154 <atmel_start_init>:
     154:	0e 94 60 11 	call	0x22c0	; 0x22c0 <system_init>
     158:	08 95       	ret

0000015a <searchRcvBuffuBlox>:
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     15a:	29 e0       	ldi	r18, 0x09	; 9
     15c:	38 e3       	ldi	r19, 0x38	; 56
     15e:	20 93 03 39 	sts	0x3903, r18	; 0x803903 <GPSSearchPtr>
     162:	30 93 04 39 	sts	0x3904, r19	; 0x803904 <GPSSearchPtr+0x1>
     166:	a0 91 ff 38 	lds	r26, 0x38FF	; 0x8038ff <p_GPSrcvData>
     16a:	b0 91 00 39 	lds	r27, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
     16e:	15 97       	sbiw	r26, 0x05	; 5
     170:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     174:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     178:	9f 01       	movw	r18, r30
     17a:	2f 5f       	subi	r18, 0xFF	; 255
     17c:	3f 4f       	sbci	r19, 0xFF	; 255
     17e:	20 93 03 39 	sts	0x3903, r18	; 0x803903 <GPSSearchPtr>
     182:	30 93 04 39 	sts	0x3904, r19	; 0x803904 <GPSSearchPtr+0x1>
     186:	91 81       	ldd	r25, Z+1	; 0x01
     188:	98 13       	cpse	r25, r24
     18a:	06 c0       	rjmp	.+12     	; 0x198 <searchRcvBuffuBlox+0x3e>
     18c:	92 81       	ldd	r25, Z+2	; 0x02
     18e:	96 13       	cpse	r25, r22
     190:	03 c0       	rjmp	.+6      	; 0x198 <searchRcvBuffuBlox+0x3e>
     192:	93 81       	ldd	r25, Z+3	; 0x03
     194:	94 17       	cp	r25, r20
     196:	31 f0       	breq	.+12     	; 0x1a4 <searchRcvBuffuBlox+0x4a>
     198:	2a 17       	cp	r18, r26
     19a:	3b 07       	cpc	r19, r27
     19c:	48 f3       	brcs	.-46     	; 0x170 <searchRcvBuffuBlox+0x16>
     19e:	8a e9       	ldi	r24, 0x9A	; 154
     1a0:	92 e0       	ldi	r25, 0x02	; 2
     1a2:	08 95       	ret
     1a4:	80 e0       	ldi	r24, 0x00	; 0
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	08 95       	ret

000001aa <asciiToHex>:
     1aa:	48 2f       	mov	r20, r24
     1ac:	86 2f       	mov	r24, r22
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	fc 01       	movw	r30, r24
     1b2:	f1 97       	sbiw	r30, 0x31	; 49
     1b4:	e9 30       	cpi	r30, 0x09	; 9
     1b6:	f1 05       	cpc	r31, r1
     1b8:	f8 f4       	brcc	.+62     	; 0x1f8 <asciiToHex+0x4e>
     1ba:	e2 5c       	subi	r30, 0xC2	; 194
     1bc:	ff 4f       	sbci	r31, 0xFF	; 255
     1be:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__tablejump2__>
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	1a c0       	rjmp	.+52     	; 0x1fc <asciiToHex+0x52>
     1c8:	82 e0       	ldi	r24, 0x02	; 2
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	17 c0       	rjmp	.+46     	; 0x1fc <asciiToHex+0x52>
     1ce:	83 e0       	ldi	r24, 0x03	; 3
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	14 c0       	rjmp	.+40     	; 0x1fc <asciiToHex+0x52>
     1d4:	84 e0       	ldi	r24, 0x04	; 4
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	11 c0       	rjmp	.+34     	; 0x1fc <asciiToHex+0x52>
     1da:	85 e0       	ldi	r24, 0x05	; 5
     1dc:	90 e0       	ldi	r25, 0x00	; 0
     1de:	0e c0       	rjmp	.+28     	; 0x1fc <asciiToHex+0x52>
     1e0:	86 e0       	ldi	r24, 0x06	; 6
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	0b c0       	rjmp	.+22     	; 0x1fc <asciiToHex+0x52>
     1e6:	87 e0       	ldi	r24, 0x07	; 7
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	08 c0       	rjmp	.+16     	; 0x1fc <asciiToHex+0x52>
     1ec:	88 e0       	ldi	r24, 0x08	; 8
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	05 c0       	rjmp	.+10     	; 0x1fc <asciiToHex+0x52>
     1f2:	89 e0       	ldi	r24, 0x09	; 9
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <asciiToHex+0x52>
     1f8:	80 e0       	ldi	r24, 0x00	; 0
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	50 e0       	ldi	r21, 0x00	; 0
     1fe:	fa 01       	movw	r30, r20
     200:	f0 97       	sbiw	r30, 0x30	; 48
     202:	ea 30       	cpi	r30, 0x0A	; 10
     204:	f1 05       	cpc	r31, r1
     206:	c8 f4       	brcc	.+50     	; 0x23a <asciiToHex+0x90>
     208:	e9 5b       	subi	r30, 0xB9	; 185
     20a:	ff 4f       	sbci	r31, 0xFF	; 255
     20c:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__tablejump2__>
     210:	0a 96       	adiw	r24, 0x0a	; 10
     212:	08 95       	ret
     214:	44 96       	adiw	r24, 0x14	; 20
     216:	08 95       	ret
     218:	4e 96       	adiw	r24, 0x1e	; 30
     21a:	08 95       	ret
     21c:	88 96       	adiw	r24, 0x28	; 40
     21e:	08 95       	ret
     220:	c2 96       	adiw	r24, 0x32	; 50
     222:	08 95       	ret
     224:	cc 96       	adiw	r24, 0x3c	; 60
     226:	08 95       	ret
     228:	8a 5b       	subi	r24, 0xBA	; 186
     22a:	9f 4f       	sbci	r25, 0xFF	; 255
     22c:	08 95       	ret
     22e:	80 5b       	subi	r24, 0xB0	; 176
     230:	9f 4f       	sbci	r25, 0xFF	; 255
     232:	08 95       	ret
     234:	86 5a       	subi	r24, 0xA6	; 166
     236:	9f 4f       	sbci	r25, 0xFF	; 255
     238:	08 95       	ret
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	08 95       	ret

00000240 <asciiHexToHex>:
     240:	48 2f       	mov	r20, r24
     242:	86 2f       	mov	r24, r22
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	fc 01       	movw	r30, r24
     248:	f1 97       	sbiw	r30, 0x31	; 49
     24a:	e6 31       	cpi	r30, 0x16	; 22
     24c:	f1 05       	cpc	r31, r1
     24e:	88 f5       	brcc	.+98     	; 0x2b2 <asciiHexToHex+0x72>
     250:	ef 5a       	subi	r30, 0xAF	; 175
     252:	ff 4f       	sbci	r31, 0xFF	; 255
     254:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__tablejump2__>
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	2c c0       	rjmp	.+88     	; 0x2b6 <asciiHexToHex+0x76>
     25e:	82 e0       	ldi	r24, 0x02	; 2
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	29 c0       	rjmp	.+82     	; 0x2b6 <asciiHexToHex+0x76>
     264:	83 e0       	ldi	r24, 0x03	; 3
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	26 c0       	rjmp	.+76     	; 0x2b6 <asciiHexToHex+0x76>
     26a:	84 e0       	ldi	r24, 0x04	; 4
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	23 c0       	rjmp	.+70     	; 0x2b6 <asciiHexToHex+0x76>
     270:	85 e0       	ldi	r24, 0x05	; 5
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	20 c0       	rjmp	.+64     	; 0x2b6 <asciiHexToHex+0x76>
     276:	86 e0       	ldi	r24, 0x06	; 6
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	1d c0       	rjmp	.+58     	; 0x2b6 <asciiHexToHex+0x76>
     27c:	87 e0       	ldi	r24, 0x07	; 7
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	1a c0       	rjmp	.+52     	; 0x2b6 <asciiHexToHex+0x76>
     282:	88 e0       	ldi	r24, 0x08	; 8
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	17 c0       	rjmp	.+46     	; 0x2b6 <asciiHexToHex+0x76>
     288:	89 e0       	ldi	r24, 0x09	; 9
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	14 c0       	rjmp	.+40     	; 0x2b6 <asciiHexToHex+0x76>
     28e:	8a e0       	ldi	r24, 0x0A	; 10
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	11 c0       	rjmp	.+34     	; 0x2b6 <asciiHexToHex+0x76>
     294:	8b e0       	ldi	r24, 0x0B	; 11
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	0e c0       	rjmp	.+28     	; 0x2b6 <asciiHexToHex+0x76>
     29a:	8c e0       	ldi	r24, 0x0C	; 12
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0b c0       	rjmp	.+22     	; 0x2b6 <asciiHexToHex+0x76>
     2a0:	8d e0       	ldi	r24, 0x0D	; 13
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	08 c0       	rjmp	.+16     	; 0x2b6 <asciiHexToHex+0x76>
     2a6:	8e e0       	ldi	r24, 0x0E	; 14
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	05 c0       	rjmp	.+10     	; 0x2b6 <asciiHexToHex+0x76>
     2ac:	8f e0       	ldi	r24, 0x0F	; 15
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <asciiHexToHex+0x76>
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	50 e0       	ldi	r21, 0x00	; 0
     2b8:	fa 01       	movw	r30, r20
     2ba:	f0 97       	sbiw	r30, 0x30	; 48
     2bc:	e7 31       	cpi	r30, 0x17	; 23
     2be:	f1 05       	cpc	r31, r1
     2c0:	58 f5       	brcc	.+86     	; 0x318 <asciiHexToHex+0xd8>
     2c2:	e9 59       	subi	r30, 0x99	; 153
     2c4:	ff 4f       	sbci	r31, 0xFF	; 255
     2c6:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__tablejump2__>
     2ca:	40 96       	adiw	r24, 0x10	; 16
     2cc:	08 95       	ret
     2ce:	80 96       	adiw	r24, 0x20	; 32
     2d0:	08 95       	ret
     2d2:	c0 96       	adiw	r24, 0x30	; 48
     2d4:	08 95       	ret
     2d6:	80 5c       	subi	r24, 0xC0	; 192
     2d8:	9f 4f       	sbci	r25, 0xFF	; 255
     2da:	08 95       	ret
     2dc:	80 5b       	subi	r24, 0xB0	; 176
     2de:	9f 4f       	sbci	r25, 0xFF	; 255
     2e0:	08 95       	ret
     2e2:	80 5a       	subi	r24, 0xA0	; 160
     2e4:	9f 4f       	sbci	r25, 0xFF	; 255
     2e6:	08 95       	ret
     2e8:	80 59       	subi	r24, 0x90	; 144
     2ea:	9f 4f       	sbci	r25, 0xFF	; 255
     2ec:	08 95       	ret
     2ee:	80 58       	subi	r24, 0x80	; 128
     2f0:	9f 4f       	sbci	r25, 0xFF	; 255
     2f2:	08 95       	ret
     2f4:	80 57       	subi	r24, 0x70	; 112
     2f6:	9f 4f       	sbci	r25, 0xFF	; 255
     2f8:	08 95       	ret
     2fa:	80 eb       	ldi	r24, 0xB0	; 176
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	08 95       	ret
     300:	80 ec       	ldi	r24, 0xC0	; 192
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	08 95       	ret
     306:	80 ed       	ldi	r24, 0xD0	; 208
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	08 95       	ret
     30c:	80 ee       	ldi	r24, 0xE0	; 224
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	08 95       	ret
     312:	80 ef       	ldi	r24, 0xF0	; 240
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	08 95       	ret
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	08 95       	ret
     31e:	80 ea       	ldi	r24, 0xA0	; 160
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	08 95       	ret

00000324 <delay_ms>:
     324:	ab 01       	movw	r20, r22
     326:	bc 01       	movw	r22, r24
     328:	41 15       	cp	r20, r1
     32a:	51 05       	cpc	r21, r1
     32c:	61 05       	cpc	r22, r1
     32e:	71 05       	cpc	r23, r1
     330:	61 f4       	brne	.+24     	; 0x34a <delay_ms+0x26>
     332:	08 95       	ret
     334:	00 00       	nop
     336:	01 96       	adiw	r24, 0x01	; 1
     338:	8a 39       	cpi	r24, 0x9A	; 154
     33a:	21 e0       	ldi	r18, 0x01	; 1
     33c:	92 07       	cpc	r25, r18
     33e:	d1 f7       	brne	.-12     	; 0x334 <delay_ms+0x10>
     340:	41 50       	subi	r20, 0x01	; 1
     342:	51 09       	sbc	r21, r1
     344:	61 09       	sbc	r22, r1
     346:	71 09       	sbc	r23, r1
     348:	19 f0       	breq	.+6      	; 0x350 <delay_ms+0x2c>
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	f2 cf       	rjmp	.-28     	; 0x334 <delay_ms+0x10>
     350:	08 95       	ret

00000352 <getALSfromProx>:
     352:	6f 92       	push	r6
     354:	7f 92       	push	r7
     356:	8f 92       	push	r8
     358:	9f 92       	push	r9
     35a:	af 92       	push	r10
     35c:	bf 92       	push	r11
     35e:	cf 92       	push	r12
     360:	df 92       	push	r13
     362:	ef 92       	push	r14
     364:	ff 92       	push	r15
     366:	0f 93       	push	r16
     368:	1f 93       	push	r17
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	85 e0       	ldi	r24, 0x05	; 5
     370:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__TEXT_REGION_LENGTH__+0x700192>
     374:	8e e0       	ldi	r24, 0x0E	; 14
     376:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <__TEXT_REGION_LENGTH__+0x700184>
     37a:	83 e0       	ldi	r24, 0x03	; 3
     37c:	80 93 40 0a 	sts	0x0A40, r24	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
     380:	84 e0       	ldi	r24, 0x04	; 4
     382:	80 93 41 0a 	sts	0x0A41, r24	; 0x800a41 <__TEXT_REGION_LENGTH__+0x700a41>
     386:	80 e1       	ldi	r24, 0x10	; 16
     388:	80 93 44 0a 	sts	0x0A44, r24	; 0x800a44 <__TEXT_REGION_LENGTH__+0x700a44>
     38c:	a8 95       	wdr
     38e:	25 9a       	sbi	0x04, 5	; 4
     390:	21 9a       	sbi	0x04, 1	; 4
     392:	02 9a       	sbi	0x00, 2	; 0
     394:	44 98       	cbi	0x08, 4	; 8
     396:	2d 9a       	sbi	0x05, 5	; 5
     398:	29 9a       	sbi	0x05, 1	; 5
     39a:	0a 98       	cbi	0x01, 2	; 1
	...
     3a4:	2d 98       	cbi	0x05, 5	; 5
	...
     3ae:	0a 9a       	sbi	0x01, 2	; 1
     3b0:	61 e0       	ldi	r22, 0x01	; 1
     3b2:	70 e0       	ldi	r23, 0x00	; 0
     3b4:	80 e0       	ldi	r24, 0x00	; 0
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     3bc:	68 94       	set
     3be:	99 24       	eor	r9, r9
     3c0:	94 f8       	bld	r9, 4
     3c2:	00 e0       	ldi	r16, 0x00	; 0
     3c4:	10 e0       	ldi	r17, 0x00	; 0
     3c6:	0f 2e       	mov	r0, r31
     3c8:	f5 e4       	ldi	r31, 0x45	; 69
     3ca:	af 2e       	mov	r10, r31
     3cc:	fa e0       	ldi	r31, 0x0A	; 10
     3ce:	bf 2e       	mov	r11, r31
     3d0:	f0 2d       	mov	r31, r0
     3d2:	77 24       	eor	r7, r7
     3d4:	73 94       	inc	r7
     3d6:	0f 2e       	mov	r0, r31
     3d8:	f4 e4       	ldi	r31, 0x44	; 68
     3da:	cf 2e       	mov	r12, r31
     3dc:	fa e0       	ldi	r31, 0x0A	; 10
     3de:	df 2e       	mov	r13, r31
     3e0:	f0 2d       	mov	r31, r0
     3e2:	0f 2e       	mov	r0, r31
     3e4:	f1 e1       	ldi	r31, 0x11	; 17
     3e6:	8f 2e       	mov	r8, r31
     3e8:	f0 2d       	mov	r31, r0
     3ea:	0f 2e       	mov	r0, r31
     3ec:	fc e4       	ldi	r31, 0x4C	; 76
     3ee:	ef 2e       	mov	r14, r31
     3f0:	fa e0       	ldi	r31, 0x0A	; 10
     3f2:	ff 2e       	mov	r15, r31
     3f4:	f0 2d       	mov	r31, r0
     3f6:	c6 e4       	ldi	r28, 0x46	; 70
     3f8:	da e0       	ldi	r29, 0x0A	; 10
     3fa:	68 94       	set
     3fc:	66 24       	eor	r6, r6
     3fe:	64 f8       	bld	r6, 4
     400:	29 98       	cbi	0x05, 1	; 5
     402:	61 e0       	ldi	r22, 0x01	; 1
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     40e:	f5 01       	movw	r30, r10
     410:	70 82       	st	Z, r7
     412:	f6 01       	movw	r30, r12
     414:	80 82       	st	Z, r8
	...
     41e:	29 9a       	sbi	0x05, 1	; 5
     420:	f7 01       	movw	r30, r14
     422:	80 81       	ld	r24, Z
     424:	91 81       	ldd	r25, Z+1	; 0x01
     426:	a8 95       	wdr
     428:	88 81       	ld	r24, Y
     42a:	81 11       	cpse	r24, r1
     42c:	07 c0       	rjmp	.+14     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     42e:	88 e2       	ldi	r24, 0x28	; 40
     430:	93 e2       	ldi	r25, 0x23	; 35
     432:	28 81       	ld	r18, Y
     434:	21 11       	cpse	r18, r1
     436:	02 c0       	rjmp	.+4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     438:	01 97       	sbiw	r24, 0x01	; 1
     43a:	d9 f7       	brne	.-10     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     43c:	f7 01       	movw	r30, r14
     43e:	80 81       	ld	r24, Z
     440:	91 81       	ldd	r25, Z+1	; 0x01
     442:	08 0f       	add	r16, r24
     444:	19 1f       	adc	r17, r25
     446:	f5 01       	movw	r30, r10
     448:	10 82       	st	Z, r1
     44a:	f6 01       	movw	r30, r12
     44c:	60 82       	st	Z, r6
     44e:	f5 01       	movw	r30, r10
     450:	10 82       	st	Z, r1
     452:	62 e0       	ldi	r22, 0x02	; 2
     454:	70 e0       	ldi	r23, 0x00	; 0
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     45e:	9a 94       	dec	r9
     460:	91 10       	cpse	r9, r1
     462:	ce cf       	rjmp	.-100    	; 0x400 <__LOCK_REGION_LENGTH__>
     464:	c8 01       	movw	r24, r16
     466:	95 95       	asr	r25
     468:	87 95       	ror	r24
     46a:	95 95       	asr	r25
     46c:	87 95       	ror	r24
     46e:	95 95       	asr	r25
     470:	87 95       	ror	r24
     472:	95 95       	asr	r25
     474:	87 95       	ror	r24
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	1f 91       	pop	r17
     47c:	0f 91       	pop	r16
     47e:	ff 90       	pop	r15
     480:	ef 90       	pop	r14
     482:	df 90       	pop	r13
     484:	cf 90       	pop	r12
     486:	bf 90       	pop	r11
     488:	af 90       	pop	r10
     48a:	9f 90       	pop	r9
     48c:	8f 90       	pop	r8
     48e:	7f 90       	pop	r7
     490:	6f 90       	pop	r6
     492:	08 95       	ret

00000494 <redBlink>:
     494:	cf 93       	push	r28
     496:	c8 2f       	mov	r28, r24
     498:	42 9a       	sbi	0x08, 2	; 8
     49a:	88 23       	and	r24, r24
     49c:	81 f0       	breq	.+32     	; 0x4be <redBlink+0x2a>
     49e:	4a 98       	cbi	0x09, 2	; 9
     4a0:	6a e0       	ldi	r22, 0x0A	; 10
     4a2:	70 e0       	ldi	r23, 0x00	; 0
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     4ac:	4a 9a       	sbi	0x09, 2	; 9
     4ae:	62 e3       	ldi	r22, 0x32	; 50
     4b0:	70 e0       	ldi	r23, 0x00	; 0
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     4ba:	c1 50       	subi	r28, 0x01	; 1
     4bc:	81 f7       	brne	.-32     	; 0x49e <redBlink+0xa>
     4be:	42 98       	cbi	0x08, 2	; 8
     4c0:	e2 e5       	ldi	r30, 0x52	; 82
     4c2:	f4 e0       	ldi	r31, 0x04	; 4
     4c4:	80 81       	ld	r24, Z
     4c6:	88 60       	ori	r24, 0x08	; 8
     4c8:	80 83       	st	Z, r24
     4ca:	cf 91       	pop	r28
     4cc:	08 95       	ret

000004ce <myDelay_hus>:
     4ce:	ab 01       	movw	r20, r22
     4d0:	bc 01       	movw	r22, r24
     4d2:	41 15       	cp	r20, r1
     4d4:	51 05       	cpc	r21, r1
     4d6:	61 05       	cpc	r22, r1
     4d8:	71 05       	cpc	r23, r1
     4da:	59 f4       	brne	.+22     	; 0x4f2 <myDelay_hus+0x24>
     4dc:	08 95       	ret
     4de:	00 00       	nop
     4e0:	01 96       	adiw	r24, 0x01	; 1
     4e2:	8e 32       	cpi	r24, 0x2E	; 46
     4e4:	91 05       	cpc	r25, r1
     4e6:	d9 f7       	brne	.-10     	; 0x4de <myDelay_hus+0x10>
     4e8:	41 50       	subi	r20, 0x01	; 1
     4ea:	51 09       	sbc	r21, r1
     4ec:	61 09       	sbc	r22, r1
     4ee:	71 09       	sbc	r23, r1
     4f0:	19 f0       	breq	.+6      	; 0x4f8 <myDelay_hus+0x2a>
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	f3 cf       	rjmp	.-26     	; 0x4de <myDelay_hus+0x10>
     4f8:	08 95       	ret

000004fa <usart_put_string>:
     4fa:	66 23       	and	r22, r22
     4fc:	71 f0       	breq	.+28     	; 0x51a <usart_put_string+0x20>
     4fe:	dc 01       	movw	r26, r24
     500:	9c 01       	movw	r18, r24
     502:	26 0f       	add	r18, r22
     504:	31 1d       	adc	r19, r1
     506:	e0 e0       	ldi	r30, 0x00	; 0
     508:	f8 e0       	ldi	r31, 0x08	; 8
     50a:	94 81       	ldd	r25, Z+4	; 0x04
     50c:	95 ff       	sbrs	r25, 5
     50e:	fd cf       	rjmp	.-6      	; 0x50a <usart_put_string+0x10>
     510:	9d 91       	ld	r25, X+
     512:	92 83       	std	Z+2, r25	; 0x02
     514:	a2 17       	cp	r26, r18
     516:	b3 07       	cpc	r27, r19
     518:	c1 f7       	brne	.-16     	; 0x50a <usart_put_string+0x10>
     51a:	08 95       	ret

0000051c <initGPSuBlox>:
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	c1 59       	subi	r28, 0x91	; 145
     526:	d1 09       	sbc	r29, r1
     528:	cd bf       	out	0x3d, r28	; 61
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	68 ee       	ldi	r22, 0xE8	; 232
     52e:	73 e0       	ldi	r23, 0x03	; 3
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     538:	8d e1       	ldi	r24, 0x1D	; 29
     53a:	e8 e3       	ldi	r30, 0x38	; 56
     53c:	f3 ea       	ldi	r31, 0xA3	; 163
     53e:	de 01       	movw	r26, r28
     540:	11 96       	adiw	r26, 0x01	; 1
     542:	01 90       	ld	r0, Z+
     544:	0d 92       	st	X+, r0
     546:	8a 95       	dec	r24
     548:	e1 f7       	brne	.-8      	; 0x542 <initGPSuBlox+0x26>
     54a:	6d e1       	ldi	r22, 0x1D	; 29
     54c:	ce 01       	movw	r24, r28
     54e:	01 96       	adiw	r24, 0x01	; 1
     550:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     554:	8d e1       	ldi	r24, 0x1D	; 29
     556:	e5 e5       	ldi	r30, 0x55	; 85
     558:	f3 ea       	ldi	r31, 0xA3	; 163
     55a:	de 01       	movw	r26, r28
     55c:	5e 96       	adiw	r26, 0x1e	; 30
     55e:	01 90       	ld	r0, Z+
     560:	0d 92       	st	X+, r0
     562:	8a 95       	dec	r24
     564:	e1 f7       	brne	.-8      	; 0x55e <initGPSuBlox+0x42>
     566:	6d e1       	ldi	r22, 0x1D	; 29
     568:	ce 01       	movw	r24, r28
     56a:	4e 96       	adiw	r24, 0x1e	; 30
     56c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     570:	8d e1       	ldi	r24, 0x1D	; 29
     572:	e2 e7       	ldi	r30, 0x72	; 114
     574:	f3 ea       	ldi	r31, 0xA3	; 163
     576:	de 01       	movw	r26, r28
     578:	db 96       	adiw	r26, 0x3b	; 59
     57a:	01 90       	ld	r0, Z+
     57c:	0d 92       	st	X+, r0
     57e:	8a 95       	dec	r24
     580:	e1 f7       	brne	.-8      	; 0x57a <initGPSuBlox+0x5e>
     582:	6d e1       	ldi	r22, 0x1D	; 29
     584:	ce 01       	movw	r24, r28
     586:	cb 96       	adiw	r24, 0x3b	; 59
     588:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     58c:	8d e1       	ldi	r24, 0x1D	; 29
     58e:	ef e8       	ldi	r30, 0x8F	; 143
     590:	f3 ea       	ldi	r31, 0xA3	; 163
     592:	de 01       	movw	r26, r28
     594:	a8 5a       	subi	r26, 0xA8	; 168
     596:	bf 4f       	sbci	r27, 0xFF	; 255
     598:	01 90       	ld	r0, Z+
     59a:	0d 92       	st	X+, r0
     59c:	8a 95       	dec	r24
     59e:	e1 f7       	brne	.-8      	; 0x598 <initGPSuBlox+0x7c>
     5a0:	6d e1       	ldi	r22, 0x1D	; 29
     5a2:	ce 01       	movw	r24, r28
     5a4:	88 5a       	subi	r24, 0xA8	; 168
     5a6:	9f 4f       	sbci	r25, 0xFF	; 255
     5a8:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     5ac:	8d e1       	ldi	r24, 0x1D	; 29
     5ae:	ec ea       	ldi	r30, 0xAC	; 172
     5b0:	f3 ea       	ldi	r31, 0xA3	; 163
     5b2:	de 01       	movw	r26, r28
     5b4:	ab 58       	subi	r26, 0x8B	; 139
     5b6:	bf 4f       	sbci	r27, 0xFF	; 255
     5b8:	01 90       	ld	r0, Z+
     5ba:	0d 92       	st	X+, r0
     5bc:	8a 95       	dec	r24
     5be:	e1 f7       	brne	.-8      	; 0x5b8 <initGPSuBlox+0x9c>
     5c0:	6d e1       	ldi	r22, 0x1D	; 29
     5c2:	ce 01       	movw	r24, r28
     5c4:	8b 58       	subi	r24, 0x8B	; 139
     5c6:	9f 4f       	sbci	r25, 0xFF	; 255
     5c8:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     5cc:	cf 56       	subi	r28, 0x6F	; 111
     5ce:	df 4f       	sbci	r29, 0xFF	; 255
     5d0:	cd bf       	out	0x3d, r28	; 61
     5d2:	de bf       	out	0x3e, r29	; 62
     5d4:	df 91       	pop	r29
     5d6:	cf 91       	pop	r28
     5d8:	08 95       	ret

000005da <hex1ToAscii>:
     5da:	8f 70       	andi	r24, 0x0F	; 15
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	fc 01       	movw	r30, r24
     5e0:	e2 58       	subi	r30, 0x82	; 130
     5e2:	ff 4f       	sbci	r31, 0xFF	; 255
     5e4:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__tablejump2__>
     5e8:	80 e3       	ldi	r24, 0x30	; 48
     5ea:	08 95       	ret
     5ec:	81 e3       	ldi	r24, 0x31	; 49
     5ee:	08 95       	ret
     5f0:	82 e3       	ldi	r24, 0x32	; 50
     5f2:	08 95       	ret
     5f4:	83 e3       	ldi	r24, 0x33	; 51
     5f6:	08 95       	ret
     5f8:	84 e3       	ldi	r24, 0x34	; 52
     5fa:	08 95       	ret
     5fc:	85 e3       	ldi	r24, 0x35	; 53
     5fe:	08 95       	ret
     600:	86 e3       	ldi	r24, 0x36	; 54
     602:	08 95       	ret
     604:	87 e3       	ldi	r24, 0x37	; 55
     606:	08 95       	ret
     608:	88 e3       	ldi	r24, 0x38	; 56
     60a:	08 95       	ret
     60c:	89 e3       	ldi	r24, 0x39	; 57
     60e:	08 95       	ret
     610:	81 e4       	ldi	r24, 0x41	; 65
     612:	08 95       	ret
     614:	82 e4       	ldi	r24, 0x42	; 66
     616:	08 95       	ret
     618:	83 e4       	ldi	r24, 0x43	; 67
     61a:	08 95       	ret
     61c:	84 e4       	ldi	r24, 0x44	; 68
     61e:	08 95       	ret
     620:	85 e4       	ldi	r24, 0x45	; 69
     622:	08 95       	ret
     624:	86 e4       	ldi	r24, 0x46	; 70
     626:	08 95       	ret

00000628 <hex2ToAscii>:
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	ec 01       	movw	r28, r24
     630:	0e 94 ed 02 	call	0x5da	; 0x5da <hex1ToAscii>
     634:	18 2f       	mov	r17, r24
     636:	ce 01       	movw	r24, r28
     638:	95 95       	asr	r25
     63a:	87 95       	ror	r24
     63c:	95 95       	asr	r25
     63e:	87 95       	ror	r24
     640:	95 95       	asr	r25
     642:	87 95       	ror	r24
     644:	95 95       	asr	r25
     646:	87 95       	ror	r24
     648:	0e 94 ed 02 	call	0x5da	; 0x5da <hex1ToAscii>
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	98 2f       	mov	r25, r24
     650:	88 27       	eor	r24, r24
     652:	81 0f       	add	r24, r17
     654:	91 1d       	adc	r25, r1
     656:	df 91       	pop	r29
     658:	cf 91       	pop	r28
     65a:	1f 91       	pop	r17
     65c:	08 95       	ret

0000065e <LCDshort>:
     65e:	df 92       	push	r13
     660:	ef 92       	push	r14
     662:	ff 92       	push	r15
     664:	0f 93       	push	r16
     666:	1f 93       	push	r17
     668:	cf 93       	push	r28
     66a:	df 93       	push	r29
     66c:	00 d0       	rcall	.+0      	; 0x66e <LCDshort+0x10>
     66e:	00 d0       	rcall	.+0      	; 0x670 <LCDshort+0x12>
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62
     674:	7c 01       	movw	r14, r24
     676:	16 2f       	mov	r17, r22
     678:	8f 2d       	mov	r24, r15
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	0e 94 14 03 	call	0x628	; 0x628 <hex2ToAscii>
     680:	08 2f       	mov	r16, r24
     682:	d9 2e       	mov	r13, r25
     684:	c7 01       	movw	r24, r14
     686:	99 27       	eor	r25, r25
     688:	0e 94 14 03 	call	0x628	; 0x628 <hex2ToAscii>
     68c:	d9 82       	std	Y+1, r13	; 0x01
     68e:	0a 83       	std	Y+2, r16	; 0x02
     690:	9b 83       	std	Y+3, r25	; 0x03
     692:	8c 83       	std	Y+4, r24	; 0x04
     694:	12 30       	cpi	r17, 0x02	; 2
     696:	51 f0       	breq	.+20     	; 0x6ac <LCDshort+0x4e>
     698:	13 30       	cpi	r17, 0x03	; 3
     69a:	71 f0       	breq	.+28     	; 0x6b8 <LCDshort+0x5a>
     69c:	11 30       	cpi	r17, 0x01	; 1
     69e:	91 f4       	brne	.+36     	; 0x6c4 <LCDshort+0x66>
     6a0:	61 e0       	ldi	r22, 0x01	; 1
     6a2:	ce 01       	movw	r24, r28
     6a4:	04 96       	adiw	r24, 0x04	; 4
     6a6:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     6aa:	11 c0       	rjmp	.+34     	; 0x6ce <LCDshort+0x70>
     6ac:	62 e0       	ldi	r22, 0x02	; 2
     6ae:	ce 01       	movw	r24, r28
     6b0:	03 96       	adiw	r24, 0x03	; 3
     6b2:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     6b6:	0b c0       	rjmp	.+22     	; 0x6ce <LCDshort+0x70>
     6b8:	63 e0       	ldi	r22, 0x03	; 3
     6ba:	ce 01       	movw	r24, r28
     6bc:	02 96       	adiw	r24, 0x02	; 2
     6be:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     6c2:	05 c0       	rjmp	.+10     	; 0x6ce <LCDshort+0x70>
     6c4:	64 e0       	ldi	r22, 0x04	; 4
     6c6:	ce 01       	movw	r24, r28
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     6ce:	24 96       	adiw	r28, 0x04	; 4
     6d0:	cd bf       	out	0x3d, r28	; 61
     6d2:	de bf       	out	0x3e, r29	; 62
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	1f 91       	pop	r17
     6da:	0f 91       	pop	r16
     6dc:	ff 90       	pop	r15
     6de:	ef 90       	pop	r14
     6e0:	df 90       	pop	r13
     6e2:	08 95       	ret

000006e4 <LCDclear>:
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
     6ec:	28 97       	sbiw	r28, 0x08	; 8
     6ee:	cd bf       	out	0x3d, r28	; 61
     6f0:	de bf       	out	0x3e, r29	; 62
     6f2:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
     6f6:	88 e0       	ldi	r24, 0x08	; 8
     6f8:	e9 ec       	ldi	r30, 0xC9	; 201
     6fa:	f3 ea       	ldi	r31, 0xA3	; 163
     6fc:	de 01       	movw	r26, r28
     6fe:	11 96       	adiw	r26, 0x01	; 1
     700:	01 90       	ld	r0, Z+
     702:	0d 92       	st	X+, r0
     704:	8a 95       	dec	r24
     706:	e1 f7       	brne	.-8      	; 0x700 <LCDclear+0x1c>
     708:	68 e0       	ldi	r22, 0x08	; 8
     70a:	ce 01       	movw	r24, r28
     70c:	01 96       	adiw	r24, 0x01	; 1
     70e:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     712:	6a e0       	ldi	r22, 0x0A	; 10
     714:	70 e0       	ldi	r23, 0x00	; 0
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     71e:	28 96       	adiw	r28, 0x08	; 8
     720:	cd bf       	out	0x3d, r28	; 61
     722:	de bf       	out	0x3e, r29	; 62
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	08 95       	ret

0000072a <LCDspace>:
     72a:	61 e0       	ldi	r22, 0x01	; 1
     72c:	8a ef       	ldi	r24, 0xFA	; 250
     72e:	93 ea       	ldi	r25, 0xA3	; 163
     730:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     734:	6a e0       	ldi	r22, 0x0A	; 10
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     740:	08 95       	ret

00000742 <clrRx>:
     742:	8a e0       	ldi	r24, 0x0A	; 10
     744:	98 e3       	ldi	r25, 0x38	; 56
     746:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
     74a:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
     74e:	80 e0       	ldi	r24, 0x00	; 0
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	28 e5       	ldi	r18, 0x58	; 88
     754:	e0 91 ff 38 	lds	r30, 0x38FF	; 0x8038ff <p_GPSrcvData>
     758:	f0 91 00 39 	lds	r31, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
     75c:	e8 0f       	add	r30, r24
     75e:	f9 1f       	adc	r31, r25
     760:	20 83       	st	Z, r18
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	86 3b       	cpi	r24, 0xB6	; 182
     766:	91 05       	cpc	r25, r1
     768:	a9 f7       	brne	.-22     	; 0x754 <clrRx+0x12>
     76a:	8a e0       	ldi	r24, 0x0A	; 10
     76c:	98 e3       	ldi	r25, 0x38	; 56
     76e:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
     772:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
     776:	08 95       	ret

00000778 <gpsReqDateUblox>:
     778:	bf 92       	push	r11
     77a:	cf 92       	push	r12
     77c:	df 92       	push	r13
     77e:	ef 92       	push	r14
     780:	ff 92       	push	r15
     782:	0f 93       	push	r16
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	cd b7       	in	r28, 0x3d	; 61
     78c:	de b7       	in	r29, 0x3e	; 62
     78e:	6f 97       	sbiw	r28, 0x1f	; 31
     790:	cd bf       	out	0x3d, r28	; 61
     792:	de bf       	out	0x3e, r29	; 62
     794:	8f e0       	ldi	r24, 0x0F	; 15
     796:	e1 ed       	ldi	r30, 0xD1	; 209
     798:	f3 ea       	ldi	r31, 0xA3	; 163
     79a:	de 01       	movw	r26, r28
     79c:	11 96       	adiw	r26, 0x01	; 1
     79e:	01 90       	ld	r0, Z+
     7a0:	0d 92       	st	X+, r0
     7a2:	8a 95       	dec	r24
     7a4:	e1 f7       	brne	.-8      	; 0x79e <gpsReqDateUblox+0x26>
     7a6:	04 e0       	ldi	r16, 0x04	; 4
     7a8:	b1 2c       	mov	r11, r1
     7aa:	c1 2c       	mov	r12, r1
     7ac:	68 94       	set
     7ae:	dd 24       	eor	r13, r13
     7b0:	d3 f8       	bld	r13, 3
     7b2:	0f 2e       	mov	r0, r31
     7b4:	f1 ec       	ldi	r31, 0xC1	; 193
     7b6:	ef 2e       	mov	r14, r31
     7b8:	f8 e3       	ldi	r31, 0x38	; 56
     7ba:	ff 2e       	mov	r15, r31
     7bc:	f0 2d       	mov	r31, r0
     7be:	a8 95       	wdr
     7c0:	6f e0       	ldi	r22, 0x0F	; 15
     7c2:	ce 01       	movw	r24, r28
     7c4:	01 96       	adiw	r24, 0x01	; 1
     7c6:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     7ca:	0e 94 a1 03 	call	0x742	; 0x742 <clrRx>
     7ce:	f6 01       	movw	r30, r12
     7d0:	85 81       	ldd	r24, Z+5	; 0x05
     7d2:	80 68       	ori	r24, 0x80	; 128
     7d4:	85 83       	std	Z+5, r24	; 0x05
     7d6:	10 92 f7 38 	sts	0x38F7, r1	; 0x8038f7 <endOfLineFlag>
     7da:	78 94       	sei
     7dc:	80 91 f7 38 	lds	r24, 0x38F7	; 0x8038f7 <endOfLineFlag>
     7e0:	81 11       	cpse	r24, r1
     7e2:	0a c0       	rjmp	.+20     	; 0x7f8 <gpsReqDateUblox+0x80>
     7e4:	64 e6       	ldi	r22, 0x64	; 100
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	80 e0       	ldi	r24, 0x00	; 0
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     7f0:	1f e0       	ldi	r17, 0x0F	; 15
     7f2:	11 50       	subi	r17, 0x01	; 1
     7f4:	09 f0       	breq	.+2      	; 0x7f8 <gpsReqDateUblox+0x80>
     7f6:	0c c1       	rjmp	.+536    	; 0xa10 <gpsReqDateUblox+0x298>
     7f8:	80 91 f5 38 	lds	r24, 0x38F5	; 0x8038f5 <timeToFix>
     7fc:	90 91 f6 38 	lds	r25, 0x38F6	; 0x8038f6 <timeToFix+0x1>
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	80 93 f5 38 	sts	0x38F5, r24	; 0x8038f5 <timeToFix>
     806:	90 93 f6 38 	sts	0x38F6, r25	; 0x8038f6 <timeToFix+0x1>
     80a:	81 3d       	cpi	r24, 0xD1	; 209
     80c:	f2 e0       	ldi	r31, 0x02	; 2
     80e:	9f 07       	cpc	r25, r31
     810:	24 f0       	brlt	.+8      	; 0x81a <gpsReqDateUblox+0xa2>
     812:	20 91 fe 38 	lds	r18, 0x38FE	; 0x8038fe <mState>
     816:	21 30       	cpi	r18, 0x01	; 1
     818:	19 f4       	brne	.+6      	; 0x820 <gpsReqDateUblox+0xa8>
     81a:	8d 3a       	cpi	r24, 0xAD	; 173
     81c:	93 40       	sbci	r25, 0x03	; 3
     81e:	34 f0       	brlt	.+12     	; 0x82c <gpsReqDateUblox+0xb4>
     820:	8a e9       	ldi	r24, 0x9A	; 154
     822:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     826:	8a e9       	ldi	r24, 0x9A	; 154
     828:	92 e0       	ldi	r25, 0x02	; 2
     82a:	f9 c0       	rjmp	.+498    	; 0xa1e <gpsReqDateUblox+0x2a6>
     82c:	f6 01       	movw	r30, r12
     82e:	85 81       	ldd	r24, Z+5	; 0x05
     830:	8f 77       	andi	r24, 0x7F	; 127
     832:	85 83       	std	Z+5, r24	; 0x05
     834:	41 e4       	ldi	r20, 0x41	; 65
     836:	64 e4       	ldi	r22, 0x44	; 68
     838:	8a e5       	ldi	r24, 0x5A	; 90
     83a:	0e 94 ad 00 	call	0x15a	; 0x15a <searchRcvBuffuBlox>
     83e:	89 2b       	or	r24, r25
     840:	09 f0       	breq	.+2      	; 0x844 <gpsReqDateUblox+0xcc>
     842:	67 c0       	rjmp	.+206    	; 0x912 <gpsReqDateUblox+0x19a>
     844:	20 91 03 39 	lds	r18, 0x3903	; 0x803903 <GPSSearchPtr>
     848:	30 91 04 39 	lds	r19, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     84c:	d9 01       	movw	r26, r18
     84e:	12 97       	sbiw	r26, 0x02	; 2
     850:	f8 e3       	ldi	r31, 0x38	; 56
     852:	a0 3c       	cpi	r26, 0xC0	; 192
     854:	bf 07       	cpc	r27, r31
     856:	09 f0       	breq	.+2      	; 0x85a <gpsReqDateUblox+0xe2>
     858:	78 f4       	brcc	.+30     	; 0x878 <gpsReqDateUblox+0x100>
     85a:	fd 01       	movw	r30, r26
     85c:	80 81       	ld	r24, Z
     85e:	8a 32       	cpi	r24, 0x2A	; 42
     860:	69 f0       	breq	.+26     	; 0x87c <gpsReqDateUblox+0x104>
     862:	31 96       	adiw	r30, 0x01	; 1
     864:	10 e0       	ldi	r17, 0x00	; 0
     866:	df 01       	movw	r26, r30
     868:	18 27       	eor	r17, r24
     86a:	ee 16       	cp	r14, r30
     86c:	ff 06       	cpc	r15, r31
     86e:	39 f0       	breq	.+14     	; 0x87e <gpsReqDateUblox+0x106>
     870:	81 91       	ld	r24, Z+
     872:	8a 32       	cpi	r24, 0x2A	; 42
     874:	c1 f7       	brne	.-16     	; 0x866 <gpsReqDateUblox+0xee>
     876:	03 c0       	rjmp	.+6      	; 0x87e <gpsReqDateUblox+0x106>
     878:	10 e0       	ldi	r17, 0x00	; 0
     87a:	01 c0       	rjmp	.+2      	; 0x87e <gpsReqDateUblox+0x106>
     87c:	10 e0       	ldi	r17, 0x00	; 0
     87e:	12 96       	adiw	r26, 0x02	; 2
     880:	6c 91       	ld	r22, X
     882:	12 97       	sbiw	r26, 0x02	; 2
     884:	11 96       	adiw	r26, 0x01	; 1
     886:	8c 91       	ld	r24, X
     888:	0e 94 20 01 	call	0x240	; 0x240 <asciiHexToHex>
     88c:	21 2f       	mov	r18, r17
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	28 17       	cp	r18, r24
     892:	39 07       	cpc	r19, r25
     894:	f1 f5       	brne	.+124    	; 0x912 <gpsReqDateUblox+0x19a>
     896:	34 c0       	rjmp	.+104    	; 0x900 <gpsReqDateUblox+0x188>
     898:	cf 01       	movw	r24, r30
     89a:	01 96       	adiw	r24, 0x01	; 1
     89c:	80 93 03 39 	sts	0x3903, r24	; 0x803903 <GPSSearchPtr>
     8a0:	90 93 04 39 	sts	0x3904, r25	; 0x803904 <GPSSearchPtr+0x1>
     8a4:	81 81       	ldd	r24, Z+1	; 0x01
     8a6:	8c 32       	cpi	r24, 0x2C	; 44
     8a8:	61 f5       	brne	.+88     	; 0x902 <gpsReqDateUblox+0x18a>
     8aa:	2f 5f       	subi	r18, 0xFF	; 255
     8ac:	22 30       	cpi	r18, 0x02	; 2
     8ae:	49 f5       	brne	.+82     	; 0x902 <gpsReqDateUblox+0x18a>
     8b0:	22 81       	ldd	r18, Z+2	; 0x02
     8b2:	2c 32       	cpi	r18, 0x2C	; 44
     8b4:	71 f1       	breq	.+92     	; 0x912 <gpsReqDateUblox+0x19a>
     8b6:	36 81       	ldd	r19, Z+6	; 0x06
     8b8:	38 35       	cpi	r19, 0x58	; 88
     8ba:	59 f1       	breq	.+86     	; 0x912 <gpsReqDateUblox+0x19a>
     8bc:	8b 2d       	mov	r24, r11
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	a4 e1       	ldi	r26, 0x14	; 20
     8c2:	b0 e0       	ldi	r27, 0x00	; 0
     8c4:	ac 0f       	add	r26, r28
     8c6:	bd 1f       	adc	r27, r29
     8c8:	a8 0f       	add	r26, r24
     8ca:	b9 1f       	adc	r27, r25
     8cc:	3c 93       	st	X, r19
     8ce:	a0 e1       	ldi	r26, 0x10	; 16
     8d0:	b0 e0       	ldi	r27, 0x00	; 0
     8d2:	ac 0f       	add	r26, r28
     8d4:	bd 1f       	adc	r27, r29
     8d6:	a8 0f       	add	r26, r24
     8d8:	b9 1f       	adc	r27, r25
     8da:	35 81       	ldd	r19, Z+5	; 0x05
     8dc:	3c 93       	st	X, r19
     8de:	a8 e1       	ldi	r26, 0x18	; 24
     8e0:	b0 e0       	ldi	r27, 0x00	; 0
     8e2:	ac 0f       	add	r26, r28
     8e4:	bd 1f       	adc	r27, r29
     8e6:	a8 0f       	add	r26, r24
     8e8:	b9 1f       	adc	r27, r25
     8ea:	33 81       	ldd	r19, Z+3	; 0x03
     8ec:	3c 93       	st	X, r19
     8ee:	ec e1       	ldi	r30, 0x1C	; 28
     8f0:	f0 e0       	ldi	r31, 0x00	; 0
     8f2:	ec 0f       	add	r30, r28
     8f4:	fd 1f       	adc	r31, r29
     8f6:	e8 0f       	add	r30, r24
     8f8:	f9 1f       	adc	r31, r25
     8fa:	20 83       	st	Z, r18
     8fc:	b3 94       	inc	r11
     8fe:	09 c0       	rjmp	.+18     	; 0x912 <gpsReqDateUblox+0x19a>
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     906:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     90a:	88 e3       	ldi	r24, 0x38	; 56
     90c:	e0 3c       	cpi	r30, 0xC0	; 192
     90e:	f8 07       	cpc	r31, r24
     910:	18 f2       	brcs	.-122    	; 0x898 <gpsReqDateUblox+0x120>
     912:	01 50       	subi	r16, 0x01	; 1
     914:	09 f0       	breq	.+2      	; 0x918 <gpsReqDateUblox+0x1a0>
     916:	53 cf       	rjmp	.-346    	; 0x7be <gpsReqDateUblox+0x46>
     918:	1f 89       	ldd	r17, Y+23	; 0x17
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	9e 89       	ldd	r25, Y+22	; 0x16
     91e:	91 13       	cpse	r25, r17
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	9d 89       	ldd	r25, Y+21	; 0x15
     924:	19 13       	cpse	r17, r25
     926:	01 c0       	rjmp	.+2      	; 0x92a <gpsReqDateUblox+0x1b2>
     928:	8f 5f       	subi	r24, 0xFF	; 255
     92a:	9c 89       	ldd	r25, Y+20	; 0x14
     92c:	19 13       	cpse	r17, r25
     92e:	01 c0       	rjmp	.+2      	; 0x932 <gpsReqDateUblox+0x1ba>
     930:	8f 5f       	subi	r24, 0xFF	; 255
     932:	83 30       	cpi	r24, 0x03	; 3
     934:	08 f4       	brcc	.+2      	; 0x938 <gpsReqDateUblox+0x1c0>
     936:	5d c0       	rjmp	.+186    	; 0x9f2 <gpsReqDateUblox+0x27a>
     938:	0b 89       	ldd	r16, Y+19	; 0x13
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	9a 89       	ldd	r25, Y+18	; 0x12
     93e:	90 13       	cpse	r25, r16
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	99 89       	ldd	r25, Y+17	; 0x11
     944:	09 13       	cpse	r16, r25
     946:	01 c0       	rjmp	.+2      	; 0x94a <gpsReqDateUblox+0x1d2>
     948:	8f 5f       	subi	r24, 0xFF	; 255
     94a:	98 89       	ldd	r25, Y+16	; 0x10
     94c:	09 13       	cpse	r16, r25
     94e:	01 c0       	rjmp	.+2      	; 0x952 <gpsReqDateUblox+0x1da>
     950:	8f 5f       	subi	r24, 0xFF	; 255
     952:	83 30       	cpi	r24, 0x03	; 3
     954:	08 f4       	brcc	.+2      	; 0x958 <gpsReqDateUblox+0x1e0>
     956:	50 c0       	rjmp	.+160    	; 0x9f8 <gpsReqDateUblox+0x280>
     958:	fb 8c       	ldd	r15, Y+27	; 0x1b
     95a:	81 e0       	ldi	r24, 0x01	; 1
     95c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     95e:	9f 11       	cpse	r25, r15
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	99 8d       	ldd	r25, Y+25	; 0x19
     964:	f9 12       	cpse	r15, r25
     966:	01 c0       	rjmp	.+2      	; 0x96a <gpsReqDateUblox+0x1f2>
     968:	8f 5f       	subi	r24, 0xFF	; 255
     96a:	98 8d       	ldd	r25, Y+24	; 0x18
     96c:	f9 12       	cpse	r15, r25
     96e:	01 c0       	rjmp	.+2      	; 0x972 <gpsReqDateUblox+0x1fa>
     970:	8f 5f       	subi	r24, 0xFF	; 255
     972:	83 30       	cpi	r24, 0x03	; 3
     974:	08 f4       	brcc	.+2      	; 0x978 <gpsReqDateUblox+0x200>
     976:	43 c0       	rjmp	.+134    	; 0x9fe <gpsReqDateUblox+0x286>
     978:	ef 8c       	ldd	r14, Y+31	; 0x1f
     97a:	81 e0       	ldi	r24, 0x01	; 1
     97c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     97e:	9e 11       	cpse	r25, r14
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	9d 8d       	ldd	r25, Y+29	; 0x1d
     984:	e9 12       	cpse	r14, r25
     986:	01 c0       	rjmp	.+2      	; 0x98a <gpsReqDateUblox+0x212>
     988:	8f 5f       	subi	r24, 0xFF	; 255
     98a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     98c:	e9 12       	cpse	r14, r25
     98e:	01 c0       	rjmp	.+2      	; 0x992 <gpsReqDateUblox+0x21a>
     990:	8f 5f       	subi	r24, 0xFF	; 255
     992:	83 30       	cpi	r24, 0x03	; 3
     994:	b8 f1       	brcs	.+110    	; 0xa04 <gpsReqDateUblox+0x28c>
     996:	20 91 eb 38 	lds	r18, 0x38EB	; 0x8038eb <gpsParams+0xf>
     99a:	ec ed       	ldi	r30, 0xDC	; 220
     99c:	f8 e3       	ldi	r31, 0x38	; 56
     99e:	85 ef       	ldi	r24, 0xF5	; 245
     9a0:	98 e3       	ldi	r25, 0x38	; 56
     9a2:	11 92       	st	Z+, r1
     9a4:	e8 17       	cp	r30, r24
     9a6:	f9 07       	cpc	r31, r25
     9a8:	e1 f7       	brne	.-8      	; 0x9a2 <gpsReqDateUblox+0x22a>
     9aa:	20 93 eb 38 	sts	0x38EB, r18	; 0x8038eb <gpsParams+0xf>
     9ae:	ec e2       	ldi	r30, 0x2C	; 44
     9b0:	fe 16       	cp	r15, r30
     9b2:	59 f1       	breq	.+86     	; 0xa0a <gpsReqDateUblox+0x292>
     9b4:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     9b8:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     9bc:	62 85       	ldd	r22, Z+10	; 0x0a
     9be:	81 85       	ldd	r24, Z+9	; 0x09
     9c0:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     9c4:	0f 2e       	mov	r0, r31
     9c6:	fc ed       	ldi	r31, 0xDC	; 220
     9c8:	cf 2e       	mov	r12, r31
     9ca:	f8 e3       	ldi	r31, 0x38	; 56
     9cc:	df 2e       	mov	r13, r31
     9ce:	f0 2d       	mov	r31, r0
     9d0:	f6 01       	movw	r30, r12
     9d2:	81 87       	std	Z+9, r24	; 0x09
     9d4:	61 2f       	mov	r22, r17
     9d6:	80 2f       	mov	r24, r16
     9d8:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     9dc:	f6 01       	movw	r30, r12
     9de:	82 87       	std	Z+10, r24	; 0x0a
     9e0:	6f 2d       	mov	r22, r15
     9e2:	8e 2d       	mov	r24, r14
     9e4:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     9e8:	f6 01       	movw	r30, r12
     9ea:	83 87       	std	Z+11, r24	; 0x0b
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	16 c0       	rjmp	.+44     	; 0xa1e <gpsReqDateUblox+0x2a6>
     9f2:	8a e9       	ldi	r24, 0x9A	; 154
     9f4:	92 e0       	ldi	r25, 0x02	; 2
     9f6:	13 c0       	rjmp	.+38     	; 0xa1e <gpsReqDateUblox+0x2a6>
     9f8:	8a e9       	ldi	r24, 0x9A	; 154
     9fa:	92 e0       	ldi	r25, 0x02	; 2
     9fc:	10 c0       	rjmp	.+32     	; 0xa1e <gpsReqDateUblox+0x2a6>
     9fe:	8a e9       	ldi	r24, 0x9A	; 154
     a00:	92 e0       	ldi	r25, 0x02	; 2
     a02:	0d c0       	rjmp	.+26     	; 0xa1e <gpsReqDateUblox+0x2a6>
     a04:	8a e9       	ldi	r24, 0x9A	; 154
     a06:	92 e0       	ldi	r25, 0x02	; 2
     a08:	0a c0       	rjmp	.+20     	; 0xa1e <gpsReqDateUblox+0x2a6>
     a0a:	8a e9       	ldi	r24, 0x9A	; 154
     a0c:	92 e0       	ldi	r25, 0x02	; 2
     a0e:	07 c0       	rjmp	.+14     	; 0xa1e <gpsReqDateUblox+0x2a6>
     a10:	64 e6       	ldi	r22, 0x64	; 100
     a12:	70 e0       	ldi	r23, 0x00	; 0
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     a1c:	ea ce       	rjmp	.-556    	; 0x7f2 <gpsReqDateUblox+0x7a>
     a1e:	6f 96       	adiw	r28, 0x1f	; 31
     a20:	cd bf       	out	0x3d, r28	; 61
     a22:	de bf       	out	0x3e, r29	; 62
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	1f 91       	pop	r17
     a2a:	0f 91       	pop	r16
     a2c:	ff 90       	pop	r15
     a2e:	ef 90       	pop	r14
     a30:	df 90       	pop	r13
     a32:	cf 90       	pop	r12
     a34:	bf 90       	pop	r11
     a36:	08 95       	ret

00000a38 <GPSgetDate>:
     a38:	0e 94 bc 03 	call	0x778	; 0x778 <gpsReqDateUblox>
     a3c:	00 97       	sbiw	r24, 0x00	; 0
     a3e:	39 f4       	brne	.+14     	; 0xa4e <GPSgetDate+0x16>
     a40:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     a44:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     a48:	22 85       	ldd	r18, Z+10	; 0x0a
     a4a:	28 35       	cpi	r18, 0x58	; 88
     a4c:	39 f5       	brne	.+78     	; 0xa9c <GPSgetDate+0x64>
     a4e:	0e 94 bc 03 	call	0x778	; 0x778 <gpsReqDateUblox>
     a52:	00 97       	sbiw	r24, 0x00	; 0
     a54:	39 f4       	brne	.+14     	; 0xa64 <GPSgetDate+0x2c>
     a56:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     a5a:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     a5e:	22 85       	ldd	r18, Z+10	; 0x0a
     a60:	28 35       	cpi	r18, 0x58	; 88
     a62:	e1 f4       	brne	.+56     	; 0xa9c <GPSgetDate+0x64>
     a64:	0e 94 bc 03 	call	0x778	; 0x778 <gpsReqDateUblox>
     a68:	00 97       	sbiw	r24, 0x00	; 0
     a6a:	39 f4       	brne	.+14     	; 0xa7a <GPSgetDate+0x42>
     a6c:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     a70:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     a74:	22 85       	ldd	r18, Z+10	; 0x0a
     a76:	28 35       	cpi	r18, 0x58	; 88
     a78:	89 f4       	brne	.+34     	; 0xa9c <GPSgetDate+0x64>
     a7a:	0e 94 bc 03 	call	0x778	; 0x778 <gpsReqDateUblox>
     a7e:	00 97       	sbiw	r24, 0x00	; 0
     a80:	41 f4       	brne	.+16     	; 0xa92 <GPSgetDate+0x5a>
     a82:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     a86:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     a8a:	22 85       	ldd	r18, Z+10	; 0x0a
     a8c:	28 35       	cpi	r18, 0x58	; 88
     a8e:	31 f4       	brne	.+12     	; 0xa9c <GPSgetDate+0x64>
     a90:	03 c0       	rjmp	.+6      	; 0xa98 <GPSgetDate+0x60>
     a92:	8a e9       	ldi	r24, 0x9A	; 154
     a94:	92 e0       	ldi	r25, 0x02	; 2
     a96:	08 95       	ret
     a98:	8a e9       	ldi	r24, 0x9A	; 154
     a9a:	92 e0       	ldi	r25, 0x02	; 2
     a9c:	08 95       	ret

00000a9e <gpsReqStatusUblox>:
     a9e:	cf 92       	push	r12
     aa0:	df 92       	push	r13
     aa2:	ef 92       	push	r14
     aa4:	ff 92       	push	r15
     aa6:	0f 93       	push	r16
     aa8:	1f 93       	push	r17
     aaa:	cf 93       	push	r28
     aac:	df 93       	push	r29
     aae:	10 92 02 39 	sts	0x3902, r1	; 0x803902 <uBloxStatus>
     ab2:	68 94       	set
     ab4:	cc 24       	eor	r12, r12
     ab6:	c2 f8       	bld	r12, 2
     ab8:	d1 2c       	mov	r13, r1
     aba:	e1 2c       	mov	r14, r1
     abc:	68 94       	set
     abe:	ff 24       	eor	r15, r15
     ac0:	f3 f8       	bld	r15, 3
     ac2:	01 ec       	ldi	r16, 0xC1	; 193
     ac4:	18 e3       	ldi	r17, 0x38	; 56
     ac6:	a8 95       	wdr
     ac8:	0e 94 a1 03 	call	0x742	; 0x742 <clrRx>
     acc:	e7 01       	movw	r28, r14
     ace:	8d 81       	ldd	r24, Y+5	; 0x05
     ad0:	80 68       	ori	r24, 0x80	; 128
     ad2:	8d 83       	std	Y+5, r24	; 0x05
     ad4:	10 92 f7 38 	sts	0x38F7, r1	; 0x8038f7 <endOfLineFlag>
     ad8:	78 94       	sei
     ada:	80 91 f7 38 	lds	r24, 0x38F7	; 0x8038f7 <endOfLineFlag>
     ade:	81 11       	cpse	r24, r1
     ae0:	0a c0       	rjmp	.+20     	; 0xaf6 <gpsReqStatusUblox+0x58>
     ae2:	64 e6       	ldi	r22, 0x64	; 100
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     aee:	cf e0       	ldi	r28, 0x0F	; 15
     af0:	c1 50       	subi	r28, 0x01	; 1
     af2:	09 f0       	breq	.+2      	; 0xaf6 <gpsReqStatusUblox+0x58>
     af4:	83 c0       	rjmp	.+262    	; 0xbfc <gpsReqStatusUblox+0x15e>
     af6:	80 91 f5 38 	lds	r24, 0x38F5	; 0x8038f5 <timeToFix>
     afa:	90 91 f6 38 	lds	r25, 0x38F6	; 0x8038f6 <timeToFix+0x1>
     afe:	01 96       	adiw	r24, 0x01	; 1
     b00:	80 93 f5 38 	sts	0x38F5, r24	; 0x8038f5 <timeToFix>
     b04:	90 93 f6 38 	sts	0x38F6, r25	; 0x8038f6 <timeToFix+0x1>
     b08:	81 3d       	cpi	r24, 0xD1	; 209
     b0a:	d2 e0       	ldi	r29, 0x02	; 2
     b0c:	9d 07       	cpc	r25, r29
     b0e:	24 f0       	brlt	.+8      	; 0xb18 <gpsReqStatusUblox+0x7a>
     b10:	20 91 fe 38 	lds	r18, 0x38FE	; 0x8038fe <mState>
     b14:	21 30       	cpi	r18, 0x01	; 1
     b16:	19 f4       	brne	.+6      	; 0xb1e <gpsReqStatusUblox+0x80>
     b18:	8d 3a       	cpi	r24, 0xAD	; 173
     b1a:	93 40       	sbci	r25, 0x03	; 3
     b1c:	34 f0       	brlt	.+12     	; 0xb2a <gpsReqStatusUblox+0x8c>
     b1e:	8a e9       	ldi	r24, 0x9A	; 154
     b20:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     b24:	8a e9       	ldi	r24, 0x9A	; 154
     b26:	92 e0       	ldi	r25, 0x02	; 2
     b28:	70 c0       	rjmp	.+224    	; 0xc0a <gpsReqStatusUblox+0x16c>
     b2a:	e7 01       	movw	r28, r14
     b2c:	8d 81       	ldd	r24, Y+5	; 0x05
     b2e:	8f 77       	andi	r24, 0x7F	; 127
     b30:	8d 83       	std	Y+5, r24	; 0x05
     b32:	43 e4       	ldi	r20, 0x43	; 67
     b34:	6d e4       	ldi	r22, 0x4D	; 77
     b36:	82 e5       	ldi	r24, 0x52	; 82
     b38:	0e 94 ad 00 	call	0x15a	; 0x15a <searchRcvBuffuBlox>
     b3c:	89 2b       	or	r24, r25
     b3e:	09 f0       	breq	.+2      	; 0xb42 <gpsReqStatusUblox+0xa4>
     b40:	44 c0       	rjmp	.+136    	; 0xbca <gpsReqStatusUblox+0x12c>
     b42:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     b46:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     b4a:	df 01       	movw	r26, r30
     b4c:	12 97       	sbiw	r26, 0x02	; 2
     b4e:	d8 e3       	ldi	r29, 0x38	; 56
     b50:	a0 3c       	cpi	r26, 0xC0	; 192
     b52:	bd 07       	cpc	r27, r29
     b54:	09 f0       	breq	.+2      	; 0xb58 <gpsReqStatusUblox+0xba>
     b56:	78 f4       	brcc	.+30     	; 0xb76 <gpsReqStatusUblox+0xd8>
     b58:	ed 01       	movw	r28, r26
     b5a:	88 81       	ld	r24, Y
     b5c:	8a 32       	cpi	r24, 0x2A	; 42
     b5e:	69 f0       	breq	.+26     	; 0xb7a <gpsReqStatusUblox+0xdc>
     b60:	31 97       	sbiw	r30, 0x01	; 1
     b62:	c0 e0       	ldi	r28, 0x00	; 0
     b64:	df 01       	movw	r26, r30
     b66:	c8 27       	eor	r28, r24
     b68:	e0 17       	cp	r30, r16
     b6a:	f1 07       	cpc	r31, r17
     b6c:	39 f0       	breq	.+14     	; 0xb7c <gpsReqStatusUblox+0xde>
     b6e:	81 91       	ld	r24, Z+
     b70:	8a 32       	cpi	r24, 0x2A	; 42
     b72:	c1 f7       	brne	.-16     	; 0xb64 <gpsReqStatusUblox+0xc6>
     b74:	03 c0       	rjmp	.+6      	; 0xb7c <gpsReqStatusUblox+0xde>
     b76:	c0 e0       	ldi	r28, 0x00	; 0
     b78:	01 c0       	rjmp	.+2      	; 0xb7c <gpsReqStatusUblox+0xde>
     b7a:	c0 e0       	ldi	r28, 0x00	; 0
     b7c:	12 96       	adiw	r26, 0x02	; 2
     b7e:	6c 91       	ld	r22, X
     b80:	12 97       	sbiw	r26, 0x02	; 2
     b82:	11 96       	adiw	r26, 0x01	; 1
     b84:	8c 91       	ld	r24, X
     b86:	0e 94 20 01 	call	0x240	; 0x240 <asciiHexToHex>
     b8a:	2c 2f       	mov	r18, r28
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	28 17       	cp	r18, r24
     b90:	39 07       	cpc	r19, r25
     b92:	d9 f4       	brne	.+54     	; 0xbca <gpsReqStatusUblox+0x12c>
     b94:	11 c0       	rjmp	.+34     	; 0xbb8 <gpsReqStatusUblox+0x11a>
     b96:	cf 01       	movw	r24, r30
     b98:	01 96       	adiw	r24, 0x01	; 1
     b9a:	80 93 03 39 	sts	0x3903, r24	; 0x803903 <GPSSearchPtr>
     b9e:	90 93 04 39 	sts	0x3904, r25	; 0x803904 <GPSSearchPtr+0x1>
     ba2:	81 81       	ldd	r24, Z+1	; 0x01
     ba4:	8c 32       	cpi	r24, 0x2C	; 44
     ba6:	49 f4       	brne	.+18     	; 0xbba <gpsReqStatusUblox+0x11c>
     ba8:	2f 5f       	subi	r18, 0xFF	; 255
     baa:	22 30       	cpi	r18, 0x02	; 2
     bac:	31 f4       	brne	.+12     	; 0xbba <gpsReqStatusUblox+0x11c>
     bae:	82 81       	ldd	r24, Z+2	; 0x02
     bb0:	81 34       	cpi	r24, 0x41	; 65
     bb2:	59 f4       	brne	.+22     	; 0xbca <gpsReqStatusUblox+0x12c>
     bb4:	d3 94       	inc	r13
     bb6:	09 c0       	rjmp	.+18     	; 0xbca <gpsReqStatusUblox+0x12c>
     bb8:	20 e0       	ldi	r18, 0x00	; 0
     bba:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     bbe:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     bc2:	d8 e3       	ldi	r29, 0x38	; 56
     bc4:	e0 3c       	cpi	r30, 0xC0	; 192
     bc6:	fd 07       	cpc	r31, r29
     bc8:	30 f3       	brcs	.-52     	; 0xb96 <gpsReqStatusUblox+0xf8>
     bca:	ca 94       	dec	r12
     bcc:	c1 10       	cpse	r12, r1
     bce:	7b cf       	rjmp	.-266    	; 0xac6 <gpsReqStatusUblox+0x28>
     bd0:	e1 e0       	ldi	r30, 0x01	; 1
     bd2:	ed 15       	cp	r30, r13
     bd4:	68 f4       	brcc	.+26     	; 0xbf0 <gpsReqStatusUblox+0x152>
     bd6:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     bda:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     bde:	81 81       	ldd	r24, Z+1	; 0x01
     be0:	81 34       	cpi	r24, 0x41	; 65
     be2:	31 f4       	brne	.+12     	; 0xbf0 <gpsReqStatusUblox+0x152>
     be4:	89 e2       	ldi	r24, 0x29	; 41
     be6:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     bea:	80 e0       	ldi	r24, 0x00	; 0
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	0d c0       	rjmp	.+26     	; 0xc0a <gpsReqStatusUblox+0x16c>
     bf0:	8a e9       	ldi	r24, 0x9A	; 154
     bf2:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     bf6:	8a e9       	ldi	r24, 0x9A	; 154
     bf8:	92 e0       	ldi	r25, 0x02	; 2
     bfa:	07 c0       	rjmp	.+14     	; 0xc0a <gpsReqStatusUblox+0x16c>
     bfc:	64 e6       	ldi	r22, 0x64	; 100
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     c08:	73 cf       	rjmp	.-282    	; 0xaf0 <gpsReqStatusUblox+0x52>
     c0a:	df 91       	pop	r29
     c0c:	cf 91       	pop	r28
     c0e:	1f 91       	pop	r17
     c10:	0f 91       	pop	r16
     c12:	ff 90       	pop	r15
     c14:	ef 90       	pop	r14
     c16:	df 90       	pop	r13
     c18:	cf 90       	pop	r12
     c1a:	08 95       	ret

00000c1c <gpsReqLocUblox>:
     c1c:	8f 92       	push	r8
     c1e:	9f 92       	push	r9
     c20:	af 92       	push	r10
     c22:	bf 92       	push	r11
     c24:	cf 92       	push	r12
     c26:	df 92       	push	r13
     c28:	ef 92       	push	r14
     c2a:	ff 92       	push	r15
     c2c:	0f 93       	push	r16
     c2e:	1f 93       	push	r17
     c30:	cf 93       	push	r28
     c32:	df 93       	push	r29
     c34:	cd b7       	in	r28, 0x3d	; 61
     c36:	de b7       	in	r29, 0x3e	; 62
     c38:	af 97       	sbiw	r28, 0x2f	; 47
     c3a:	cd bf       	out	0x3d, r28	; 61
     c3c:	de bf       	out	0x3e, r29	; 62
     c3e:	8f e0       	ldi	r24, 0x0F	; 15
     c40:	e0 ee       	ldi	r30, 0xE0	; 224
     c42:	f3 ea       	ldi	r31, 0xA3	; 163
     c44:	de 01       	movw	r26, r28
     c46:	11 96       	adiw	r26, 0x01	; 1
     c48:	01 90       	ld	r0, Z+
     c4a:	0d 92       	st	X+, r0
     c4c:	8a 95       	dec	r24
     c4e:	e1 f7       	brne	.-8      	; 0xc48 <gpsReqLocUblox+0x2c>
     c50:	21 e0       	ldi	r18, 0x01	; 1
     c52:	2f 8f       	std	Y+31, r18	; 0x1f
     c54:	92 e0       	ldi	r25, 0x02	; 2
     c56:	9a 8f       	std	Y+26, r25	; 0x1a
     c58:	83 e0       	ldi	r24, 0x03	; 3
     c5a:	89 8f       	std	Y+25, r24	; 0x19
     c5c:	2f 8b       	std	Y+23, r18	; 0x17
     c5e:	9a 8b       	std	Y+18, r25	; 0x12
     c60:	89 8b       	std	Y+17, r24	; 0x11
     c62:	2f a3       	std	Y+39, r18	; 0x27
     c64:	9a a3       	std	Y+34, r25	; 0x22
     c66:	89 a3       	std	Y+33, r24	; 0x21
     c68:	68 94       	set
     c6a:	bb 24       	eor	r11, r11
     c6c:	b3 f8       	bld	r11, 3
     c6e:	a1 2c       	mov	r10, r1
     c70:	c1 2c       	mov	r12, r1
     c72:	68 94       	set
     c74:	dd 24       	eor	r13, r13
     c76:	d3 f8       	bld	r13, 3
     c78:	0f 2e       	mov	r0, r31
     c7a:	f1 ec       	ldi	r31, 0xC1	; 193
     c7c:	ef 2e       	mov	r14, r31
     c7e:	f8 e3       	ldi	r31, 0x38	; 56
     c80:	ff 2e       	mov	r15, r31
     c82:	f0 2d       	mov	r31, r0
     c84:	a8 95       	wdr
     c86:	6f e0       	ldi	r22, 0x0F	; 15
     c88:	ce 01       	movw	r24, r28
     c8a:	01 96       	adiw	r24, 0x01	; 1
     c8c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
     c90:	0e 94 a1 03 	call	0x742	; 0x742 <clrRx>
     c94:	d6 01       	movw	r26, r12
     c96:	15 96       	adiw	r26, 0x05	; 5
     c98:	8c 91       	ld	r24, X
     c9a:	15 97       	sbiw	r26, 0x05	; 5
     c9c:	80 68       	ori	r24, 0x80	; 128
     c9e:	15 96       	adiw	r26, 0x05	; 5
     ca0:	8c 93       	st	X, r24
     ca2:	10 92 f7 38 	sts	0x38F7, r1	; 0x8038f7 <endOfLineFlag>
     ca6:	78 94       	sei
     ca8:	80 91 f7 38 	lds	r24, 0x38F7	; 0x8038f7 <endOfLineFlag>
     cac:	81 11       	cpse	r24, r1
     cae:	0a c0       	rjmp	.+20     	; 0xcc4 <gpsReqLocUblox+0xa8>
     cb0:	64 e6       	ldi	r22, 0x64	; 100
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
     cbc:	1f e0       	ldi	r17, 0x0F	; 15
     cbe:	11 50       	subi	r17, 0x01	; 1
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <gpsReqLocUblox+0xa8>
     cc2:	e7 c1       	rjmp	.+974    	; 0x1092 <gpsReqLocUblox+0x476>
     cc4:	00 91 f5 38 	lds	r16, 0x38F5	; 0x8038f5 <timeToFix>
     cc8:	10 91 f6 38 	lds	r17, 0x38F6	; 0x8038f6 <timeToFix+0x1>
     ccc:	01 3d       	cpi	r16, 0xD1	; 209
     cce:	b2 e0       	ldi	r27, 0x02	; 2
     cd0:	1b 07       	cpc	r17, r27
     cd2:	24 f0       	brlt	.+8      	; 0xcdc <gpsReqLocUblox+0xc0>
     cd4:	80 91 fe 38 	lds	r24, 0x38FE	; 0x8038fe <mState>
     cd8:	81 30       	cpi	r24, 0x01	; 1
     cda:	21 f4       	brne	.+8      	; 0xce4 <gpsReqLocUblox+0xc8>
     cdc:	0d 3a       	cpi	r16, 0xAD	; 173
     cde:	e3 e0       	ldi	r30, 0x03	; 3
     ce0:	1e 07       	cpc	r17, r30
     ce2:	34 f0       	brlt	.+12     	; 0xcf0 <gpsReqLocUblox+0xd4>
     ce4:	8a e9       	ldi	r24, 0x9A	; 154
     ce6:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <uBloxStatus>
     cea:	8a e9       	ldi	r24, 0x9A	; 154
     cec:	92 e0       	ldi	r25, 0x02	; 2
     cee:	d8 c1       	rjmp	.+944    	; 0x10a0 <gpsReqLocUblox+0x484>
     cf0:	0f 5f       	subi	r16, 0xFF	; 255
     cf2:	1f 4f       	sbci	r17, 0xFF	; 255
     cf4:	91 2e       	mov	r9, r17
     cf6:	00 93 f5 38 	sts	0x38F5, r16	; 0x8038f5 <timeToFix>
     cfa:	10 93 f6 38 	sts	0x38F6, r17	; 0x8038f6 <timeToFix+0x1>
     cfe:	d6 01       	movw	r26, r12
     d00:	15 96       	adiw	r26, 0x05	; 5
     d02:	8c 91       	ld	r24, X
     d04:	15 97       	sbiw	r26, 0x05	; 5
     d06:	8f 77       	andi	r24, 0x7F	; 127
     d08:	15 96       	adiw	r26, 0x05	; 5
     d0a:	8c 93       	st	X, r24
     d0c:	43 e5       	ldi	r20, 0x53	; 83
     d0e:	6e e4       	ldi	r22, 0x4E	; 78
     d10:	87 e4       	ldi	r24, 0x47	; 71
     d12:	0e 94 ad 00 	call	0x15a	; 0x15a <searchRcvBuffuBlox>
     d16:	89 2b       	or	r24, r25
     d18:	09 f0       	breq	.+2      	; 0xd1c <gpsReqLocUblox+0x100>
     d1a:	7b c0       	rjmp	.+246    	; 0xe12 <gpsReqLocUblox+0x1f6>
     d1c:	20 91 03 39 	lds	r18, 0x3903	; 0x803903 <GPSSearchPtr>
     d20:	30 91 04 39 	lds	r19, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     d24:	d9 01       	movw	r26, r18
     d26:	12 97       	sbiw	r26, 0x02	; 2
     d28:	e8 e3       	ldi	r30, 0x38	; 56
     d2a:	a0 3c       	cpi	r26, 0xC0	; 192
     d2c:	be 07       	cpc	r27, r30
     d2e:	09 f0       	breq	.+2      	; 0xd32 <gpsReqLocUblox+0x116>
     d30:	78 f4       	brcc	.+30     	; 0xd50 <gpsReqLocUblox+0x134>
     d32:	fd 01       	movw	r30, r26
     d34:	80 81       	ld	r24, Z
     d36:	8a 32       	cpi	r24, 0x2A	; 42
     d38:	69 f0       	breq	.+26     	; 0xd54 <gpsReqLocUblox+0x138>
     d3a:	31 96       	adiw	r30, 0x01	; 1
     d3c:	81 2c       	mov	r8, r1
     d3e:	df 01       	movw	r26, r30
     d40:	88 26       	eor	r8, r24
     d42:	ee 15       	cp	r30, r14
     d44:	ff 05       	cpc	r31, r15
     d46:	39 f0       	breq	.+14     	; 0xd56 <gpsReqLocUblox+0x13a>
     d48:	81 91       	ld	r24, Z+
     d4a:	8a 32       	cpi	r24, 0x2A	; 42
     d4c:	c1 f7       	brne	.-16     	; 0xd3e <gpsReqLocUblox+0x122>
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <gpsReqLocUblox+0x13a>
     d50:	81 2c       	mov	r8, r1
     d52:	01 c0       	rjmp	.+2      	; 0xd56 <gpsReqLocUblox+0x13a>
     d54:	81 2c       	mov	r8, r1
     d56:	12 96       	adiw	r26, 0x02	; 2
     d58:	6c 91       	ld	r22, X
     d5a:	12 97       	sbiw	r26, 0x02	; 2
     d5c:	11 96       	adiw	r26, 0x01	; 1
     d5e:	8c 91       	ld	r24, X
     d60:	0e 94 20 01 	call	0x240	; 0x240 <asciiHexToHex>
     d64:	28 2d       	mov	r18, r8
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	28 17       	cp	r18, r24
     d6a:	39 07       	cpc	r19, r25
     d6c:	09 f0       	breq	.+2      	; 0xd70 <gpsReqLocUblox+0x154>
     d6e:	51 c0       	rjmp	.+162    	; 0xe12 <gpsReqLocUblox+0x1f6>
     d70:	46 c0       	rjmp	.+140    	; 0xdfe <gpsReqLocUblox+0x1e2>
     d72:	cf 01       	movw	r24, r30
     d74:	01 96       	adiw	r24, 0x01	; 1
     d76:	80 93 03 39 	sts	0x3903, r24	; 0x803903 <GPSSearchPtr>
     d7a:	90 93 04 39 	sts	0x3904, r25	; 0x803904 <GPSSearchPtr+0x1>
     d7e:	81 81       	ldd	r24, Z+1	; 0x01
     d80:	8c 32       	cpi	r24, 0x2C	; 44
     d82:	f1 f5       	brne	.+124    	; 0xe00 <gpsReqLocUblox+0x1e4>
     d84:	2f 5f       	subi	r18, 0xFF	; 255
     d86:	22 30       	cpi	r18, 0x02	; 2
     d88:	d9 f5       	brne	.+118    	; 0xe00 <gpsReqLocUblox+0x1e4>
     d8a:	82 81       	ldd	r24, Z+2	; 0x02
     d8c:	8c 32       	cpi	r24, 0x2C	; 44
     d8e:	09 f4       	brne	.+2      	; 0xd92 <gpsReqLocUblox+0x176>
     d90:	40 c0       	rjmp	.+128    	; 0xe12 <gpsReqLocUblox+0x1f6>
     d92:	88 35       	cpi	r24, 0x58	; 88
     d94:	f1 f1       	breq	.+124    	; 0xe12 <gpsReqLocUblox+0x1f6>
     d96:	8a 2d       	mov	r24, r10
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	48 e1       	ldi	r20, 0x18	; 24
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	4c 0f       	add	r20, r28
     da0:	5d 1f       	adc	r21, r29
     da2:	48 0f       	add	r20, r24
     da4:	59 1f       	adc	r21, r25
     da6:	9f 01       	movw	r18, r30
     da8:	27 50       	subi	r18, 0x07	; 7
     daa:	31 09       	sbc	r19, r1
     dac:	d9 01       	movw	r26, r18
     dae:	2c 91       	ld	r18, X
     db0:	da 01       	movw	r26, r20
     db2:	2c 93       	st	X, r18
     db4:	40 e1       	ldi	r20, 0x10	; 16
     db6:	50 e0       	ldi	r21, 0x00	; 0
     db8:	4c 0f       	add	r20, r28
     dba:	5d 1f       	adc	r21, r29
     dbc:	48 0f       	add	r20, r24
     dbe:	59 1f       	adc	r21, r25
     dc0:	9f 01       	movw	r18, r30
     dc2:	28 50       	subi	r18, 0x08	; 8
     dc4:	31 09       	sbc	r19, r1
     dc6:	d9 01       	movw	r26, r18
     dc8:	2c 91       	ld	r18, X
     dca:	da 01       	movw	r26, r20
     dcc:	2c 93       	st	X, r18
     dce:	40 e2       	ldi	r20, 0x20	; 32
     dd0:	50 e0       	ldi	r21, 0x00	; 0
     dd2:	4c 0f       	add	r20, r28
     dd4:	5d 1f       	adc	r21, r29
     dd6:	48 0f       	add	r20, r24
     dd8:	59 1f       	adc	r21, r25
     dda:	9f 01       	movw	r18, r30
     ddc:	25 50       	subi	r18, 0x05	; 5
     dde:	31 09       	sbc	r19, r1
     de0:	d9 01       	movw	r26, r18
     de2:	2c 91       	ld	r18, X
     de4:	da 01       	movw	r26, r20
     de6:	2c 93       	st	X, r18
     de8:	a8 e2       	ldi	r26, 0x28	; 40
     dea:	b0 e0       	ldi	r27, 0x00	; 0
     dec:	ac 0f       	add	r26, r28
     dee:	bd 1f       	adc	r27, r29
     df0:	a8 0f       	add	r26, r24
     df2:	b9 1f       	adc	r27, r25
     df4:	36 97       	sbiw	r30, 0x06	; 6
     df6:	20 81       	ld	r18, Z
     df8:	2c 93       	st	X, r18
     dfa:	a3 94       	inc	r10
     dfc:	0a c0       	rjmp	.+20     	; 0xe12 <gpsReqLocUblox+0x1f6>
     dfe:	20 e0       	ldi	r18, 0x00	; 0
     e00:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
     e04:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     e08:	b8 e3       	ldi	r27, 0x38	; 56
     e0a:	e0 3c       	cpi	r30, 0xC0	; 192
     e0c:	fb 07       	cpc	r31, r27
     e0e:	08 f4       	brcc	.+2      	; 0xe12 <gpsReqLocUblox+0x1f6>
     e10:	b0 cf       	rjmp	.-160    	; 0xd72 <gpsReqLocUblox+0x156>
     e12:	ba 94       	dec	r11
     e14:	b1 10       	cpse	r11, r1
     e16:	36 cf       	rjmp	.-404    	; 0xc84 <gpsReqLocUblox+0x68>
     e18:	6f 8d       	ldd	r22, Y+31	; 0x1f
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e1e:	96 13       	cpse	r25, r22
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	9d 8d       	ldd	r25, Y+29	; 0x1d
     e24:	69 13       	cpse	r22, r25
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <gpsReqLocUblox+0x20e>
     e28:	8f 5f       	subi	r24, 0xFF	; 255
     e2a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e2c:	69 13       	cpse	r22, r25
     e2e:	01 c0       	rjmp	.+2      	; 0xe32 <gpsReqLocUblox+0x216>
     e30:	8f 5f       	subi	r24, 0xFF	; 255
     e32:	9b 8d       	ldd	r25, Y+27	; 0x1b
     e34:	69 13       	cpse	r22, r25
     e36:	01 c0       	rjmp	.+2      	; 0xe3a <gpsReqLocUblox+0x21e>
     e38:	8f 5f       	subi	r24, 0xFF	; 255
     e3a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     e3c:	69 13       	cpse	r22, r25
     e3e:	01 c0       	rjmp	.+2      	; 0xe42 <gpsReqLocUblox+0x226>
     e40:	8f 5f       	subi	r24, 0xFF	; 255
     e42:	99 8d       	ldd	r25, Y+25	; 0x19
     e44:	69 13       	cpse	r22, r25
     e46:	01 c0       	rjmp	.+2      	; 0xe4a <gpsReqLocUblox+0x22e>
     e48:	8f 5f       	subi	r24, 0xFF	; 255
     e4a:	98 8d       	ldd	r25, Y+24	; 0x18
     e4c:	69 13       	cpse	r22, r25
     e4e:	01 c0       	rjmp	.+2      	; 0xe52 <gpsReqLocUblox+0x236>
     e50:	8f 5f       	subi	r24, 0xFF	; 255
     e52:	86 30       	cpi	r24, 0x06	; 6
     e54:	08 f4       	brcc	.+2      	; 0xe58 <gpsReqLocUblox+0x23c>
     e56:	0e c1       	rjmp	.+540    	; 0x1074 <gpsReqLocUblox+0x458>
     e58:	8f 89       	ldd	r24, Y+23	; 0x17
     e5a:	91 e0       	ldi	r25, 0x01	; 1
     e5c:	2e 89       	ldd	r18, Y+22	; 0x16
     e5e:	28 13       	cpse	r18, r24
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	2d 89       	ldd	r18, Y+21	; 0x15
     e64:	82 13       	cpse	r24, r18
     e66:	01 c0       	rjmp	.+2      	; 0xe6a <gpsReqLocUblox+0x24e>
     e68:	9f 5f       	subi	r25, 0xFF	; 255
     e6a:	2c 89       	ldd	r18, Y+20	; 0x14
     e6c:	82 13       	cpse	r24, r18
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <gpsReqLocUblox+0x256>
     e70:	9f 5f       	subi	r25, 0xFF	; 255
     e72:	2b 89       	ldd	r18, Y+19	; 0x13
     e74:	82 13       	cpse	r24, r18
     e76:	01 c0       	rjmp	.+2      	; 0xe7a <gpsReqLocUblox+0x25e>
     e78:	9f 5f       	subi	r25, 0xFF	; 255
     e7a:	2a 89       	ldd	r18, Y+18	; 0x12
     e7c:	82 13       	cpse	r24, r18
     e7e:	01 c0       	rjmp	.+2      	; 0xe82 <gpsReqLocUblox+0x266>
     e80:	9f 5f       	subi	r25, 0xFF	; 255
     e82:	29 89       	ldd	r18, Y+17	; 0x11
     e84:	82 13       	cpse	r24, r18
     e86:	01 c0       	rjmp	.+2      	; 0xe8a <gpsReqLocUblox+0x26e>
     e88:	9f 5f       	subi	r25, 0xFF	; 255
     e8a:	28 89       	ldd	r18, Y+16	; 0x10
     e8c:	82 13       	cpse	r24, r18
     e8e:	01 c0       	rjmp	.+2      	; 0xe92 <gpsReqLocUblox+0x276>
     e90:	9f 5f       	subi	r25, 0xFF	; 255
     e92:	96 30       	cpi	r25, 0x06	; 6
     e94:	08 f4       	brcc	.+2      	; 0xe98 <gpsReqLocUblox+0x27c>
     e96:	f1 c0       	rjmp	.+482    	; 0x107a <gpsReqLocUblox+0x45e>
     e98:	ef a4       	ldd	r14, Y+47	; 0x2f
     e9a:	91 e0       	ldi	r25, 0x01	; 1
     e9c:	2e a5       	ldd	r18, Y+46	; 0x2e
     e9e:	2e 11       	cpse	r18, r14
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	2d a5       	ldd	r18, Y+45	; 0x2d
     ea4:	e2 12       	cpse	r14, r18
     ea6:	01 c0       	rjmp	.+2      	; 0xeaa <gpsReqLocUblox+0x28e>
     ea8:	9f 5f       	subi	r25, 0xFF	; 255
     eaa:	2c a5       	ldd	r18, Y+44	; 0x2c
     eac:	e2 12       	cpse	r14, r18
     eae:	01 c0       	rjmp	.+2      	; 0xeb2 <gpsReqLocUblox+0x296>
     eb0:	9f 5f       	subi	r25, 0xFF	; 255
     eb2:	2b a5       	ldd	r18, Y+43	; 0x2b
     eb4:	e2 12       	cpse	r14, r18
     eb6:	01 c0       	rjmp	.+2      	; 0xeba <gpsReqLocUblox+0x29e>
     eb8:	9f 5f       	subi	r25, 0xFF	; 255
     eba:	2a a5       	ldd	r18, Y+42	; 0x2a
     ebc:	e2 12       	cpse	r14, r18
     ebe:	01 c0       	rjmp	.+2      	; 0xec2 <gpsReqLocUblox+0x2a6>
     ec0:	9f 5f       	subi	r25, 0xFF	; 255
     ec2:	29 a5       	ldd	r18, Y+41	; 0x29
     ec4:	e2 12       	cpse	r14, r18
     ec6:	01 c0       	rjmp	.+2      	; 0xeca <gpsReqLocUblox+0x2ae>
     ec8:	9f 5f       	subi	r25, 0xFF	; 255
     eca:	28 a5       	ldd	r18, Y+40	; 0x28
     ecc:	e2 12       	cpse	r14, r18
     ece:	01 c0       	rjmp	.+2      	; 0xed2 <gpsReqLocUblox+0x2b6>
     ed0:	9f 5f       	subi	r25, 0xFF	; 255
     ed2:	96 30       	cpi	r25, 0x06	; 6
     ed4:	08 f4       	brcc	.+2      	; 0xed8 <gpsReqLocUblox+0x2bc>
     ed6:	d4 c0       	rjmp	.+424    	; 0x1080 <gpsReqLocUblox+0x464>
     ed8:	ff a0       	ldd	r15, Y+39	; 0x27
     eda:	91 e0       	ldi	r25, 0x01	; 1
     edc:	2e a1       	ldd	r18, Y+38	; 0x26
     ede:	2f 11       	cpse	r18, r15
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	2d a1       	ldd	r18, Y+37	; 0x25
     ee4:	f2 12       	cpse	r15, r18
     ee6:	01 c0       	rjmp	.+2      	; 0xeea <gpsReqLocUblox+0x2ce>
     ee8:	9f 5f       	subi	r25, 0xFF	; 255
     eea:	2c a1       	ldd	r18, Y+36	; 0x24
     eec:	f2 12       	cpse	r15, r18
     eee:	01 c0       	rjmp	.+2      	; 0xef2 <gpsReqLocUblox+0x2d6>
     ef0:	9f 5f       	subi	r25, 0xFF	; 255
     ef2:	2b a1       	ldd	r18, Y+35	; 0x23
     ef4:	f2 12       	cpse	r15, r18
     ef6:	01 c0       	rjmp	.+2      	; 0xefa <gpsReqLocUblox+0x2de>
     ef8:	9f 5f       	subi	r25, 0xFF	; 255
     efa:	2a a1       	ldd	r18, Y+34	; 0x22
     efc:	f2 12       	cpse	r15, r18
     efe:	01 c0       	rjmp	.+2      	; 0xf02 <gpsReqLocUblox+0x2e6>
     f00:	9f 5f       	subi	r25, 0xFF	; 255
     f02:	29 a1       	ldd	r18, Y+33	; 0x21
     f04:	f2 12       	cpse	r15, r18
     f06:	01 c0       	rjmp	.+2      	; 0xf0a <gpsReqLocUblox+0x2ee>
     f08:	9f 5f       	subi	r25, 0xFF	; 255
     f0a:	28 a1       	ldd	r18, Y+32	; 0x20
     f0c:	f2 12       	cpse	r15, r18
     f0e:	01 c0       	rjmp	.+2      	; 0xf12 <gpsReqLocUblox+0x2f6>
     f10:	9f 5f       	subi	r25, 0xFF	; 255
     f12:	96 30       	cpi	r25, 0x06	; 6
     f14:	08 f4       	brcc	.+2      	; 0xf18 <gpsReqLocUblox+0x2fc>
     f16:	b7 c0       	rjmp	.+366    	; 0x1086 <gpsReqLocUblox+0x46a>
     f18:	ec e2       	ldi	r30, 0x2C	; 44
     f1a:	fe 16       	cp	r15, r30
     f1c:	09 f4       	brne	.+2      	; 0xf20 <gpsReqLocUblox+0x304>
     f1e:	b6 c0       	rjmp	.+364    	; 0x108c <gpsReqLocUblox+0x470>
     f20:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     f24:	0f 2e       	mov	r0, r31
     f26:	fc ed       	ldi	r31, 0xDC	; 220
     f28:	cf 2e       	mov	r12, r31
     f2a:	f8 e3       	ldi	r31, 0x38	; 56
     f2c:	df 2e       	mov	r13, r31
     f2e:	f0 2d       	mov	r31, r0
     f30:	d6 01       	movw	r26, r12
     f32:	1c 96       	adiw	r26, 0x0c	; 12
     f34:	8c 93       	st	X, r24
     f36:	6f 2d       	mov	r22, r15
     f38:	8e 2d       	mov	r24, r14
     f3a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     f3e:	f6 01       	movw	r30, r12
     f40:	85 87       	std	Z+13, r24	; 0x0d
     f42:	e0 90 03 39 	lds	r14, 0x3903	; 0x803903 <GPSSearchPtr>
     f46:	f0 90 04 39 	lds	r15, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
     f4a:	d7 01       	movw	r26, r14
     f4c:	14 97       	sbiw	r26, 0x04	; 4
     f4e:	f7 01       	movw	r30, r14
     f50:	35 97       	sbiw	r30, 0x05	; 5
     f52:	6c 91       	ld	r22, X
     f54:	80 81       	ld	r24, Z
     f56:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     f5a:	d6 01       	movw	r26, r12
     f5c:	1e 96       	adiw	r26, 0x0e	; 14
     f5e:	8c 93       	st	X, r24
     f60:	f7 01       	movw	r30, r14
     f62:	60 a1       	ldd	r22, Z+32	; 0x20
     f64:	87 8d       	ldd	r24, Z+31	; 0x1f
     f66:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     f6a:	d6 01       	movw	r26, r12
     f6c:	50 96       	adiw	r26, 0x10	; 16
     f6e:	8c 93       	st	X, r24
     f70:	f7 01       	movw	r30, r14
     f72:	84 85       	ldd	r24, Z+12	; 0x0c
     f74:	8e 34       	cpi	r24, 0x4E	; 78
     f76:	21 f4       	brne	.+8      	; 0xf80 <gpsReqLocUblox+0x364>
     f78:	80 e8       	ldi	r24, 0x80	; 128
     f7a:	80 93 dc 38 	sts	0x38DC, r24	; 0x8038dc <gpsParams>
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <gpsReqLocUblox+0x368>
     f80:	10 92 dc 38 	sts	0x38DC, r1	; 0x8038dc <gpsParams>
     f84:	d7 01       	movw	r26, r14
     f86:	12 96       	adiw	r26, 0x02	; 2
     f88:	6c 91       	ld	r22, X
     f8a:	12 97       	sbiw	r26, 0x02	; 2
     f8c:	11 96       	adiw	r26, 0x01	; 1
     f8e:	8c 91       	ld	r24, X
     f90:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     f94:	0f 2e       	mov	r0, r31
     f96:	fc ed       	ldi	r31, 0xDC	; 220
     f98:	cf 2e       	mov	r12, r31
     f9a:	f8 e3       	ldi	r31, 0x38	; 56
     f9c:	df 2e       	mov	r13, r31
     f9e:	f0 2d       	mov	r31, r0
     fa0:	f6 01       	movw	r30, r12
     fa2:	90 81       	ld	r25, Z
     fa4:	89 0f       	add	r24, r25
     fa6:	80 83       	st	Z, r24
     fa8:	d7 01       	movw	r26, r14
     faa:	14 96       	adiw	r26, 0x04	; 4
     fac:	6c 91       	ld	r22, X
     fae:	14 97       	sbiw	r26, 0x04	; 4
     fb0:	13 96       	adiw	r26, 0x03	; 3
     fb2:	8c 91       	ld	r24, X
     fb4:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     fb8:	f6 01       	movw	r30, r12
     fba:	81 83       	std	Z+1, r24	; 0x01
     fbc:	d7 01       	movw	r26, r14
     fbe:	17 96       	adiw	r26, 0x07	; 7
     fc0:	6c 91       	ld	r22, X
     fc2:	17 97       	sbiw	r26, 0x07	; 7
     fc4:	16 96       	adiw	r26, 0x06	; 6
     fc6:	8c 91       	ld	r24, X
     fc8:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     fcc:	f6 01       	movw	r30, r12
     fce:	82 83       	std	Z+2, r24	; 0x02
     fd0:	d7 01       	movw	r26, r14
     fd2:	19 96       	adiw	r26, 0x09	; 9
     fd4:	6c 91       	ld	r22, X
     fd6:	19 97       	sbiw	r26, 0x09	; 9
     fd8:	18 96       	adiw	r26, 0x08	; 8
     fda:	8c 91       	ld	r24, X
     fdc:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
     fe0:	f6 01       	movw	r30, r12
     fe2:	83 83       	std	Z+3, r24	; 0x03
     fe4:	d7 01       	movw	r26, r14
     fe6:	5a 96       	adiw	r26, 0x1a	; 26
     fe8:	8c 91       	ld	r24, X
     fea:	85 34       	cpi	r24, 0x45	; 69
     fec:	21 f4       	brne	.+8      	; 0xff6 <gpsReqLocUblox+0x3da>
     fee:	8d e2       	ldi	r24, 0x2D	; 45
     ff0:	80 93 e0 38 	sts	0x38E0, r24	; 0x8038e0 <gpsParams+0x4>
     ff4:	03 c0       	rjmp	.+6      	; 0xffc <gpsReqLocUblox+0x3e0>
     ff6:	8b e2       	ldi	r24, 0x2B	; 43
     ff8:	80 93 e0 38 	sts	0x38E0, r24	; 0x8038e0 <gpsParams+0x4>
     ffc:	f7 01       	movw	r30, r14
     ffe:	86 85       	ldd	r24, Z+14	; 0x0e
    1000:	81 33       	cpi	r24, 0x31	; 49
    1002:	19 f4       	brne	.+6      	; 0x100a <gpsReqLocUblox+0x3ee>
    1004:	84 e6       	ldi	r24, 0x64	; 100
    1006:	80 93 e1 38 	sts	0x38E1, r24	; 0x8038e1 <gpsParams+0x5>
    100a:	d7 01       	movw	r26, r14
    100c:	50 96       	adiw	r26, 0x10	; 16
    100e:	6c 91       	ld	r22, X
    1010:	50 97       	sbiw	r26, 0x10	; 16
    1012:	1f 96       	adiw	r26, 0x0f	; 15
    1014:	8c 91       	ld	r24, X
    1016:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
    101a:	0f 2e       	mov	r0, r31
    101c:	fc ed       	ldi	r31, 0xDC	; 220
    101e:	cf 2e       	mov	r12, r31
    1020:	f8 e3       	ldi	r31, 0x38	; 56
    1022:	df 2e       	mov	r13, r31
    1024:	f0 2d       	mov	r31, r0
    1026:	f6 01       	movw	r30, r12
    1028:	95 81       	ldd	r25, Z+5	; 0x05
    102a:	89 0f       	add	r24, r25
    102c:	85 83       	std	Z+5, r24	; 0x05
    102e:	d7 01       	movw	r26, r14
    1030:	52 96       	adiw	r26, 0x12	; 18
    1032:	6c 91       	ld	r22, X
    1034:	52 97       	sbiw	r26, 0x12	; 18
    1036:	51 96       	adiw	r26, 0x11	; 17
    1038:	8c 91       	ld	r24, X
    103a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
    103e:	f6 01       	movw	r30, r12
    1040:	86 83       	std	Z+6, r24	; 0x06
    1042:	d7 01       	movw	r26, r14
    1044:	55 96       	adiw	r26, 0x15	; 21
    1046:	6c 91       	ld	r22, X
    1048:	55 97       	sbiw	r26, 0x15	; 21
    104a:	54 96       	adiw	r26, 0x14	; 20
    104c:	8c 91       	ld	r24, X
    104e:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
    1052:	f6 01       	movw	r30, r12
    1054:	87 83       	std	Z+7, r24	; 0x07
    1056:	d7 01       	movw	r26, r14
    1058:	57 96       	adiw	r26, 0x17	; 23
    105a:	6c 91       	ld	r22, X
    105c:	57 97       	sbiw	r26, 0x17	; 23
    105e:	56 96       	adiw	r26, 0x16	; 22
    1060:	8c 91       	ld	r24, X
    1062:	0e 94 d5 00 	call	0x1aa	; 0x1aa <asciiToHex>
    1066:	f6 01       	movw	r30, r12
    1068:	80 87       	std	Z+8, r24	; 0x08
    106a:	91 8a       	std	Z+17, r9	; 0x11
    106c:	02 8b       	std	Z+18, r16	; 0x12
    106e:	80 e0       	ldi	r24, 0x00	; 0
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	16 c0       	rjmp	.+44     	; 0x10a0 <gpsReqLocUblox+0x484>
    1074:	8a e9       	ldi	r24, 0x9A	; 154
    1076:	92 e0       	ldi	r25, 0x02	; 2
    1078:	13 c0       	rjmp	.+38     	; 0x10a0 <gpsReqLocUblox+0x484>
    107a:	8a e9       	ldi	r24, 0x9A	; 154
    107c:	92 e0       	ldi	r25, 0x02	; 2
    107e:	10 c0       	rjmp	.+32     	; 0x10a0 <gpsReqLocUblox+0x484>
    1080:	8a e9       	ldi	r24, 0x9A	; 154
    1082:	92 e0       	ldi	r25, 0x02	; 2
    1084:	0d c0       	rjmp	.+26     	; 0x10a0 <gpsReqLocUblox+0x484>
    1086:	8a e9       	ldi	r24, 0x9A	; 154
    1088:	92 e0       	ldi	r25, 0x02	; 2
    108a:	0a c0       	rjmp	.+20     	; 0x10a0 <gpsReqLocUblox+0x484>
    108c:	8a e9       	ldi	r24, 0x9A	; 154
    108e:	92 e0       	ldi	r25, 0x02	; 2
    1090:	07 c0       	rjmp	.+14     	; 0x10a0 <gpsReqLocUblox+0x484>
    1092:	64 e6       	ldi	r22, 0x64	; 100
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	80 e0       	ldi	r24, 0x00	; 0
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    109e:	0f ce       	rjmp	.-994    	; 0xcbe <gpsReqLocUblox+0xa2>
    10a0:	af 96       	adiw	r28, 0x2f	; 47
    10a2:	cd bf       	out	0x3d, r28	; 61
    10a4:	de bf       	out	0x3e, r29	; 62
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	1f 91       	pop	r17
    10ac:	0f 91       	pop	r16
    10ae:	ff 90       	pop	r15
    10b0:	ef 90       	pop	r14
    10b2:	df 90       	pop	r13
    10b4:	cf 90       	pop	r12
    10b6:	bf 90       	pop	r11
    10b8:	af 90       	pop	r10
    10ba:	9f 90       	pop	r9
    10bc:	8f 90       	pop	r8
    10be:	08 95       	ret

000010c0 <GPSgetTime>:
    10c0:	0e 94 0e 06 	call	0xc1c	; 0xc1c <gpsReqLocUblox>
    10c4:	00 97       	sbiw	r24, 0x00	; 0
    10c6:	61 f4       	brne	.+24     	; 0x10e0 <GPSgetTime+0x20>
    10c8:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
    10cc:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
    10d0:	23 a5       	ldd	r18, Z+43	; 0x2b
    10d2:	28 35       	cpi	r18, 0x58	; 88
    10d4:	29 f0       	breq	.+10     	; 0x10e0 <GPSgetTime+0x20>
    10d6:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
    10da:	24 30       	cpi	r18, 0x04	; 4
    10dc:	08 f0       	brcs	.+2      	; 0x10e0 <GPSgetTime+0x20>
    10de:	45 c0       	rjmp	.+138    	; 0x116a <GPSgetTime+0xaa>
    10e0:	0e 94 0e 06 	call	0xc1c	; 0xc1c <gpsReqLocUblox>
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	59 f4       	brne	.+22     	; 0x10fe <GPSgetTime+0x3e>
    10e8:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
    10ec:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
    10f0:	23 a5       	ldd	r18, Z+43	; 0x2b
    10f2:	28 35       	cpi	r18, 0x58	; 88
    10f4:	21 f0       	breq	.+8      	; 0x10fe <GPSgetTime+0x3e>
    10f6:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
    10fa:	24 30       	cpi	r18, 0x04	; 4
    10fc:	b0 f5       	brcc	.+108    	; 0x116a <GPSgetTime+0xaa>
    10fe:	0e 94 0e 06 	call	0xc1c	; 0xc1c <gpsReqLocUblox>
    1102:	00 97       	sbiw	r24, 0x00	; 0
    1104:	59 f4       	brne	.+22     	; 0x111c <GPSgetTime+0x5c>
    1106:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
    110a:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
    110e:	23 a5       	ldd	r18, Z+43	; 0x2b
    1110:	28 35       	cpi	r18, 0x58	; 88
    1112:	21 f0       	breq	.+8      	; 0x111c <GPSgetTime+0x5c>
    1114:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
    1118:	24 30       	cpi	r18, 0x04	; 4
    111a:	38 f5       	brcc	.+78     	; 0x116a <GPSgetTime+0xaa>
    111c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <gpsReqLocUblox>
    1120:	00 97       	sbiw	r24, 0x00	; 0
    1122:	59 f4       	brne	.+22     	; 0x113a <GPSgetTime+0x7a>
    1124:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
    1128:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
    112c:	23 a5       	ldd	r18, Z+43	; 0x2b
    112e:	28 35       	cpi	r18, 0x58	; 88
    1130:	21 f0       	breq	.+8      	; 0x113a <GPSgetTime+0x7a>
    1132:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
    1136:	24 30       	cpi	r18, 0x04	; 4
    1138:	c0 f4       	brcc	.+48     	; 0x116a <GPSgetTime+0xaa>
    113a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <gpsReqLocUblox>
    113e:	00 97       	sbiw	r24, 0x00	; 0
    1140:	61 f4       	brne	.+24     	; 0x115a <GPSgetTime+0x9a>
    1142:	e0 91 03 39 	lds	r30, 0x3903	; 0x803903 <GPSSearchPtr>
    1146:	f0 91 04 39 	lds	r31, 0x3904	; 0x803904 <GPSSearchPtr+0x1>
    114a:	23 a5       	ldd	r18, Z+43	; 0x2b
    114c:	28 35       	cpi	r18, 0x58	; 88
    114e:	41 f0       	breq	.+16     	; 0x1160 <GPSgetTime+0xa0>
    1150:	20 91 ec 38 	lds	r18, 0x38EC	; 0x8038ec <gpsParams+0x10>
    1154:	24 30       	cpi	r18, 0x04	; 4
    1156:	38 f0       	brcs	.+14     	; 0x1166 <GPSgetTime+0xa6>
    1158:	08 95       	ret
    115a:	8a e9       	ldi	r24, 0x9A	; 154
    115c:	92 e0       	ldi	r25, 0x02	; 2
    115e:	08 95       	ret
    1160:	8a e9       	ldi	r24, 0x9A	; 154
    1162:	92 e0       	ldi	r25, 0x02	; 2
    1164:	08 95       	ret
    1166:	8a e9       	ldi	r24, 0x9A	; 154
    1168:	92 e0       	ldi	r25, 0x02	; 2
    116a:	08 95       	ret

0000116c <calcCRC>:
    116c:	0f 93       	push	r16
    116e:	1f 93       	push	r17
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	66 23       	and	r22, r22
    1176:	c1 f1       	breq	.+112    	; 0x11e8 <calcCRC+0x7c>
    1178:	ec 01       	movw	r28, r24
    117a:	8c 01       	movw	r16, r24
    117c:	06 0f       	add	r16, r22
    117e:	11 1d       	adc	r17, r1
    1180:	8f ef       	ldi	r24, 0xFF	; 255
    1182:	9f ef       	ldi	r25, 0xFF	; 255
    1184:	1b c0       	rjmp	.+54     	; 0x11bc <calcCRC+0x50>
    1186:	bc 01       	movw	r22, r24
    1188:	66 0f       	add	r22, r22
    118a:	77 1f       	adc	r23, r23
    118c:	fd 01       	movw	r30, r26
    118e:	e4 23       	and	r30, r20
    1190:	f5 23       	and	r31, r21
    1192:	ef 2b       	or	r30, r31
    1194:	11 f0       	breq	.+4      	; 0x119a <calcCRC+0x2e>
    1196:	6f 5f       	subi	r22, 0xFF	; 255
    1198:	7f 4f       	sbci	r23, 0xFF	; 255
    119a:	56 95       	lsr	r21
    119c:	47 95       	ror	r20
    119e:	99 23       	and	r25, r25
    11a0:	34 f4       	brge	.+12     	; 0x11ae <calcCRC+0x42>
    11a2:	cb 01       	movw	r24, r22
    11a4:	e1 e2       	ldi	r30, 0x21	; 33
    11a6:	8e 27       	eor	r24, r30
    11a8:	e0 e1       	ldi	r30, 0x10	; 16
    11aa:	9e 27       	eor	r25, r30
    11ac:	01 c0       	rjmp	.+2      	; 0x11b0 <calcCRC+0x44>
    11ae:	cb 01       	movw	r24, r22
    11b0:	21 50       	subi	r18, 0x01	; 1
    11b2:	31 09       	sbc	r19, r1
    11b4:	41 f7       	brne	.-48     	; 0x1186 <calcCRC+0x1a>
    11b6:	0c 17       	cp	r16, r28
    11b8:	1d 07       	cpc	r17, r29
    11ba:	c1 f0       	breq	.+48     	; 0x11ec <calcCRC+0x80>
    11bc:	a9 91       	ld	r26, Y+
    11be:	b0 e0       	ldi	r27, 0x00	; 0
    11c0:	28 e0       	ldi	r18, 0x08	; 8
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	40 e8       	ldi	r20, 0x80	; 128
    11c6:	50 e0       	ldi	r21, 0x00	; 0
    11c8:	de cf       	rjmp	.-68     	; 0x1186 <calcCRC+0x1a>
    11ca:	99 23       	and	r25, r25
    11cc:	3c f4       	brge	.+14     	; 0x11dc <calcCRC+0x70>
    11ce:	88 0f       	add	r24, r24
    11d0:	99 1f       	adc	r25, r25
    11d2:	41 e2       	ldi	r20, 0x21	; 33
    11d4:	84 27       	eor	r24, r20
    11d6:	40 e1       	ldi	r20, 0x10	; 16
    11d8:	94 27       	eor	r25, r20
    11da:	02 c0       	rjmp	.+4      	; 0x11e0 <calcCRC+0x74>
    11dc:	88 0f       	add	r24, r24
    11de:	99 1f       	adc	r25, r25
    11e0:	21 50       	subi	r18, 0x01	; 1
    11e2:	31 09       	sbc	r19, r1
    11e4:	91 f7       	brne	.-28     	; 0x11ca <calcCRC+0x5e>
    11e6:	05 c0       	rjmp	.+10     	; 0x11f2 <calcCRC+0x86>
    11e8:	8f ef       	ldi	r24, 0xFF	; 255
    11ea:	9f ef       	ldi	r25, 0xFF	; 255
    11ec:	20 e1       	ldi	r18, 0x10	; 16
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	ec cf       	rjmp	.-40     	; 0x11ca <calcCRC+0x5e>
    11f2:	df 91       	pop	r29
    11f4:	cf 91       	pop	r28
    11f6:	1f 91       	pop	r17
    11f8:	0f 91       	pop	r16
    11fa:	08 95       	ret

000011fc <getByteFromBig>:
    11fc:	f8 94       	cli
    11fe:	20 98       	cbi	0x04, 0	; 4
    1200:	e0 e3       	ldi	r30, 0x30	; 48
    1202:	f4 e0       	ldi	r31, 0x04	; 4
    1204:	80 81       	ld	r24, Z
    1206:	87 7f       	andi	r24, 0xF7	; 247
    1208:	80 83       	st	Z, r24
    120a:	43 98       	cbi	0x08, 3	; 8
    120c:	e3 e5       	ldi	r30, 0x53	; 83
    120e:	f4 e0       	ldi	r31, 0x04	; 4
    1210:	80 81       	ld	r24, Z
    1212:	87 7f       	andi	r24, 0xF7	; 247
    1214:	80 83       	st	Z, r24
    1216:	53 9b       	sbis	0x0a, 3	; 10
    1218:	06 c0       	rjmp	.+12     	; 0x1226 <getByteFromBig+0x2a>
    121a:	87 e8       	ldi	r24, 0x87	; 135
    121c:	93 e1       	ldi	r25, 0x13	; 19
    121e:	53 9b       	sbis	0x0a, 3	; 10
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <getByteFromBig+0x2a>
    1222:	01 97       	sbiw	r24, 0x01	; 1
    1224:	e1 f7       	brne	.-8      	; 0x121e <getByteFromBig+0x22>
    1226:	30 9b       	sbis	0x06, 0	; 6
    1228:	02 c0       	rjmp	.+4      	; 0x122e <getByteFromBig+0x32>
    122a:	80 e8       	ldi	r24, 0x80	; 128
    122c:	01 c0       	rjmp	.+2      	; 0x1230 <getByteFromBig+0x34>
    122e:	80 e0       	ldi	r24, 0x00	; 0
    1230:	53 99       	sbic	0x0a, 3	; 10
    1232:	68 c0       	rjmp	.+208    	; 0x1304 <getByteFromBig+0x108>
    1234:	99 ef       	ldi	r25, 0xF9	; 249
    1236:	53 99       	sbic	0x0a, 3	; 10
    1238:	65 c0       	rjmp	.+202    	; 0x1304 <getByteFromBig+0x108>
    123a:	91 50       	subi	r25, 0x01	; 1
    123c:	e1 f7       	brne	.-8      	; 0x1236 <getByteFromBig+0x3a>
    123e:	62 c0       	rjmp	.+196    	; 0x1304 <getByteFromBig+0x108>
    1240:	53 9b       	sbis	0x0a, 3	; 10
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <getByteFromBig+0x4c>
    1244:	91 50       	subi	r25, 0x01	; 1
    1246:	e1 f7       	brne	.-8      	; 0x1240 <getByteFromBig+0x44>
    1248:	30 99       	sbic	0x06, 0	; 6
    124a:	80 64       	ori	r24, 0x40	; 64
    124c:	53 99       	sbic	0x0a, 3	; 10
    124e:	5e c0       	rjmp	.+188    	; 0x130c <getByteFromBig+0x110>
    1250:	99 ef       	ldi	r25, 0xF9	; 249
    1252:	53 99       	sbic	0x0a, 3	; 10
    1254:	5b c0       	rjmp	.+182    	; 0x130c <getByteFromBig+0x110>
    1256:	91 50       	subi	r25, 0x01	; 1
    1258:	e1 f7       	brne	.-8      	; 0x1252 <getByteFromBig+0x56>
    125a:	58 c0       	rjmp	.+176    	; 0x130c <getByteFromBig+0x110>
    125c:	53 9b       	sbis	0x0a, 3	; 10
    125e:	02 c0       	rjmp	.+4      	; 0x1264 <getByteFromBig+0x68>
    1260:	91 50       	subi	r25, 0x01	; 1
    1262:	e1 f7       	brne	.-8      	; 0x125c <getByteFromBig+0x60>
    1264:	30 99       	sbic	0x06, 0	; 6
    1266:	80 62       	ori	r24, 0x20	; 32
    1268:	53 99       	sbic	0x0a, 3	; 10
    126a:	54 c0       	rjmp	.+168    	; 0x1314 <getByteFromBig+0x118>
    126c:	99 ef       	ldi	r25, 0xF9	; 249
    126e:	53 99       	sbic	0x0a, 3	; 10
    1270:	51 c0       	rjmp	.+162    	; 0x1314 <getByteFromBig+0x118>
    1272:	91 50       	subi	r25, 0x01	; 1
    1274:	e1 f7       	brne	.-8      	; 0x126e <getByteFromBig+0x72>
    1276:	4e c0       	rjmp	.+156    	; 0x1314 <getByteFromBig+0x118>
    1278:	53 9b       	sbis	0x0a, 3	; 10
    127a:	02 c0       	rjmp	.+4      	; 0x1280 <getByteFromBig+0x84>
    127c:	91 50       	subi	r25, 0x01	; 1
    127e:	e1 f7       	brne	.-8      	; 0x1278 <getByteFromBig+0x7c>
    1280:	30 99       	sbic	0x06, 0	; 6
    1282:	80 61       	ori	r24, 0x10	; 16
    1284:	53 99       	sbic	0x0a, 3	; 10
    1286:	4a c0       	rjmp	.+148    	; 0x131c <getByteFromBig+0x120>
    1288:	99 ef       	ldi	r25, 0xF9	; 249
    128a:	53 99       	sbic	0x0a, 3	; 10
    128c:	47 c0       	rjmp	.+142    	; 0x131c <getByteFromBig+0x120>
    128e:	91 50       	subi	r25, 0x01	; 1
    1290:	e1 f7       	brne	.-8      	; 0x128a <getByteFromBig+0x8e>
    1292:	44 c0       	rjmp	.+136    	; 0x131c <getByteFromBig+0x120>
    1294:	53 9b       	sbis	0x0a, 3	; 10
    1296:	02 c0       	rjmp	.+4      	; 0x129c <getByteFromBig+0xa0>
    1298:	91 50       	subi	r25, 0x01	; 1
    129a:	e1 f7       	brne	.-8      	; 0x1294 <getByteFromBig+0x98>
    129c:	30 99       	sbic	0x06, 0	; 6
    129e:	88 60       	ori	r24, 0x08	; 8
    12a0:	53 99       	sbic	0x0a, 3	; 10
    12a2:	40 c0       	rjmp	.+128    	; 0x1324 <getByteFromBig+0x128>
    12a4:	99 ef       	ldi	r25, 0xF9	; 249
    12a6:	53 99       	sbic	0x0a, 3	; 10
    12a8:	3d c0       	rjmp	.+122    	; 0x1324 <getByteFromBig+0x128>
    12aa:	91 50       	subi	r25, 0x01	; 1
    12ac:	e1 f7       	brne	.-8      	; 0x12a6 <getByteFromBig+0xaa>
    12ae:	3a c0       	rjmp	.+116    	; 0x1324 <getByteFromBig+0x128>
    12b0:	53 9b       	sbis	0x0a, 3	; 10
    12b2:	02 c0       	rjmp	.+4      	; 0x12b8 <getByteFromBig+0xbc>
    12b4:	91 50       	subi	r25, 0x01	; 1
    12b6:	e1 f7       	brne	.-8      	; 0x12b0 <getByteFromBig+0xb4>
    12b8:	30 99       	sbic	0x06, 0	; 6
    12ba:	84 60       	ori	r24, 0x04	; 4
    12bc:	53 99       	sbic	0x0a, 3	; 10
    12be:	36 c0       	rjmp	.+108    	; 0x132c <getByteFromBig+0x130>
    12c0:	99 ef       	ldi	r25, 0xF9	; 249
    12c2:	53 99       	sbic	0x0a, 3	; 10
    12c4:	33 c0       	rjmp	.+102    	; 0x132c <getByteFromBig+0x130>
    12c6:	91 50       	subi	r25, 0x01	; 1
    12c8:	e1 f7       	brne	.-8      	; 0x12c2 <getByteFromBig+0xc6>
    12ca:	30 c0       	rjmp	.+96     	; 0x132c <getByteFromBig+0x130>
    12cc:	53 9b       	sbis	0x0a, 3	; 10
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <getByteFromBig+0xd8>
    12d0:	91 50       	subi	r25, 0x01	; 1
    12d2:	e1 f7       	brne	.-8      	; 0x12cc <getByteFromBig+0xd0>
    12d4:	30 99       	sbic	0x06, 0	; 6
    12d6:	82 60       	ori	r24, 0x02	; 2
    12d8:	53 99       	sbic	0x0a, 3	; 10
    12da:	2c c0       	rjmp	.+88     	; 0x1334 <getByteFromBig+0x138>
    12dc:	99 ef       	ldi	r25, 0xF9	; 249
    12de:	53 99       	sbic	0x0a, 3	; 10
    12e0:	29 c0       	rjmp	.+82     	; 0x1334 <getByteFromBig+0x138>
    12e2:	91 50       	subi	r25, 0x01	; 1
    12e4:	e1 f7       	brne	.-8      	; 0x12de <getByteFromBig+0xe2>
    12e6:	26 c0       	rjmp	.+76     	; 0x1334 <getByteFromBig+0x138>
    12e8:	53 9b       	sbis	0x0a, 3	; 10
    12ea:	02 c0       	rjmp	.+4      	; 0x12f0 <getByteFromBig+0xf4>
    12ec:	91 50       	subi	r25, 0x01	; 1
    12ee:	e1 f7       	brne	.-8      	; 0x12e8 <getByteFromBig+0xec>
    12f0:	30 99       	sbic	0x06, 0	; 6
    12f2:	81 60       	ori	r24, 0x01	; 1
    12f4:	53 99       	sbic	0x0a, 3	; 10
    12f6:	22 c0       	rjmp	.+68     	; 0x133c <getByteFromBig+0x140>
    12f8:	99 ef       	ldi	r25, 0xF9	; 249
    12fa:	53 99       	sbic	0x0a, 3	; 10
    12fc:	1f c0       	rjmp	.+62     	; 0x133c <getByteFromBig+0x140>
    12fe:	91 50       	subi	r25, 0x01	; 1
    1300:	e1 f7       	brne	.-8      	; 0x12fa <getByteFromBig+0xfe>
    1302:	08 95       	ret
    1304:	53 9b       	sbis	0x0a, 3	; 10
    1306:	a0 cf       	rjmp	.-192    	; 0x1248 <getByteFromBig+0x4c>
    1308:	99 ef       	ldi	r25, 0xF9	; 249
    130a:	9a cf       	rjmp	.-204    	; 0x1240 <getByteFromBig+0x44>
    130c:	53 9b       	sbis	0x0a, 3	; 10
    130e:	aa cf       	rjmp	.-172    	; 0x1264 <getByteFromBig+0x68>
    1310:	99 ef       	ldi	r25, 0xF9	; 249
    1312:	a4 cf       	rjmp	.-184    	; 0x125c <getByteFromBig+0x60>
    1314:	53 9b       	sbis	0x0a, 3	; 10
    1316:	b4 cf       	rjmp	.-152    	; 0x1280 <getByteFromBig+0x84>
    1318:	99 ef       	ldi	r25, 0xF9	; 249
    131a:	ae cf       	rjmp	.-164    	; 0x1278 <getByteFromBig+0x7c>
    131c:	53 9b       	sbis	0x0a, 3	; 10
    131e:	be cf       	rjmp	.-132    	; 0x129c <getByteFromBig+0xa0>
    1320:	99 ef       	ldi	r25, 0xF9	; 249
    1322:	b8 cf       	rjmp	.-144    	; 0x1294 <getByteFromBig+0x98>
    1324:	53 9b       	sbis	0x0a, 3	; 10
    1326:	c8 cf       	rjmp	.-112    	; 0x12b8 <getByteFromBig+0xbc>
    1328:	99 ef       	ldi	r25, 0xF9	; 249
    132a:	c2 cf       	rjmp	.-124    	; 0x12b0 <getByteFromBig+0xb4>
    132c:	53 9b       	sbis	0x0a, 3	; 10
    132e:	d2 cf       	rjmp	.-92     	; 0x12d4 <getByteFromBig+0xd8>
    1330:	99 ef       	ldi	r25, 0xF9	; 249
    1332:	cc cf       	rjmp	.-104    	; 0x12cc <getByteFromBig+0xd0>
    1334:	53 9b       	sbis	0x0a, 3	; 10
    1336:	dc cf       	rjmp	.-72     	; 0x12f0 <getByteFromBig+0xf4>
    1338:	99 ef       	ldi	r25, 0xF9	; 249
    133a:	d6 cf       	rjmp	.-84     	; 0x12e8 <getByteFromBig+0xec>
    133c:	08 95       	ret

0000133e <sendByteToBig>:
    133e:	20 9a       	sbi	0x04, 0	; 4
    1340:	88 23       	and	r24, r24
    1342:	14 f0       	brlt	.+4      	; 0x1348 <sendByteToBig+0xa>
    1344:	28 98       	cbi	0x05, 0	; 5
    1346:	93 c0       	rjmp	.+294    	; 0x146e <sendByteToBig+0x130>
    1348:	28 9a       	sbi	0x05, 0	; 5
    134a:	91 c0       	rjmp	.+290    	; 0x146e <sendByteToBig+0x130>
    134c:	29 ef       	ldi	r18, 0xF9	; 249
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	53 9b       	sbis	0x0a, 3	; 10
    1352:	8f c0       	rjmp	.+286    	; 0x1472 <sendByteToBig+0x134>
    1354:	21 50       	subi	r18, 0x01	; 1
    1356:	31 09       	sbc	r19, r1
    1358:	d9 f7       	brne	.-10     	; 0x1350 <sendByteToBig+0x12>
    135a:	8b c0       	rjmp	.+278    	; 0x1472 <sendByteToBig+0x134>
    135c:	53 99       	sbic	0x0a, 3	; 10
    135e:	03 c0       	rjmp	.+6      	; 0x1366 <sendByteToBig+0x28>
    1360:	21 50       	subi	r18, 0x01	; 1
    1362:	31 09       	sbc	r19, r1
    1364:	d9 f7       	brne	.-10     	; 0x135c <sendByteToBig+0x1e>
    1366:	86 fd       	sbrc	r24, 6
    1368:	02 c0       	rjmp	.+4      	; 0x136e <sendByteToBig+0x30>
    136a:	28 98       	cbi	0x05, 0	; 5
    136c:	87 c0       	rjmp	.+270    	; 0x147c <sendByteToBig+0x13e>
    136e:	28 9a       	sbi	0x05, 0	; 5
    1370:	85 c0       	rjmp	.+266    	; 0x147c <sendByteToBig+0x13e>
    1372:	29 ef       	ldi	r18, 0xF9	; 249
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	53 9b       	sbis	0x0a, 3	; 10
    1378:	83 c0       	rjmp	.+262    	; 0x1480 <sendByteToBig+0x142>
    137a:	21 50       	subi	r18, 0x01	; 1
    137c:	31 09       	sbc	r19, r1
    137e:	d9 f7       	brne	.-10     	; 0x1376 <sendByteToBig+0x38>
    1380:	7f c0       	rjmp	.+254    	; 0x1480 <sendByteToBig+0x142>
    1382:	53 99       	sbic	0x0a, 3	; 10
    1384:	03 c0       	rjmp	.+6      	; 0x138c <sendByteToBig+0x4e>
    1386:	21 50       	subi	r18, 0x01	; 1
    1388:	31 09       	sbc	r19, r1
    138a:	d9 f7       	brne	.-10     	; 0x1382 <sendByteToBig+0x44>
    138c:	85 fd       	sbrc	r24, 5
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <sendByteToBig+0x56>
    1390:	28 98       	cbi	0x05, 0	; 5
    1392:	7b c0       	rjmp	.+246    	; 0x148a <sendByteToBig+0x14c>
    1394:	28 9a       	sbi	0x05, 0	; 5
    1396:	79 c0       	rjmp	.+242    	; 0x148a <sendByteToBig+0x14c>
    1398:	29 ef       	ldi	r18, 0xF9	; 249
    139a:	30 e0       	ldi	r19, 0x00	; 0
    139c:	53 9b       	sbis	0x0a, 3	; 10
    139e:	77 c0       	rjmp	.+238    	; 0x148e <sendByteToBig+0x150>
    13a0:	21 50       	subi	r18, 0x01	; 1
    13a2:	31 09       	sbc	r19, r1
    13a4:	d9 f7       	brne	.-10     	; 0x139c <sendByteToBig+0x5e>
    13a6:	73 c0       	rjmp	.+230    	; 0x148e <sendByteToBig+0x150>
    13a8:	53 99       	sbic	0x0a, 3	; 10
    13aa:	03 c0       	rjmp	.+6      	; 0x13b2 <sendByteToBig+0x74>
    13ac:	21 50       	subi	r18, 0x01	; 1
    13ae:	31 09       	sbc	r19, r1
    13b0:	d9 f7       	brne	.-10     	; 0x13a8 <sendByteToBig+0x6a>
    13b2:	84 fd       	sbrc	r24, 4
    13b4:	02 c0       	rjmp	.+4      	; 0x13ba <sendByteToBig+0x7c>
    13b6:	28 98       	cbi	0x05, 0	; 5
    13b8:	6f c0       	rjmp	.+222    	; 0x1498 <sendByteToBig+0x15a>
    13ba:	28 9a       	sbi	0x05, 0	; 5
    13bc:	6d c0       	rjmp	.+218    	; 0x1498 <sendByteToBig+0x15a>
    13be:	29 ef       	ldi	r18, 0xF9	; 249
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	53 9b       	sbis	0x0a, 3	; 10
    13c4:	6b c0       	rjmp	.+214    	; 0x149c <sendByteToBig+0x15e>
    13c6:	21 50       	subi	r18, 0x01	; 1
    13c8:	31 09       	sbc	r19, r1
    13ca:	d9 f7       	brne	.-10     	; 0x13c2 <sendByteToBig+0x84>
    13cc:	67 c0       	rjmp	.+206    	; 0x149c <sendByteToBig+0x15e>
    13ce:	53 99       	sbic	0x0a, 3	; 10
    13d0:	03 c0       	rjmp	.+6      	; 0x13d8 <sendByteToBig+0x9a>
    13d2:	21 50       	subi	r18, 0x01	; 1
    13d4:	31 09       	sbc	r19, r1
    13d6:	d9 f7       	brne	.-10     	; 0x13ce <sendByteToBig+0x90>
    13d8:	83 fd       	sbrc	r24, 3
    13da:	02 c0       	rjmp	.+4      	; 0x13e0 <sendByteToBig+0xa2>
    13dc:	28 98       	cbi	0x05, 0	; 5
    13de:	63 c0       	rjmp	.+198    	; 0x14a6 <sendByteToBig+0x168>
    13e0:	28 9a       	sbi	0x05, 0	; 5
    13e2:	61 c0       	rjmp	.+194    	; 0x14a6 <sendByteToBig+0x168>
    13e4:	29 ef       	ldi	r18, 0xF9	; 249
    13e6:	30 e0       	ldi	r19, 0x00	; 0
    13e8:	53 9b       	sbis	0x0a, 3	; 10
    13ea:	5f c0       	rjmp	.+190    	; 0x14aa <sendByteToBig+0x16c>
    13ec:	21 50       	subi	r18, 0x01	; 1
    13ee:	31 09       	sbc	r19, r1
    13f0:	d9 f7       	brne	.-10     	; 0x13e8 <sendByteToBig+0xaa>
    13f2:	5b c0       	rjmp	.+182    	; 0x14aa <sendByteToBig+0x16c>
    13f4:	53 99       	sbic	0x0a, 3	; 10
    13f6:	03 c0       	rjmp	.+6      	; 0x13fe <sendByteToBig+0xc0>
    13f8:	21 50       	subi	r18, 0x01	; 1
    13fa:	31 09       	sbc	r19, r1
    13fc:	d9 f7       	brne	.-10     	; 0x13f4 <sendByteToBig+0xb6>
    13fe:	82 fd       	sbrc	r24, 2
    1400:	02 c0       	rjmp	.+4      	; 0x1406 <sendByteToBig+0xc8>
    1402:	28 98       	cbi	0x05, 0	; 5
    1404:	57 c0       	rjmp	.+174    	; 0x14b4 <sendByteToBig+0x176>
    1406:	28 9a       	sbi	0x05, 0	; 5
    1408:	55 c0       	rjmp	.+170    	; 0x14b4 <sendByteToBig+0x176>
    140a:	29 ef       	ldi	r18, 0xF9	; 249
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	53 9b       	sbis	0x0a, 3	; 10
    1410:	53 c0       	rjmp	.+166    	; 0x14b8 <sendByteToBig+0x17a>
    1412:	21 50       	subi	r18, 0x01	; 1
    1414:	31 09       	sbc	r19, r1
    1416:	d9 f7       	brne	.-10     	; 0x140e <sendByteToBig+0xd0>
    1418:	4f c0       	rjmp	.+158    	; 0x14b8 <sendByteToBig+0x17a>
    141a:	53 99       	sbic	0x0a, 3	; 10
    141c:	03 c0       	rjmp	.+6      	; 0x1424 <sendByteToBig+0xe6>
    141e:	21 50       	subi	r18, 0x01	; 1
    1420:	31 09       	sbc	r19, r1
    1422:	d9 f7       	brne	.-10     	; 0x141a <sendByteToBig+0xdc>
    1424:	81 fd       	sbrc	r24, 1
    1426:	02 c0       	rjmp	.+4      	; 0x142c <sendByteToBig+0xee>
    1428:	28 98       	cbi	0x05, 0	; 5
    142a:	4b c0       	rjmp	.+150    	; 0x14c2 <sendByteToBig+0x184>
    142c:	28 9a       	sbi	0x05, 0	; 5
    142e:	49 c0       	rjmp	.+146    	; 0x14c2 <sendByteToBig+0x184>
    1430:	29 ef       	ldi	r18, 0xF9	; 249
    1432:	30 e0       	ldi	r19, 0x00	; 0
    1434:	53 9b       	sbis	0x0a, 3	; 10
    1436:	47 c0       	rjmp	.+142    	; 0x14c6 <sendByteToBig+0x188>
    1438:	21 50       	subi	r18, 0x01	; 1
    143a:	31 09       	sbc	r19, r1
    143c:	d9 f7       	brne	.-10     	; 0x1434 <sendByteToBig+0xf6>
    143e:	43 c0       	rjmp	.+134    	; 0x14c6 <sendByteToBig+0x188>
    1440:	53 99       	sbic	0x0a, 3	; 10
    1442:	03 c0       	rjmp	.+6      	; 0x144a <sendByteToBig+0x10c>
    1444:	21 50       	subi	r18, 0x01	; 1
    1446:	31 09       	sbc	r19, r1
    1448:	d9 f7       	brne	.-10     	; 0x1440 <sendByteToBig+0x102>
    144a:	80 fd       	sbrc	r24, 0
    144c:	02 c0       	rjmp	.+4      	; 0x1452 <sendByteToBig+0x114>
    144e:	28 98       	cbi	0x05, 0	; 5
    1450:	3f c0       	rjmp	.+126    	; 0x14d0 <sendByteToBig+0x192>
    1452:	28 9a       	sbi	0x05, 0	; 5
    1454:	3d c0       	rjmp	.+122    	; 0x14d0 <sendByteToBig+0x192>
    1456:	89 ef       	ldi	r24, 0xF9	; 249
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	53 9b       	sbis	0x0a, 3	; 10
    145c:	3b c0       	rjmp	.+118    	; 0x14d4 <sendByteToBig+0x196>
    145e:	01 97       	sbiw	r24, 0x01	; 1
    1460:	e1 f7       	brne	.-8      	; 0x145a <sendByteToBig+0x11c>
    1462:	38 c0       	rjmp	.+112    	; 0x14d4 <sendByteToBig+0x196>
    1464:	53 99       	sbic	0x0a, 3	; 10
    1466:	3b c0       	rjmp	.+118    	; 0x14de <sendByteToBig+0x1a0>
    1468:	01 97       	sbiw	r24, 0x01	; 1
    146a:	e1 f7       	brne	.-8      	; 0x1464 <sendByteToBig+0x126>
    146c:	08 95       	ret
    146e:	53 99       	sbic	0x0a, 3	; 10
    1470:	6d cf       	rjmp	.-294    	; 0x134c <sendByteToBig+0xe>
    1472:	53 99       	sbic	0x0a, 3	; 10
    1474:	78 cf       	rjmp	.-272    	; 0x1366 <sendByteToBig+0x28>
    1476:	29 ef       	ldi	r18, 0xF9	; 249
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	70 cf       	rjmp	.-288    	; 0x135c <sendByteToBig+0x1e>
    147c:	53 99       	sbic	0x0a, 3	; 10
    147e:	79 cf       	rjmp	.-270    	; 0x1372 <sendByteToBig+0x34>
    1480:	53 99       	sbic	0x0a, 3	; 10
    1482:	84 cf       	rjmp	.-248    	; 0x138c <sendByteToBig+0x4e>
    1484:	29 ef       	ldi	r18, 0xF9	; 249
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	7c cf       	rjmp	.-264    	; 0x1382 <sendByteToBig+0x44>
    148a:	53 99       	sbic	0x0a, 3	; 10
    148c:	85 cf       	rjmp	.-246    	; 0x1398 <sendByteToBig+0x5a>
    148e:	53 99       	sbic	0x0a, 3	; 10
    1490:	90 cf       	rjmp	.-224    	; 0x13b2 <sendByteToBig+0x74>
    1492:	29 ef       	ldi	r18, 0xF9	; 249
    1494:	30 e0       	ldi	r19, 0x00	; 0
    1496:	88 cf       	rjmp	.-240    	; 0x13a8 <sendByteToBig+0x6a>
    1498:	53 99       	sbic	0x0a, 3	; 10
    149a:	91 cf       	rjmp	.-222    	; 0x13be <sendByteToBig+0x80>
    149c:	53 99       	sbic	0x0a, 3	; 10
    149e:	9c cf       	rjmp	.-200    	; 0x13d8 <sendByteToBig+0x9a>
    14a0:	29 ef       	ldi	r18, 0xF9	; 249
    14a2:	30 e0       	ldi	r19, 0x00	; 0
    14a4:	94 cf       	rjmp	.-216    	; 0x13ce <sendByteToBig+0x90>
    14a6:	53 99       	sbic	0x0a, 3	; 10
    14a8:	9d cf       	rjmp	.-198    	; 0x13e4 <sendByteToBig+0xa6>
    14aa:	53 99       	sbic	0x0a, 3	; 10
    14ac:	a8 cf       	rjmp	.-176    	; 0x13fe <sendByteToBig+0xc0>
    14ae:	29 ef       	ldi	r18, 0xF9	; 249
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	a0 cf       	rjmp	.-192    	; 0x13f4 <sendByteToBig+0xb6>
    14b4:	53 99       	sbic	0x0a, 3	; 10
    14b6:	a9 cf       	rjmp	.-174    	; 0x140a <sendByteToBig+0xcc>
    14b8:	53 99       	sbic	0x0a, 3	; 10
    14ba:	b4 cf       	rjmp	.-152    	; 0x1424 <sendByteToBig+0xe6>
    14bc:	29 ef       	ldi	r18, 0xF9	; 249
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	ac cf       	rjmp	.-168    	; 0x141a <sendByteToBig+0xdc>
    14c2:	53 99       	sbic	0x0a, 3	; 10
    14c4:	b5 cf       	rjmp	.-150    	; 0x1430 <sendByteToBig+0xf2>
    14c6:	53 99       	sbic	0x0a, 3	; 10
    14c8:	c0 cf       	rjmp	.-128    	; 0x144a <sendByteToBig+0x10c>
    14ca:	29 ef       	ldi	r18, 0xF9	; 249
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	b8 cf       	rjmp	.-144    	; 0x1440 <sendByteToBig+0x102>
    14d0:	53 99       	sbic	0x0a, 3	; 10
    14d2:	c1 cf       	rjmp	.-126    	; 0x1456 <sendByteToBig+0x118>
    14d4:	53 99       	sbic	0x0a, 3	; 10
    14d6:	03 c0       	rjmp	.+6      	; 0x14de <sendByteToBig+0x1a0>
    14d8:	89 ef       	ldi	r24, 0xF9	; 249
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	c3 cf       	rjmp	.-122    	; 0x1464 <sendByteToBig+0x126>
    14de:	08 95       	ret

000014e0 <send25BytesToBig>:
    14e0:	0f 93       	push	r16
    14e2:	1f 93       	push	r17
    14e4:	cf 93       	push	r28
    14e6:	df 93       	push	r29
    14e8:	8c 01       	movw	r16, r24
    14ea:	20 9a       	sbi	0x04, 0	; 4
    14ec:	43 98       	cbi	0x08, 3	; 8
    14ee:	67 e1       	ldi	r22, 0x17	; 23
    14f0:	0e 94 b6 08 	call	0x116c	; 0x116c <calcCRC>
    14f4:	f8 01       	movw	r30, r16
    14f6:	97 8b       	std	Z+23, r25	; 0x17
    14f8:	80 8f       	std	Z+24, r24	; 0x18
    14fa:	c0 e3       	ldi	r28, 0x30	; 48
    14fc:	d5 e7       	ldi	r29, 0x75	; 117
    14fe:	28 98       	cbi	0x05, 0	; 5
    1500:	61 e0       	ldi	r22, 0x01	; 1
    1502:	70 e0       	ldi	r23, 0x00	; 0
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	0e 94 67 02 	call	0x4ce	; 0x4ce <myDelay_hus>
    150c:	53 9b       	sbis	0x0a, 3	; 10
    150e:	1a c0       	rjmp	.+52     	; 0x1544 <send25BytesToBig+0x64>
    1510:	21 97       	sbiw	r28, 0x01	; 1
    1512:	a9 f7       	brne	.-22     	; 0x14fe <send25BytesToBig+0x1e>
    1514:	17 c0       	rjmp	.+46     	; 0x1544 <send25BytesToBig+0x64>
    1516:	8f e2       	ldi	r24, 0x2F	; 47
    1518:	95 e7       	ldi	r25, 0x75	; 117
    151a:	53 9b       	sbis	0x0a, 3	; 10
    151c:	15 c0       	rjmp	.+42     	; 0x1548 <send25BytesToBig+0x68>
    151e:	01 97       	sbiw	r24, 0x01	; 1
    1520:	e1 f7       	brne	.-8      	; 0x151a <send25BytesToBig+0x3a>
    1522:	12 c0       	rjmp	.+36     	; 0x1548 <send25BytesToBig+0x68>
    1524:	53 99       	sbic	0x0a, 3	; 10
    1526:	02 c0       	rjmp	.+4      	; 0x152c <send25BytesToBig+0x4c>
    1528:	01 97       	sbiw	r24, 0x01	; 1
    152a:	e1 f7       	brne	.-8      	; 0x1524 <send25BytesToBig+0x44>
    152c:	40 9a       	sbi	0x08, 0	; 8
    152e:	48 9a       	sbi	0x09, 0	; 9
    1530:	e8 01       	movw	r28, r16
    1532:	07 5e       	subi	r16, 0xE7	; 231
    1534:	1f 4f       	sbci	r17, 0xFF	; 255
    1536:	89 91       	ld	r24, Y+
    1538:	0e 94 9f 09 	call	0x133e	; 0x133e <sendByteToBig>
    153c:	0c 17       	cp	r16, r28
    153e:	1d 07       	cpc	r17, r29
    1540:	d1 f7       	brne	.-12     	; 0x1536 <send25BytesToBig+0x56>
    1542:	07 c0       	rjmp	.+14     	; 0x1552 <send25BytesToBig+0x72>
    1544:	53 99       	sbic	0x0a, 3	; 10
    1546:	e7 cf       	rjmp	.-50     	; 0x1516 <send25BytesToBig+0x36>
    1548:	53 99       	sbic	0x0a, 3	; 10
    154a:	f0 cf       	rjmp	.-32     	; 0x152c <send25BytesToBig+0x4c>
    154c:	8f e2       	ldi	r24, 0x2F	; 47
    154e:	95 e7       	ldi	r25, 0x75	; 117
    1550:	e9 cf       	rjmp	.-46     	; 0x1524 <send25BytesToBig+0x44>
    1552:	df 91       	pop	r29
    1554:	cf 91       	pop	r28
    1556:	1f 91       	pop	r17
    1558:	0f 91       	pop	r16
    155a:	08 95       	ret

0000155c <getPacketFromBig>:
    155c:	cf 92       	push	r12
    155e:	df 92       	push	r13
    1560:	ef 92       	push	r14
    1562:	ff 92       	push	r15
    1564:	0f 93       	push	r16
    1566:	1f 93       	push	r17
    1568:	cf 93       	push	r28
    156a:	df 93       	push	r29
    156c:	cd b7       	in	r28, 0x3d	; 61
    156e:	de b7       	in	r29, 0x3e	; 62
    1570:	2b 97       	sbiw	r28, 0x0b	; 11
    1572:	cd bf       	out	0x3d, r28	; 61
    1574:	de bf       	out	0x3e, r29	; 62
    1576:	f8 94       	cli
    1578:	0e 94 fe 08 	call	0x11fc	; 0x11fc <getByteFromBig>
    157c:	89 83       	std	Y+1, r24	; 0x01
    157e:	0e 94 fe 08 	call	0x11fc	; 0x11fc <getByteFromBig>
    1582:	8a 83       	std	Y+2, r24	; 0x02
    1584:	0e 94 fe 08 	call	0x11fc	; 0x11fc <getByteFromBig>
    1588:	8b 83       	std	Y+3, r24	; 0x03
    158a:	0e 94 fe 08 	call	0x11fc	; 0x11fc <getByteFromBig>
    158e:	8c 83       	std	Y+4, r24	; 0x04
    1590:	62 e0       	ldi	r22, 0x02	; 2
    1592:	ce 01       	movw	r24, r28
    1594:	01 96       	adiw	r24, 0x01	; 1
    1596:	0e 94 b6 08 	call	0x116c	; 0x116c <calcCRC>
    159a:	20 9a       	sbi	0x04, 0	; 4
    159c:	2b 81       	ldd	r18, Y+3	; 0x03
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	32 2f       	mov	r19, r18
    15a2:	22 27       	eor	r18, r18
    15a4:	4c 81       	ldd	r20, Y+4	; 0x04
    15a6:	24 0f       	add	r18, r20
    15a8:	31 1d       	adc	r19, r1
    15aa:	82 17       	cp	r24, r18
    15ac:	93 07       	cpc	r25, r19
    15ae:	09 f0       	breq	.+2      	; 0x15b2 <getPacketFromBig+0x56>
    15b0:	15 c1       	rjmp	.+554    	; 0x17dc <getPacketFromBig+0x280>
    15b2:	89 81       	ldd	r24, Y+1	; 0x01
    15b4:	80 93 f8 38 	sts	0x38F8, r24	; 0x8038f8 <g_rcvdCmd>
    15b8:	00 ec       	ldi	r16, 0xC0	; 192
    15ba:	18 e3       	ldi	r17, 0x38	; 56
    15bc:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <g_motionMinTotal>
    15c0:	f8 01       	movw	r30, r16
    15c2:	81 87       	std	Z+9, r24	; 0x09
    15c4:	ea 81       	ldd	r30, Y+2	; 0x02
    15c6:	f0 e0       	ldi	r31, 0x00	; 0
    15c8:	e4 52       	subi	r30, 0x24	; 36
    15ca:	f7 4c       	sbci	r31, 0xC7	; 199
    15cc:	80 81       	ld	r24, Z
    15ce:	f8 01       	movw	r30, r16
    15d0:	80 8f       	std	Z+24, r24	; 0x18
    15d2:	43 98       	cbi	0x08, 3	; 8
    15d4:	6a e1       	ldi	r22, 0x1A	; 26
    15d6:	c8 01       	movw	r24, r16
    15d8:	0e 94 b6 08 	call	0x116c	; 0x116c <calcCRC>
    15dc:	f8 01       	movw	r30, r16
    15de:	92 8f       	std	Z+26, r25	; 0x1a
    15e0:	83 8f       	std	Z+27, r24	; 0x1b
    15e2:	80 81       	ld	r24, Z
    15e4:	88 23       	and	r24, r24
    15e6:	14 f0       	brlt	.+4      	; 0x15ec <getPacketFromBig+0x90>
    15e8:	28 98       	cbi	0x05, 0	; 5
    15ea:	23 c1       	rjmp	.+582    	; 0x1832 <getPacketFromBig+0x2d6>
    15ec:	28 9a       	sbi	0x05, 0	; 5
    15ee:	21 c1       	rjmp	.+578    	; 0x1832 <getPacketFromBig+0x2d6>
    15f0:	8f e2       	ldi	r24, 0x2F	; 47
    15f2:	95 e7       	ldi	r25, 0x75	; 117
    15f4:	53 9b       	sbis	0x0a, 3	; 10
    15f6:	1f c1       	rjmp	.+574    	; 0x1836 <getPacketFromBig+0x2da>
    15f8:	01 97       	sbiw	r24, 0x01	; 1
    15fa:	e1 f7       	brne	.-8      	; 0x15f4 <getPacketFromBig+0x98>
    15fc:	1c c1       	rjmp	.+568    	; 0x1836 <getPacketFromBig+0x2da>
    15fe:	f8 01       	movw	r30, r16
    1600:	81 91       	ld	r24, Z+
    1602:	8f 01       	movw	r16, r30
    1604:	0e 94 9f 09 	call	0x133e	; 0x133e <sendByteToBig>
    1608:	0c 15       	cp	r16, r12
    160a:	1d 05       	cpc	r17, r13
    160c:	c1 f7       	brne	.-16     	; 0x15fe <getPacketFromBig+0xa2>
    160e:	20 98       	cbi	0x04, 0	; 4
    1610:	30 9b       	sbis	0x06, 0	; 6
    1612:	0b c0       	rjmp	.+22     	; 0x162a <getPacketFromBig+0xce>
    1614:	18 ec       	ldi	r17, 0xC8	; 200
    1616:	02 c0       	rjmp	.+4      	; 0x161c <getPacketFromBig+0xc0>
    1618:	30 9b       	sbis	0x06, 0	; 6
    161a:	08 c0       	rjmp	.+16     	; 0x162c <getPacketFromBig+0xd0>
	...
    1624:	11 50       	subi	r17, 0x01	; 1
    1626:	c1 f7       	brne	.-16     	; 0x1618 <getPacketFromBig+0xbc>
    1628:	01 c0       	rjmp	.+2      	; 0x162c <getPacketFromBig+0xd0>
    162a:	18 ec       	ldi	r17, 0xC8	; 200
    162c:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
    1630:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
    1634:	8a e0       	ldi	r24, 0x0A	; 10
    1636:	8a 87       	std	Y+10, r24	; 0x0a
    1638:	8d e0       	ldi	r24, 0x0D	; 13
    163a:	8b 87       	std	Y+11, r24	; 0x0b
    163c:	62 e0       	ldi	r22, 0x02	; 2
    163e:	ce 01       	movw	r24, r28
    1640:	0a 96       	adiw	r24, 0x0a	; 10
    1642:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    1646:	0f 2e       	mov	r0, r31
    1648:	f0 ec       	ldi	r31, 0xC0	; 192
    164a:	cf 2e       	mov	r12, r31
    164c:	f8 e3       	ldi	r31, 0x38	; 56
    164e:	df 2e       	mov	r13, r31
    1650:	f0 2d       	mov	r31, r0
    1652:	f6 01       	movw	r30, r12
    1654:	81 81       	ldd	r24, Z+1	; 0x01
    1656:	62 e0       	ldi	r22, 0x02	; 2
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    165e:	f6 01       	movw	r30, r12
    1660:	82 81       	ldd	r24, Z+2	; 0x02
    1662:	62 e0       	ldi	r22, 0x02	; 2
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    166a:	f6 01       	movw	r30, r12
    166c:	83 81       	ldd	r24, Z+3	; 0x03
    166e:	62 e0       	ldi	r22, 0x02	; 2
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1676:	f6 01       	movw	r30, r12
    1678:	84 81       	ldd	r24, Z+4	; 0x04
    167a:	62 e0       	ldi	r22, 0x02	; 2
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1682:	f6 01       	movw	r30, r12
    1684:	85 81       	ldd	r24, Z+5	; 0x05
    1686:	62 e0       	ldi	r22, 0x02	; 2
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    168e:	f6 01       	movw	r30, r12
    1690:	86 81       	ldd	r24, Z+6	; 0x06
    1692:	62 e0       	ldi	r22, 0x02	; 2
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    169a:	f6 01       	movw	r30, r12
    169c:	87 81       	ldd	r24, Z+7	; 0x07
    169e:	62 e0       	ldi	r22, 0x02	; 2
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    16a6:	f6 01       	movw	r30, r12
    16a8:	80 85       	ldd	r24, Z+8	; 0x08
    16aa:	62 e0       	ldi	r22, 0x02	; 2
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    16b2:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    16b6:	f6 01       	movw	r30, r12
    16b8:	81 85       	ldd	r24, Z+9	; 0x09
    16ba:	62 e0       	ldi	r22, 0x02	; 2
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    16c2:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    16c6:	f6 01       	movw	r30, r12
    16c8:	82 85       	ldd	r24, Z+10	; 0x0a
    16ca:	62 e0       	ldi	r22, 0x02	; 2
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    16d2:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    16d6:	f6 01       	movw	r30, r12
    16d8:	83 85       	ldd	r24, Z+11	; 0x0b
    16da:	62 e0       	ldi	r22, 0x02	; 2
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    16e2:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    16e6:	f6 01       	movw	r30, r12
    16e8:	84 85       	ldd	r24, Z+12	; 0x0c
    16ea:	62 e0       	ldi	r22, 0x02	; 2
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    16f2:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    16f6:	f6 01       	movw	r30, r12
    16f8:	85 85       	ldd	r24, Z+13	; 0x0d
    16fa:	62 e0       	ldi	r22, 0x02	; 2
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1702:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1706:	f6 01       	movw	r30, r12
    1708:	86 85       	ldd	r24, Z+14	; 0x0e
    170a:	62 e0       	ldi	r22, 0x02	; 2
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1712:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1716:	f6 01       	movw	r30, r12
    1718:	87 85       	ldd	r24, Z+15	; 0x0f
    171a:	62 e0       	ldi	r22, 0x02	; 2
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1722:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1726:	f6 01       	movw	r30, r12
    1728:	80 89       	ldd	r24, Z+16	; 0x10
    172a:	62 e0       	ldi	r22, 0x02	; 2
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1732:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1736:	f6 01       	movw	r30, r12
    1738:	81 89       	ldd	r24, Z+17	; 0x11
    173a:	62 e0       	ldi	r22, 0x02	; 2
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1742:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1746:	f6 01       	movw	r30, r12
    1748:	82 89       	ldd	r24, Z+18	; 0x12
    174a:	62 e0       	ldi	r22, 0x02	; 2
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1752:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1756:	f6 01       	movw	r30, r12
    1758:	83 89       	ldd	r24, Z+19	; 0x13
    175a:	62 e0       	ldi	r22, 0x02	; 2
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1762:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1766:	f6 01       	movw	r30, r12
    1768:	84 89       	ldd	r24, Z+20	; 0x14
    176a:	62 e0       	ldi	r22, 0x02	; 2
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1772:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1776:	f6 01       	movw	r30, r12
    1778:	85 89       	ldd	r24, Z+21	; 0x15
    177a:	62 e0       	ldi	r22, 0x02	; 2
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1782:	0e 94 95 03 	call	0x72a	; 0x72a <LCDspace>
    1786:	f6 01       	movw	r30, r12
    1788:	86 89       	ldd	r24, Z+22	; 0x16
    178a:	62 e0       	ldi	r22, 0x02	; 2
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1792:	62 e0       	ldi	r22, 0x02	; 2
    1794:	ce 01       	movw	r24, r28
    1796:	0a 96       	adiw	r24, 0x0a	; 10
    1798:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    179c:	a8 95       	wdr
    179e:	62 e3       	ldi	r22, 0x32	; 50
    17a0:	70 e0       	ldi	r23, 0x00	; 0
    17a2:	80 e0       	ldi	r24, 0x00	; 0
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    17aa:	11 23       	and	r17, r17
    17ac:	d1 f1       	breq	.+116    	; 0x1822 <getPacketFromBig+0x2c6>
    17ae:	8a e0       	ldi	r24, 0x0A	; 10
    17b0:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <g_durIndex>
    17b4:	81 e0       	ldi	r24, 0x01	; 1
    17b6:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_motionPatternIndex>
    17ba:	10 92 06 38 	sts	0x3806, r1	; 0x803806 <g_motSecCtr>
    17be:	10 92 04 38 	sts	0x3804, r1	; 0x803804 <g_motionMinTotal>
    17c2:	86 ed       	ldi	r24, 0xD6	; 214
    17c4:	98 e3       	ldi	r25, 0x38	; 56
    17c6:	f7 01       	movw	r30, r14
    17c8:	11 92       	st	Z+, r1
    17ca:	7f 01       	movw	r14, r30
    17cc:	e8 17       	cp	r30, r24
    17ce:	f9 07       	cpc	r31, r25
    17d0:	d1 f7       	brne	.-12     	; 0x17c6 <getPacketFromBig+0x26a>
    17d2:	e0 ec       	ldi	r30, 0xC0	; 192
    17d4:	f8 e3       	ldi	r31, 0x38	; 56
    17d6:	16 8a       	std	Z+22, r1	; 0x16
    17d8:	17 8a       	std	Z+23, r1	; 0x17
    17da:	23 c0       	rjmp	.+70     	; 0x1822 <getPacketFromBig+0x2c6>
    17dc:	8a e0       	ldi	r24, 0x0A	; 10
    17de:	8a 87       	std	Y+10, r24	; 0x0a
    17e0:	8d e0       	ldi	r24, 0x0D	; 13
    17e2:	8b 87       	std	Y+11, r24	; 0x0b
    17e4:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
    17e8:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
    17ec:	62 e0       	ldi	r22, 0x02	; 2
    17ee:	ce 01       	movw	r24, r28
    17f0:	0a 96       	adiw	r24, 0x0a	; 10
    17f2:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    17f6:	63 e0       	ldi	r22, 0x03	; 3
    17f8:	8f ee       	ldi	r24, 0xEF	; 239
    17fa:	93 ea       	ldi	r25, 0xA3	; 163
    17fc:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    1800:	62 e0       	ldi	r22, 0x02	; 2
    1802:	ce 01       	movw	r24, r28
    1804:	0a 96       	adiw	r24, 0x0a	; 10
    1806:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    180a:	68 e0       	ldi	r22, 0x08	; 8
    180c:	83 ef       	ldi	r24, 0xF3	; 243
    180e:	93 ea       	ldi	r25, 0xA3	; 163
    1810:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    1814:	a8 95       	wdr
    1816:	62 e3       	ldi	r22, 0x32	; 50
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	80 e0       	ldi	r24, 0x00	; 0
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    1822:	e0 e4       	ldi	r30, 0x40	; 64
    1824:	f4 e0       	ldi	r31, 0x04	; 4
    1826:	81 85       	ldd	r24, Z+9	; 0x09
    1828:	82 60       	ori	r24, 0x02	; 2
    182a:	81 87       	std	Z+9, r24	; 0x09
    182c:	78 94       	sei
    182e:	89 81       	ldd	r24, Y+1	; 0x01
    1830:	10 c0       	rjmp	.+32     	; 0x1852 <getPacketFromBig+0x2f6>
    1832:	53 99       	sbic	0x0a, 3	; 10
    1834:	dd ce       	rjmp	.-582    	; 0x15f0 <getPacketFromBig+0x94>
    1836:	0f 2e       	mov	r0, r31
    1838:	f0 ec       	ldi	r31, 0xC0	; 192
    183a:	ef 2e       	mov	r14, r31
    183c:	f8 e3       	ldi	r31, 0x38	; 56
    183e:	ff 2e       	mov	r15, r31
    1840:	f0 2d       	mov	r31, r0
    1842:	0f 2e       	mov	r0, r31
    1844:	fc ed       	ldi	r31, 0xDC	; 220
    1846:	cf 2e       	mov	r12, r31
    1848:	f8 e3       	ldi	r31, 0x38	; 56
    184a:	df 2e       	mov	r13, r31
    184c:	f0 2d       	mov	r31, r0
    184e:	87 01       	movw	r16, r14
    1850:	d6 ce       	rjmp	.-596    	; 0x15fe <getPacketFromBig+0xa2>
    1852:	2b 96       	adiw	r28, 0x0b	; 11
    1854:	cd bf       	out	0x3d, r28	; 61
    1856:	de bf       	out	0x3e, r29	; 62
    1858:	df 91       	pop	r29
    185a:	cf 91       	pop	r28
    185c:	1f 91       	pop	r17
    185e:	0f 91       	pop	r16
    1860:	ff 90       	pop	r15
    1862:	ef 90       	pop	r14
    1864:	df 90       	pop	r13
    1866:	cf 90       	pop	r12
    1868:	08 95       	ret

0000186a <USART0_ON>:
    186a:	23 98       	cbi	0x04, 3	; 4
    186c:	e3 e3       	ldi	r30, 0x33	; 51
    186e:	f4 e0       	ldi	r31, 0x04	; 4
    1870:	90 81       	ld	r25, Z
    1872:	97 7f       	andi	r25, 0xF7	; 247
    1874:	90 83       	st	Z, r25
    1876:	2a 9a       	sbi	0x05, 2	; 5
    1878:	22 9a       	sbi	0x04, 2	; 4
    187a:	2c e6       	ldi	r18, 0x6C	; 108
    187c:	35 e0       	ldi	r19, 0x05	; 5
    187e:	20 93 08 08 	sts	0x0808, r18	; 0x800808 <__TEXT_REGION_LENGTH__+0x700808>
    1882:	30 93 09 08 	sts	0x0809, r19	; 0x800809 <__TEXT_REGION_LENGTH__+0x700809>
    1886:	88 23       	and	r24, r24
    1888:	21 f0       	breq	.+8      	; 0x1892 <USART0_ON+0x28>
    188a:	80 ec       	ldi	r24, 0xC0	; 192
    188c:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    1890:	10 c0       	rjmp	.+32     	; 0x18b2 <USART0_ON+0x48>
    1892:	23 98       	cbi	0x04, 3	; 4
    1894:	e3 e3       	ldi	r30, 0x33	; 51
    1896:	f4 e0       	ldi	r31, 0x04	; 4
    1898:	80 81       	ld	r24, Z
    189a:	87 7f       	andi	r24, 0xF7	; 247
    189c:	80 83       	st	Z, r24
    189e:	2a 9a       	sbi	0x05, 2	; 5
    18a0:	22 9a       	sbi	0x04, 2	; 4
    18a2:	e0 e0       	ldi	r30, 0x00	; 0
    18a4:	f8 e0       	ldi	r31, 0x08	; 8
    18a6:	8c e6       	ldi	r24, 0x6C	; 108
    18a8:	95 e0       	ldi	r25, 0x05	; 5
    18aa:	80 87       	std	Z+8, r24	; 0x08
    18ac:	91 87       	std	Z+9, r25	; 0x09
    18ae:	80 e4       	ldi	r24, 0x40	; 64
    18b0:	86 83       	std	Z+6, r24	; 0x06
    18b2:	e0 e0       	ldi	r30, 0x00	; 0
    18b4:	f8 e0       	ldi	r31, 0x08	; 8
    18b6:	81 81       	ldd	r24, Z+1	; 0x01
    18b8:	80 81       	ld	r24, Z
    18ba:	08 95       	ret

000018bc <openGPSuBlox>:
    18bc:	04 98       	cbi	0x00, 4	; 0
    18be:	e4 e1       	ldi	r30, 0x14	; 20
    18c0:	f4 e0       	ldi	r31, 0x04	; 4
    18c2:	80 81       	ld	r24, Z
    18c4:	88 60       	ori	r24, 0x08	; 8
    18c6:	80 83       	st	Z, r24
    18c8:	45 9a       	sbi	0x08, 5	; 8
    18ca:	4d 9a       	sbi	0x09, 5	; 9
    18cc:	8a e0       	ldi	r24, 0x0A	; 10
    18ce:	98 e3       	ldi	r25, 0x38	; 56
    18d0:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
    18d4:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
    18d8:	81 e0       	ldi	r24, 0x01	; 1
    18da:	0e 94 35 0c 	call	0x186a	; 0x186a <USART0_ON>
    18de:	08 95       	ret

000018e0 <USART0_OFF>:
    18e0:	10 92 06 08 	sts	0x0806, r1	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    18e4:	23 9a       	sbi	0x04, 3	; 4
    18e6:	22 9a       	sbi	0x04, 2	; 4
    18e8:	2a 98       	cbi	0x05, 2	; 5
    18ea:	2b 98       	cbi	0x05, 3	; 5
    18ec:	08 95       	ret

000018ee <closeGPS>:
    18ee:	45 9a       	sbi	0x08, 5	; 8
    18f0:	4d 98       	cbi	0x09, 5	; 9
    18f2:	e4 e1       	ldi	r30, 0x14	; 20
    18f4:	f4 e0       	ldi	r31, 0x04	; 4
    18f6:	80 81       	ld	r24, Z
    18f8:	87 7f       	andi	r24, 0xF7	; 247
    18fa:	80 83       	st	Z, r24
    18fc:	04 9a       	sbi	0x00, 4	; 0
    18fe:	0c 98       	cbi	0x01, 4	; 1
    1900:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <USART0_OFF>
    1904:	08 95       	ret

00001906 <gTryUblox>:
    1906:	bf 92       	push	r11
    1908:	cf 92       	push	r12
    190a:	df 92       	push	r13
    190c:	ef 92       	push	r14
    190e:	ff 92       	push	r15
    1910:	0f 93       	push	r16
    1912:	1f 93       	push	r17
    1914:	cf 93       	push	r28
    1916:	df 93       	push	r29
    1918:	68 94       	set
    191a:	bb 24       	eor	r11, r11
    191c:	b3 f8       	bld	r11, 3
    191e:	00 e0       	ldi	r16, 0x00	; 0
    1920:	18 e0       	ldi	r17, 0x08	; 8
    1922:	c6 e3       	ldi	r28, 0x36	; 54
    1924:	d4 e0       	ldi	r29, 0x04	; 4
    1926:	0f 2e       	mov	r0, r31
    1928:	f9 ef       	ldi	r31, 0xF9	; 249
    192a:	ef 2e       	mov	r14, r31
    192c:	f0 2d       	mov	r31, r0
    192e:	0f 2e       	mov	r0, r31
    1930:	f3 e0       	ldi	r31, 0x03	; 3
    1932:	ff 2e       	mov	r15, r31
    1934:	f0 2d       	mov	r31, r0
    1936:	a8 95       	wdr
    1938:	6a ef       	ldi	r22, 0xFA	; 250
    193a:	70 e0       	ldi	r23, 0x00	; 0
    193c:	80 e0       	ldi	r24, 0x00	; 0
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    1944:	0e 94 a1 03 	call	0x742	; 0x742 <clrRx>
    1948:	f8 01       	movw	r30, r16
    194a:	85 81       	ldd	r24, Z+5	; 0x05
    194c:	80 68       	ori	r24, 0x80	; 128
    194e:	85 83       	std	Z+5, r24	; 0x05
    1950:	78 94       	sei
    1952:	0e 94 4f 05 	call	0xa9e	; 0xa9e <gpsReqStatusUblox>
    1956:	6c 01       	movw	r12, r24
    1958:	88 81       	ld	r24, Y
    195a:	88 7f       	andi	r24, 0xF8	; 248
    195c:	82 60       	ori	r24, 0x02	; 2
    195e:	88 83       	st	Y, r24
    1960:	fa 94       	dec	r15
    1962:	ff 20       	and	r15, r15
    1964:	31 f0       	breq	.+12     	; 0x1972 <gTryUblox+0x6c>
    1966:	fa e9       	ldi	r31, 0x9A	; 154
    1968:	cf 16       	cp	r12, r31
    196a:	f2 e0       	ldi	r31, 0x02	; 2
    196c:	df 06       	cpc	r13, r31
    196e:	19 f3       	breq	.-58     	; 0x1936 <gTryUblox+0x30>
    1970:	1f c0       	rjmp	.+62     	; 0x19b0 <gTryUblox+0xaa>
    1972:	ea 94       	dec	r14
    1974:	ee 20       	and	r14, r14
    1976:	31 f0       	breq	.+12     	; 0x1984 <gTryUblox+0x7e>
    1978:	8a e9       	ldi	r24, 0x9A	; 154
    197a:	c8 16       	cp	r12, r24
    197c:	82 e0       	ldi	r24, 0x02	; 2
    197e:	d8 06       	cpc	r13, r24
    1980:	b1 f2       	breq	.-84     	; 0x192e <gTryUblox+0x28>
    1982:	19 c0       	rjmp	.+50     	; 0x19b6 <gTryUblox+0xb0>
    1984:	0e 94 77 0c 	call	0x18ee	; 0x18ee <closeGPS>
    1988:	68 ee       	ldi	r22, 0xE8	; 232
    198a:	73 e0       	ldi	r23, 0x03	; 3
    198c:	80 e0       	ldi	r24, 0x00	; 0
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    1994:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <openGPSuBlox>
    1998:	0e 94 8e 02 	call	0x51c	; 0x51c <initGPSuBlox>
    199c:	ba 94       	dec	r11
    199e:	bb 20       	and	r11, r11
    19a0:	51 f0       	breq	.+20     	; 0x19b6 <gTryUblox+0xb0>
    19a2:	ea e9       	ldi	r30, 0x9A	; 154
    19a4:	ce 16       	cp	r12, r30
    19a6:	e2 e0       	ldi	r30, 0x02	; 2
    19a8:	de 06       	cpc	r13, r30
    19aa:	09 f4       	brne	.+2      	; 0x19ae <gTryUblox+0xa8>
    19ac:	bc cf       	rjmp	.-136    	; 0x1926 <gTryUblox+0x20>
    19ae:	03 c0       	rjmp	.+6      	; 0x19b6 <gTryUblox+0xb0>
    19b0:	f1 e0       	ldi	r31, 0x01	; 1
    19b2:	ef 16       	cp	r14, r31
    19b4:	39 f3       	breq	.-50     	; 0x1984 <gTryUblox+0x7e>
    19b6:	c6 01       	movw	r24, r12
    19b8:	df 91       	pop	r29
    19ba:	cf 91       	pop	r28
    19bc:	1f 91       	pop	r17
    19be:	0f 91       	pop	r16
    19c0:	ff 90       	pop	r15
    19c2:	ef 90       	pop	r14
    19c4:	df 90       	pop	r13
    19c6:	cf 90       	pop	r12
    19c8:	bf 90       	pop	r11
    19ca:	08 95       	ret

000019cc <sleepPins>:
    19cc:	cf 93       	push	r28
    19ce:	df 93       	push	r29
    19d0:	00 98       	cbi	0x00, 0	; 0
    19d2:	e0 e1       	ldi	r30, 0x10	; 16
    19d4:	f4 e0       	ldi	r31, 0x04	; 4
    19d6:	90 81       	ld	r25, Z
    19d8:	98 60       	ori	r25, 0x08	; 8
    19da:	90 83       	st	Z, r25
    19dc:	01 98       	cbi	0x00, 1	; 0
    19de:	e1 e1       	ldi	r30, 0x11	; 17
    19e0:	f4 e0       	ldi	r31, 0x04	; 4
    19e2:	90 81       	ld	r25, Z
    19e4:	98 60       	ori	r25, 0x08	; 8
    19e6:	90 83       	st	Z, r25
    19e8:	03 98       	cbi	0x00, 3	; 0
    19ea:	e3 e1       	ldi	r30, 0x13	; 19
    19ec:	f4 e0       	ldi	r31, 0x04	; 4
    19ee:	90 81       	ld	r25, Z
    19f0:	98 60       	ori	r25, 0x08	; 8
    19f2:	90 83       	st	Z, r25
    19f4:	e4 e1       	ldi	r30, 0x14	; 20
    19f6:	f4 e0       	ldi	r31, 0x04	; 4
    19f8:	90 81       	ld	r25, Z
    19fa:	97 7f       	andi	r25, 0xF7	; 247
    19fc:	90 83       	st	Z, r25
    19fe:	04 9a       	sbi	0x00, 4	; 0
    1a00:	0c 98       	cbi	0x01, 4	; 1
    1a02:	05 98       	cbi	0x00, 5	; 0
    1a04:	e5 e1       	ldi	r30, 0x15	; 21
    1a06:	f4 e0       	ldi	r31, 0x04	; 4
    1a08:	90 81       	ld	r25, Z
    1a0a:	98 60       	ori	r25, 0x08	; 8
    1a0c:	90 83       	st	Z, r25
    1a0e:	06 98       	cbi	0x00, 6	; 0
    1a10:	e6 e1       	ldi	r30, 0x16	; 22
    1a12:	f4 e0       	ldi	r31, 0x04	; 4
    1a14:	90 81       	ld	r25, Z
    1a16:	98 60       	ori	r25, 0x08	; 8
    1a18:	90 83       	st	Z, r25
    1a1a:	07 98       	cbi	0x00, 7	; 0
    1a1c:	e7 e1       	ldi	r30, 0x17	; 23
    1a1e:	f4 e0       	ldi	r31, 0x04	; 4
    1a20:	90 81       	ld	r25, Z
    1a22:	98 60       	ori	r25, 0x08	; 8
    1a24:	90 83       	st	Z, r25
    1a26:	20 98       	cbi	0x04, 0	; 4
    1a28:	e0 e3       	ldi	r30, 0x30	; 48
    1a2a:	f4 e0       	ldi	r31, 0x04	; 4
    1a2c:	90 81       	ld	r25, Z
    1a2e:	97 7f       	andi	r25, 0xF7	; 247
    1a30:	90 83       	st	Z, r25
    1a32:	21 98       	cbi	0x04, 1	; 4
    1a34:	e1 e3       	ldi	r30, 0x31	; 49
    1a36:	f4 e0       	ldi	r31, 0x04	; 4
    1a38:	90 81       	ld	r25, Z
    1a3a:	98 60       	ori	r25, 0x08	; 8
    1a3c:	90 83       	st	Z, r25
    1a3e:	22 98       	cbi	0x04, 2	; 4
    1a40:	e2 e3       	ldi	r30, 0x32	; 50
    1a42:	f4 e0       	ldi	r31, 0x04	; 4
    1a44:	90 81       	ld	r25, Z
    1a46:	97 7f       	andi	r25, 0xF7	; 247
    1a48:	90 83       	st	Z, r25
    1a4a:	23 98       	cbi	0x04, 3	; 4
    1a4c:	e3 e3       	ldi	r30, 0x33	; 51
    1a4e:	f4 e0       	ldi	r31, 0x04	; 4
    1a50:	90 81       	ld	r25, Z
    1a52:	97 7f       	andi	r25, 0xF7	; 247
    1a54:	90 83       	st	Z, r25
    1a56:	24 98       	cbi	0x04, 4	; 4
    1a58:	e4 e3       	ldi	r30, 0x34	; 52
    1a5a:	f4 e0       	ldi	r31, 0x04	; 4
    1a5c:	90 81       	ld	r25, Z
    1a5e:	98 60       	ori	r25, 0x08	; 8
    1a60:	90 83       	st	Z, r25
    1a62:	25 98       	cbi	0x04, 5	; 4
    1a64:	e5 e3       	ldi	r30, 0x35	; 53
    1a66:	f4 e0       	ldi	r31, 0x04	; 4
    1a68:	90 81       	ld	r25, Z
    1a6a:	98 60       	ori	r25, 0x08	; 8
    1a6c:	90 83       	st	Z, r25
    1a6e:	26 98       	cbi	0x04, 6	; 4
    1a70:	e6 e3       	ldi	r30, 0x36	; 54
    1a72:	f4 e0       	ldi	r31, 0x04	; 4
    1a74:	90 81       	ld	r25, Z
    1a76:	97 7f       	andi	r25, 0xF7	; 247
    1a78:	90 83       	st	Z, r25
    1a7a:	27 98       	cbi	0x04, 7	; 4
    1a7c:	e7 e3       	ldi	r30, 0x37	; 55
    1a7e:	f4 e0       	ldi	r31, 0x04	; 4
    1a80:	90 81       	ld	r25, Z
    1a82:	98 60       	ori	r25, 0x08	; 8
    1a84:	90 83       	st	Z, r25
    1a86:	40 98       	cbi	0x08, 0	; 8
    1a88:	e0 e5       	ldi	r30, 0x50	; 80
    1a8a:	f4 e0       	ldi	r31, 0x04	; 4
    1a8c:	90 81       	ld	r25, Z
    1a8e:	98 60       	ori	r25, 0x08	; 8
    1a90:	90 83       	st	Z, r25
    1a92:	41 98       	cbi	0x08, 1	; 8
    1a94:	e1 e5       	ldi	r30, 0x51	; 81
    1a96:	f4 e0       	ldi	r31, 0x04	; 4
    1a98:	90 81       	ld	r25, Z
    1a9a:	98 60       	ori	r25, 0x08	; 8
    1a9c:	90 83       	st	Z, r25
    1a9e:	88 23       	and	r24, r24
    1aa0:	29 f0       	breq	.+10     	; 0x1aac <sleepPins+0xe0>
    1aa2:	80 81       	ld	r24, Z
    1aa4:	88 7f       	andi	r24, 0xF8	; 248
    1aa6:	85 60       	ori	r24, 0x05	; 5
    1aa8:	80 83       	st	Z, r24
    1aaa:	05 c0       	rjmp	.+10     	; 0x1ab6 <sleepPins+0xea>
    1aac:	e1 e5       	ldi	r30, 0x51	; 81
    1aae:	f4 e0       	ldi	r31, 0x04	; 4
    1ab0:	80 81       	ld	r24, Z
    1ab2:	88 7f       	andi	r24, 0xF8	; 248
    1ab4:	80 83       	st	Z, r24
    1ab6:	42 98       	cbi	0x08, 2	; 8
    1ab8:	e2 e5       	ldi	r30, 0x52	; 82
    1aba:	f4 e0       	ldi	r31, 0x04	; 4
    1abc:	80 81       	ld	r24, Z
    1abe:	88 60       	ori	r24, 0x08	; 8
    1ac0:	80 83       	st	Z, r24
    1ac2:	43 98       	cbi	0x08, 3	; 8
    1ac4:	e3 e5       	ldi	r30, 0x53	; 83
    1ac6:	f4 e0       	ldi	r31, 0x04	; 4
    1ac8:	80 81       	ld	r24, Z
    1aca:	87 7f       	andi	r24, 0xF7	; 247
    1acc:	80 83       	st	Z, r24
    1ace:	44 98       	cbi	0x08, 4	; 8
    1ad0:	e4 e5       	ldi	r30, 0x54	; 84
    1ad2:	f4 e0       	ldi	r31, 0x04	; 4
    1ad4:	80 81       	ld	r24, Z
    1ad6:	88 60       	ori	r24, 0x08	; 8
    1ad8:	80 83       	st	Z, r24
    1ada:	c5 e5       	ldi	r28, 0x55	; 85
    1adc:	d4 e0       	ldi	r29, 0x04	; 4
    1ade:	88 81       	ld	r24, Y
    1ae0:	87 7f       	andi	r24, 0xF7	; 247
    1ae2:	88 83       	st	Y, r24
    1ae4:	45 9a       	sbi	0x08, 5	; 8
    1ae6:	4d 98       	cbi	0x09, 5	; 9
    1ae8:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
    1aec:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1af0:	0e 94 77 0c 	call	0x18ee	; 0x18ee <closeGPS>
    1af4:	88 81       	ld	r24, Y
    1af6:	88 60       	ori	r24, 0x08	; 8
    1af8:	88 83       	st	Y, r24
    1afa:	df 91       	pop	r29
    1afc:	cf 91       	pop	r28
    1afe:	08 95       	ret

00001b00 <getGPS>:
    1b00:	0f 93       	push	r16
    1b02:	1f 93       	push	r17
    1b04:	cf 93       	push	r28
    1b06:	df 93       	push	r29
    1b08:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <openGPSuBlox>
    1b0c:	0e 94 8e 02 	call	0x51c	; 0x51c <initGPSuBlox>
    1b10:	0e 94 8e 02 	call	0x51c	; 0x51c <initGPSuBlox>
    1b14:	0e 94 8e 02 	call	0x51c	; 0x51c <initGPSuBlox>
    1b18:	10 92 f5 38 	sts	0x38F5, r1	; 0x8038f5 <timeToFix>
    1b1c:	10 92 f6 38 	sts	0x38F6, r1	; 0x8038f6 <timeToFix+0x1>
    1b20:	10 92 eb 38 	sts	0x38EB, r1	; 0x8038eb <gpsParams+0xf>
    1b24:	0e 94 83 0c 	call	0x1906	; 0x1906 <gTryUblox>
    1b28:	8c 01       	movw	r16, r24
    1b2a:	89 2b       	or	r24, r25
    1b2c:	59 f0       	breq	.+22     	; 0x1b44 <getGPS+0x44>
    1b2e:	0e 94 77 0c 	call	0x18ee	; 0x18ee <closeGPS>
    1b32:	0a e9       	ldi	r16, 0x9A	; 154
    1b34:	12 e0       	ldi	r17, 0x02	; 2
    1b36:	4e c0       	rjmp	.+156    	; 0x1bd4 <getGPS+0xd4>
    1b38:	c1 50       	subi	r28, 0x01	; 1
    1b3a:	29 f4       	brne	.+10     	; 0x1b46 <getGPS+0x46>
    1b3c:	0f c0       	rjmp	.+30     	; 0x1b5c <getGPS+0x5c>
    1b3e:	c1 11       	cpse	r28, r1
    1b40:	09 c0       	rjmp	.+18     	; 0x1b54 <getGPS+0x54>
    1b42:	0c c0       	rjmp	.+24     	; 0x1b5c <getGPS+0x5c>
    1b44:	cf e0       	ldi	r28, 0x0F	; 15
    1b46:	0e 94 1c 05 	call	0xa38	; 0xa38 <GPSgetDate>
    1b4a:	89 2b       	or	r24, r25
    1b4c:	a9 f7       	brne	.-22     	; 0x1b38 <getGPS+0x38>
    1b4e:	f7 cf       	rjmp	.-18     	; 0x1b3e <getGPS+0x3e>
    1b50:	c1 50       	subi	r28, 0x01	; 1
    1b52:	21 f0       	breq	.+8      	; 0x1b5c <getGPS+0x5c>
    1b54:	0e 94 60 08 	call	0x10c0	; 0x10c0 <GPSgetTime>
    1b58:	89 2b       	or	r24, r25
    1b5a:	d1 f7       	brne	.-12     	; 0x1b50 <getGPS+0x50>
    1b5c:	6a e0       	ldi	r22, 0x0A	; 10
    1b5e:	8c ef       	ldi	r24, 0xFC	; 252
    1b60:	93 ea       	ldi	r25, 0xA3	; 163
    1b62:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    1b66:	f8 94       	cli
    1b68:	c0 e0       	ldi	r28, 0x00	; 0
    1b6a:	a8 95       	wdr
    1b6c:	cf 5f       	subi	r28, 0xFF	; 255
    1b6e:	40 9a       	sbi	0x08, 0	; 8
    1b70:	48 98       	cbi	0x09, 0	; 9
    1b72:	8c ed       	ldi	r24, 0xDC	; 220
    1b74:	98 e3       	ldi	r25, 0x38	; 56
    1b76:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <send25BytesToBig>
    1b7a:	0e 94 fe 08 	call	0x11fc	; 0x11fc <getByteFromBig>
    1b7e:	d8 2f       	mov	r29, r24
    1b80:	6a e0       	ldi	r22, 0x0A	; 10
    1b82:	87 e0       	ldi	r24, 0x07	; 7
    1b84:	94 ea       	ldi	r25, 0xA4	; 164
    1b86:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    1b8a:	62 e0       	ldi	r22, 0x02	; 2
    1b8c:	8d 2f       	mov	r24, r29
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	0e 94 2f 03 	call	0x65e	; 0x65e <LCDshort>
    1b94:	6c 2f       	mov	r22, r28
    1b96:	62 95       	swap	r22
    1b98:	66 95       	lsr	r22
    1b9a:	66 95       	lsr	r22
    1b9c:	63 70       	andi	r22, 0x03	; 3
    1b9e:	70 e0       	ldi	r23, 0x00	; 0
    1ba0:	80 e0       	ldi	r24, 0x00	; 0
    1ba2:	90 e0       	ldi	r25, 0x00	; 0
    1ba4:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    1ba8:	d7 34       	cpi	r29, 0x47	; 71
    1baa:	11 f0       	breq	.+4      	; 0x1bb0 <getGPS+0xb0>
    1bac:	ce 31       	cpi	r28, 0x1E	; 30
    1bae:	e9 f6       	brne	.-70     	; 0x1b6a <getGPS+0x6a>
    1bb0:	78 94       	sei
    1bb2:	a8 95       	wdr
    1bb4:	60 ed       	ldi	r22, 0xD0	; 208
    1bb6:	77 e0       	ldi	r23, 0x07	; 7
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    1bc0:	a8 95       	wdr
    1bc2:	60 ed       	ldi	r22, 0xD0	; 208
    1bc4:	77 e0       	ldi	r23, 0x07	; 7
    1bc6:	80 e0       	ldi	r24, 0x00	; 0
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
    1bce:	a8 95       	wdr
    1bd0:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <USART0_OFF>
    1bd4:	c8 01       	movw	r24, r16
    1bd6:	df 91       	pop	r29
    1bd8:	cf 91       	pop	r28
    1bda:	1f 91       	pop	r17
    1bdc:	0f 91       	pop	r16
    1bde:	08 95       	ret

00001be0 <pirSUdelay>:
    1be0:	80 e0       	ldi	r24, 0x00	; 0
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	00 00       	nop
    1be6:	01 96       	adiw	r24, 0x01	; 1
    1be8:	88 32       	cpi	r24, 0x28	; 40
    1bea:	91 05       	cpc	r25, r1
    1bec:	d9 f7       	brne	.-10     	; 0x1be4 <pirSUdelay+0x4>
    1bee:	08 95       	ret

00001bf0 <setPIRbit>:
    1bf0:	0f 93       	push	r16
    1bf2:	1f 93       	push	r17
    1bf4:	cf 93       	push	r28
    1bf6:	df 93       	push	r29
    1bf8:	c7 e0       	ldi	r28, 0x07	; 7
    1bfa:	d0 e0       	ldi	r29, 0x00	; 0
    1bfc:	08 2f       	mov	r16, r24
    1bfe:	10 e0       	ldi	r17, 0x00	; 0
    1c00:	2f 98       	cbi	0x05, 7	; 5
    1c02:	00 00       	nop
    1c04:	00 00       	nop
    1c06:	2f 9a       	sbi	0x05, 7	; 5
    1c08:	00 00       	nop
    1c0a:	00 00       	nop
    1c0c:	98 01       	movw	r18, r16
    1c0e:	0c 2e       	mov	r0, r28
    1c10:	02 c0       	rjmp	.+4      	; 0x1c16 <setPIRbit+0x26>
    1c12:	35 95       	asr	r19
    1c14:	27 95       	ror	r18
    1c16:	0a 94       	dec	r0
    1c18:	e2 f7       	brpl	.-8      	; 0x1c12 <setPIRbit+0x22>
    1c1a:	20 fd       	sbrc	r18, 0
    1c1c:	02 c0       	rjmp	.+4      	; 0x1c22 <setPIRbit+0x32>
    1c1e:	2f 98       	cbi	0x05, 7	; 5
    1c20:	01 c0       	rjmp	.+2      	; 0x1c24 <setPIRbit+0x34>
    1c22:	2f 9a       	sbi	0x05, 7	; 5
    1c24:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <pirSUdelay>
    1c28:	21 97       	sbiw	r28, 0x01	; 1
    1c2a:	50 f7       	brcc	.-44     	; 0x1c00 <setPIRbit+0x10>
    1c2c:	df 91       	pop	r29
    1c2e:	cf 91       	pop	r28
    1c30:	1f 91       	pop	r17
    1c32:	0f 91       	pop	r16
    1c34:	08 95       	ret

00001c36 <setPIRconfig>:
    1c36:	0f 93       	push	r16
    1c38:	1f 93       	push	r17
    1c3a:	cf 93       	push	r28
    1c3c:	df 93       	push	r29
    1c3e:	08 2f       	mov	r16, r24
    1c40:	16 2f       	mov	r17, r22
    1c42:	d4 2f       	mov	r29, r20
    1c44:	c2 2f       	mov	r28, r18
    1c46:	2f 98       	cbi	0x05, 7	; 5
    1c48:	27 9a       	sbi	0x04, 7	; 4
    1c4a:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <pirSUdelay>
    1c4e:	2f 9a       	sbi	0x05, 7	; 5
    1c50:	00 fd       	sbrc	r16, 0
    1c52:	02 c0       	rjmp	.+4      	; 0x1c58 <setPIRconfig+0x22>
    1c54:	2f 98       	cbi	0x05, 7	; 5
    1c56:	01 c0       	rjmp	.+2      	; 0x1c5a <setPIRconfig+0x24>
    1c58:	2f 9a       	sbi	0x05, 7	; 5
    1c5a:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <pirSUdelay>
    1c5e:	81 2f       	mov	r24, r17
    1c60:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <setPIRbit>
    1c64:	8d 2f       	mov	r24, r29
    1c66:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <setPIRbit>
    1c6a:	8c 2f       	mov	r24, r28
    1c6c:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <setPIRbit>
    1c70:	df 91       	pop	r29
    1c72:	cf 91       	pop	r28
    1c74:	1f 91       	pop	r17
    1c76:	0f 91       	pop	r16
    1c78:	08 95       	ret

00001c7a <pirENDdelay>:
	for(tickCtr=PIR_SU_DELAY;tickCtr>0;tickCtr--){NOP();}
}
/*******************************************
*    PIR RX DELAY
********************************************/
void pirENDdelay (void){
    1c7a:	80 e0       	ldi	r24, 0x00	; 0
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
	uint32_t tickCtr;
	for(tickCtr=PIR_END_DELAY;tickCtr>0;tickCtr--){NOP();}
    1c7e:	00 00       	nop
    1c80:	01 96       	adiw	r24, 0x01	; 1
    1c82:	8c 33       	cpi	r24, 0x3C	; 60
    1c84:	91 05       	cpc	r25, r1
    1c86:	d9 f7       	brne	.-10     	; 0x1c7e <pirENDdelay+0x4>
}
    1c88:	08 95       	ret

00001c8a <clearPIRinterrupt>:
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1c8a:	2e 98       	cbi	0x05, 6	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1c8c:	26 9a       	sbi	0x04, 6	; 4
*    PIR Clear Interrupt
********************************************/
void clearPIRinterrupt(){
	PORTB_set_pin_level(6, 0);
	TPB6_set_dir(PORT_DIR_OUT);
	pirENDdelay();
    1c8e:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <pirENDdelay>
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    1c92:	26 98       	cbi	0x04, 6	; 4
    1c94:	08 95       	ret

00001c96 <main>:
	char returnStr[]={0x0A,0x0D};
	int countGPStest = 0;
	int delay_ctr;
	short gotALS,gotProx;

	g_motionMinTotal=0;
    1c96:	10 92 04 38 	sts	0x3804, r1	; 0x803804 <g_motionMinTotal>
	g_rxDataIndex=0;
	g_durCtr=DURCTR_MAX;
    1c9a:	8e ef       	ldi	r24, 0xFE	; 254
    1c9c:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <_edata>
	g_numTripZeroCtr=0;
    1ca0:	10 92 08 38 	sts	0x3808, r1	; 0x803808 <g_numTripZeroCtr>
	g_numTrips=0;
	g_durIndex=DUR_INDEX;
    1ca4:	8a e0       	ldi	r24, 0x0A	; 10
    1ca6:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <g_durIndex>
    1caa:	ec ed       	ldi	r30, 0xDC	; 220
    1cac:	f8 e3       	ldi	r31, 0x38	; 56
    1cae:	85 ef       	ldi	r24, 0xF5	; 245
    1cb0:	98 e3       	ldi	r25, 0x38	; 56

	
	for (iters=0;iters<SIZEOFGPSPARAMS;iters++)gpsParams[iters]=0;
    1cb2:	11 92       	st	Z+, r1
    1cb4:	e8 17       	cp	r30, r24
    1cb6:	f9 07       	cpc	r31, r25
    1cb8:	e1 f7       	brne	.-8      	; 0x1cb2 <main+0x1c>
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    1cba:	0e 94 aa 00 	call	0x154	; 0x154 <atmel_start_init>
	CCP = 0xD8;//enable writes to WDT
    1cbe:	88 ed       	ldi	r24, 0xD8	; 216
    1cc0:	84 bf       	out	0x34, r24	; 52
	WDT.STATUS = 0x00;//
    1cc2:	e0 e0       	ldi	r30, 0x00	; 0
    1cc4:	f1 e0       	ldi	r31, 0x01	; 1
    1cc6:	11 82       	std	Z+1, r1	; 0x01
	CCP = 0xD8;//enable writes to WDT
    1cc8:	84 bf       	out	0x34, r24	; 52
	WDT.CTRLA = MY_WDT;//MY_WDT;//0=disable watchdog. 0x0B=8 seconds
    1cca:	8b e0       	ldi	r24, 0x0B	; 11
    1ccc:	80 83       	st	Z, r24

	DISABLE_INTERRUPTS();
    1cce:	f8 94       	cli
	ccp_write_io((void*)&(CLKCTRL.OSC32KCTRLA),1 << CLKCTRL_RUNSTDBY_bp /* Run standby: enabled */);
    1cd0:	62 e0       	ldi	r22, 0x02	; 2
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	88 e7       	ldi	r24, 0x78	; 120
    1cd6:	90 e0       	ldi	r25, 0x00	; 0
    1cd8:	0e 94 94 11 	call	0x2328	; 0x2328 <ccp_write_io>
#ifdef DO_DIAGS
	redBlink(11);
    1cdc:	8b e0       	ldi	r24, 0x0B	; 11
    1cde:	0e 94 4a 02 	call	0x494	; 0x494 <redBlink>
#endif	
	mState=BEGIN;
    1ce2:	10 92 fe 38 	sts	0x38FE, r1	; 0x8038fe <mState>
    1ce6:	c0 ec       	ldi	r28, 0xC0	; 192
    1ce8:	d8 e3       	ldi	r29, 0x38	; 56
    1cea:	0c ed       	ldi	r16, 0xDC	; 220
    1cec:	18 e3       	ldi	r17, 0x38	; 56
    1cee:	fe 01       	movw	r30, r28
	for (iters=0;iters<SIZEOFMOTPARAMS;iters++)motParams[iters]=0x00;//
    1cf0:	11 92       	st	Z+, r1
    1cf2:	e0 17       	cp	r30, r16
    1cf4:	f1 07       	cpc	r31, r17
    1cf6:	e1 f7       	brne	.-8      	; 0x1cf0 <main+0x5a>
	for (iters=0;iters<10;iters++)partialParams[iters]=0;//Initialize place holders for partial GPS loc params.
	sleepPins(1);
    1cf8:	81 e0       	ldi	r24, 0x01	; 1
    1cfa:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <sleepPins>
	NOP();
    1cfe:	00 00       	nop
	WDT_RST();
    1d00:	a8 95       	wdr
	NOP();
	sleep_enable();
	sleep_cpu();
#endif
#ifdef DO_DIAGS
	USART_0_initialization();
    1d02:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
	USART_0_initialization();
    1d06:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
#ifdef DO_DIAGS
//	usart_put_string(&("HeartBeat "),10);
#endif
  }
#endif
	DISABLE_INTERRUPTS();
    1d0a:	f8 94       	cli

#ifdef DO_DIAGS
	short battVal;
   USART_0_initialization();
    1d0c:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
	redBlink(3);
    1d10:	83 e0       	ldi	r24, 0x03	; 3
    1d12:	0e 94 4a 02 	call	0x494	; 0x494 <redBlink>
	usart_put_string(&("\r\nBOOT TINY\r\n"),13);
    1d16:	6d e0       	ldi	r22, 0x0D	; 13
    1d18:	85 e2       	ldi	r24, 0x25	; 37
    1d1a:	94 ea       	ldi	r25, 0xA4	; 164
    1d1c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
	WDT_RST();
    1d20:	a8 95       	wdr
	delay_ms(1000);
    1d22:	68 ee       	ldi	r22, 0xE8	; 232
    1d24:	73 e0       	ldi	r23, 0x03	; 3
    1d26:	80 e0       	ldi	r24, 0x00	; 0
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
// 	}
// 	WDT_RST();
// 	delay_ms(1000);
#endif
//	usart_put_string("PAST SOLAR\r\n",12);
	DISABLE_INTERRUPTS();
    1d2e:	f8 94       	cli
	for (iters=0;iters<SIZEOFMOTPARAMS;iters++)motParams[iters]=0x00;//
    1d30:	19 92       	st	Y+, r1
    1d32:	c0 17       	cp	r28, r16
    1d34:	d1 07       	cpc	r29, r17
    1d36:	e1 f7       	brne	.-8      	; 0x1d30 <main+0x9a>
	for (iters=0;iters<10;iters++)partialParams[iters]=iters+0xF0;//Initialize place holders for partial GPS loc params.
	sleepPins(1);
    1d38:	81 e0       	ldi	r24, 0x01	; 1
    1d3a:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <sleepPins>
	NOP();
    1d3e:	00 00       	nop
	WDT_RST();
    1d40:	a8 95       	wdr
	DISABLE_INTERRUPTS();
    1d42:	f8 94       	cli

	g_sensitivityHiBit = sensitivtyAll>>8;
    1d44:	10 92 01 39 	sts	0x3901, r1	; 0x803901 <g_sensitivityHiBit>
	g_sensitivityLoByte = (char)((sensitivtyAll&0x00FF)<<1);
    1d48:	80 ea       	ldi	r24, 0xA0	; 160
    1d4a:	80 93 fd 38 	sts	0x38FD, r24	; 0x8038fd <g_sensitivityLoByte>
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1d4e:	27 9a       	sbi	0x04, 7	; 4

 int PIRa;
 short PIRb,PIRc;
 char* lastByte;
	TPB7_set_dir(PORT_DIR_OUT);
	setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1d50:	21 e3       	ldi	r18, 0x31	; 49
    1d52:	41 e0       	ldi	r20, 0x01	; 1
    1d54:	60 91 fd 38 	lds	r22, 0x38FD	; 0x8038fd <g_sensitivityLoByte>
    1d58:	80 91 01 39 	lds	r24, 0x3901	; 0x803901 <g_sensitivityHiBit>
    1d5c:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <setPIRconfig>
	delay_ms(500);
    1d60:	64 ef       	ldi	r22, 0xF4	; 244
    1d62:	71 e0       	ldi	r23, 0x01	; 1
    1d64:	80 e0       	ldi	r24, 0x00	; 0
    1d66:	90 e0       	ldi	r25, 0x00	; 0
    1d68:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
	setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1d6c:	21 e3       	ldi	r18, 0x31	; 49
    1d6e:	41 e0       	ldi	r20, 0x01	; 1
    1d70:	60 91 fd 38 	lds	r22, 0x38FD	; 0x8038fd <g_sensitivityLoByte>
    1d74:	80 91 01 39 	lds	r24, 0x3901	; 0x803901 <g_sensitivityHiBit>
    1d78:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <setPIRconfig>

	VPORTA_INTFLAGS = 0xFF;
    1d7c:	8f ef       	ldi	r24, 0xFF	; 255
    1d7e:	83 b9       	out	0x03, r24	; 3
	VPORTB_INTFLAGS = 0xFF;
    1d80:	87 b9       	out	0x07, r24	; 7
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1d82:	e6 e3       	ldi	r30, 0x36	; 54
    1d84:	f4 e0       	ldi	r31, 0x04	; 4
    1d86:	80 81       	ld	r24, Z
    1d88:	88 7f       	andi	r24, 0xF8	; 248
    1d8a:	82 60       	ori	r24, 0x02	; 2
    1d8c:	80 83       	st	Z, r24
	//	VPORTC_INTFLAGS = 0x3F;
	
	TPB6_set_isc(PORT_ISC_RISING_gc);//Motion Switch
	*((uint8_t*)0x0A4A)&=~0x31;//TCA0 Ints
    1d8e:	ea e4       	ldi	r30, 0x4A	; 74
    1d90:	fa e0       	ldi	r31, 0x0A	; 10
    1d92:	80 81       	ld	r24, Z
    1d94:	8e 7c       	andi	r24, 0xCE	; 206
    1d96:	80 83       	st	Z, r24
	*((uint8_t*)0x0A4B)|=0x31;//TCA0 Flags
    1d98:	eb e4       	ldi	r30, 0x4B	; 75
    1d9a:	fa e0       	ldi	r31, 0x0A	; 10
    1d9c:	80 81       	ld	r24, Z
    1d9e:	81 63       	ori	r24, 0x31	; 49
    1da0:	80 83       	st	Z, r24

#ifdef HAS_GPS
	mState=BEGIN;
    1da2:	10 92 fe 38 	sts	0x38FE, r1	; 0x8038fe <mState>
// 				LCDspace();
			
				delay_ms(15);
			#endif
			break;
		default: mState=IDLE;
    1da6:	0f 2e       	mov	r0, r31
    1da8:	f7 e0       	ldi	r31, 0x07	; 7
    1daa:	bf 2e       	mov	r11, r31
    1dac:	f0 2d       	mov	r31, r0
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_LONGTERM;
			break;
		case IDLE://7
 			WDT_RST();
			WDT.CTRLA = MY_WDT;//watchdog
    1dae:	81 2c       	mov	r8, r1
    1db0:	99 24       	eor	r9, r9
    1db2:	93 94       	inc	r9
    1db4:	0f 2e       	mov	r0, r31
    1db6:	fb e0       	ldi	r31, 0x0B	; 11
    1db8:	7f 2e       	mov	r7, r31
    1dba:	f0 2d       	mov	r31, r0
 			WDT_RST();
			clearPIRinterrupt();
#ifdef HAS_GPS
			if((g_rcvdCmd&0x10)==0x10){
				g_rcvdCmd=0;
				mState=GET_GPS;
    1dbc:	68 94       	set
    1dbe:	44 24       	eor	r4, r4
    1dc0:	41 f8       	bld	r4, 1
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_LONGTERM;
			break;
		case NO_INITIAL_GPS_LONGTERM://6
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_LONGTERM;
    1dc2:	0f 2e       	mov	r0, r31
    1dc4:	f6 e0       	ldi	r31, 0x06	; 6
    1dc6:	af 2e       	mov	r10, r31
    1dc8:	f0 2d       	mov	r31, r0
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_B;
			break;
		case NO_INITIAL_GPS_B://4
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_C;
    1dca:	0f 2e       	mov	r0, r31
    1dcc:	f5 e0       	ldi	r31, 0x05	; 5
    1dce:	5f 2e       	mov	r5, r31
    1dd0:	f0 2d       	mov	r31, r0
			#endif				
			mState=IDLE;
			break;
		case NO_INITIAL_GPS_A://3
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_B;
    1dd2:	68 94       	set
    1dd4:	66 24       	eor	r6, r6
    1dd6:	62 f8       	bld	r6, 2
		case BEGIN://0
			mState=INITIAL_GPS;
			break;
		case INITIAL_GPS://
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
			else mState=NO_INITIAL_GPS_A;
    1dd8:	0f 2e       	mov	r0, r31
    1dda:	f3 e0       	ldi	r31, 0x03	; 3
    1ddc:	ef 2e       	mov	r14, r31
    1dde:	f0 2d       	mov	r31, r0
for(;;){
	WDT_RST();
	clearPIRinterrupt();
	switch(mState){
		case BEGIN://0
			mState=INITIAL_GPS;
    1de0:	ff 24       	eor	r15, r15
    1de2:	f3 94       	inc	r15
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1de4:	01 e5       	ldi	r16, 0x51	; 81
    1de6:	14 e0       	ldi	r17, 0x04	; 4
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1de8:	c6 e3       	ldi	r28, 0x36	; 54
    1dea:	d4 e0       	ldi	r29, 0x04	; 4
	}
	sleepPins(1);
	ENABLE_INTERRUPTS();//might not have to do this every time.
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1dec:	0f 2e       	mov	r0, r31
    1dee:	f0 e5       	ldi	r31, 0x50	; 80
    1df0:	cf 2e       	mov	r12, r31
    1df2:	d1 2c       	mov	r13, r1
    1df4:	f0 2d       	mov	r31, r0
#else
	mState=IDLE;
#endif

for(;;){
	WDT_RST();
    1df6:	a8 95       	wdr
	clearPIRinterrupt();
    1df8:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <clearPIRinterrupt>
	switch(mState){
    1dfc:	e0 91 fe 38 	lds	r30, 0x38FE	; 0x8038fe <mState>
    1e00:	8e 2f       	mov	r24, r30
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	88 30       	cpi	r24, 0x08	; 8
    1e06:	91 05       	cpc	r25, r1
    1e08:	08 f0       	brcs	.+2      	; 0x1e0c <main+0x176>
    1e0a:	6c c0       	rjmp	.+216    	; 0x1ee4 <main+0x24e>
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	e2 57       	subi	r30, 0x72	; 114
    1e10:	ff 4f       	sbci	r31, 0xFF	; 255
    1e12:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__tablejump2__>
		case BEGIN://0
			mState=INITIAL_GPS;
    1e16:	f0 92 fe 38 	sts	0x38FE, r15	; 0x8038fe <mState>
			break;
    1e1a:	67 c0       	rjmp	.+206    	; 0x1eea <main+0x254>
		case INITIAL_GPS://
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e1c:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <getGPS>
    1e20:	89 2b       	or	r24, r25
    1e22:	19 f4       	brne	.+6      	; 0x1e2a <main+0x194>
    1e24:	b0 92 fe 38 	sts	0x38FE, r11	; 0x8038fe <mState>
    1e28:	02 c0       	rjmp	.+4      	; 0x1e2e <main+0x198>
			else mState=NO_INITIAL_GPS_A;
    1e2a:	e0 92 fe 38 	sts	0x38FE, r14	; 0x8038fe <mState>
			#ifdef DO_DIAGS
				USART_0_initialization();
    1e2e:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
				LCDclear();
    1e32:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCDclear>
				usart_put_string("Got Initial GPS",15);
    1e36:	6f e0       	ldi	r22, 0x0F	; 15
    1e38:	83 e3       	ldi	r24, 0x33	; 51
    1e3a:	94 ea       	ldi	r25, 0xA4	; 164
    1e3c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
			#endif
			break;
    1e40:	54 c0       	rjmp	.+168    	; 0x1eea <main+0x254>
		case GET_GPS://2
			getGPS();
    1e42:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <getGPS>
			closeGPS();
    1e46:	0e 94 77 0c 	call	0x18ee	; 0x18ee <closeGPS>
			#ifdef DO_DIAGS
				USART_0_initialization();
    1e4a:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
				LCDclear ();
    1e4e:	0e 94 72 03 	call	0x6e4	; 0x6e4 <LCDclear>
				usart_put_string("GotGPS",6);
    1e52:	6a 2d       	mov	r22, r10
    1e54:	83 e4       	ldi	r24, 0x43	; 67
    1e56:	94 ea       	ldi	r25, 0xA4	; 164
    1e58:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
			#endif				
			mState=IDLE;
    1e5c:	b0 92 fe 38 	sts	0x38FE, r11	; 0x8038fe <mState>
			break;
    1e60:	44 c0       	rjmp	.+136    	; 0x1eea <main+0x254>
		case NO_INITIAL_GPS_A://3
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e62:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <getGPS>
    1e66:	89 2b       	or	r24, r25
    1e68:	19 f4       	brne	.+6      	; 0x1e70 <main+0x1da>
    1e6a:	b0 92 fe 38 	sts	0x38FE, r11	; 0x8038fe <mState>
    1e6e:	3d c0       	rjmp	.+122    	; 0x1eea <main+0x254>
			else mState=NO_INITIAL_GPS_B;
    1e70:	60 92 fe 38 	sts	0x38FE, r6	; 0x8038fe <mState>
    1e74:	3a c0       	rjmp	.+116    	; 0x1eea <main+0x254>
			break;
		case NO_INITIAL_GPS_B://4
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e76:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <getGPS>
    1e7a:	89 2b       	or	r24, r25
    1e7c:	19 f4       	brne	.+6      	; 0x1e84 <main+0x1ee>
    1e7e:	b0 92 fe 38 	sts	0x38FE, r11	; 0x8038fe <mState>
    1e82:	33 c0       	rjmp	.+102    	; 0x1eea <main+0x254>
			else mState=NO_INITIAL_GPS_C;
    1e84:	50 92 fe 38 	sts	0x38FE, r5	; 0x8038fe <mState>
    1e88:	30 c0       	rjmp	.+96     	; 0x1eea <main+0x254>
			break;
		case NO_INITIAL_GPS_C://5
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e8a:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <getGPS>
    1e8e:	89 2b       	or	r24, r25
    1e90:	19 f4       	brne	.+6      	; 0x1e98 <main+0x202>
    1e92:	b0 92 fe 38 	sts	0x38FE, r11	; 0x8038fe <mState>
    1e96:	29 c0       	rjmp	.+82     	; 0x1eea <main+0x254>
			else mState=NO_INITIAL_GPS_LONGTERM;
    1e98:	a0 92 fe 38 	sts	0x38FE, r10	; 0x8038fe <mState>
    1e9c:	26 c0       	rjmp	.+76     	; 0x1eea <main+0x254>
			break;
		case NO_INITIAL_GPS_LONGTERM://6
			if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e9e:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <getGPS>
    1ea2:	89 2b       	or	r24, r25
    1ea4:	19 f4       	brne	.+6      	; 0x1eac <main+0x216>
    1ea6:	b0 92 fe 38 	sts	0x38FE, r11	; 0x8038fe <mState>
    1eaa:	1f c0       	rjmp	.+62     	; 0x1eea <main+0x254>
			else mState=NO_INITIAL_GPS_LONGTERM;
    1eac:	a0 92 fe 38 	sts	0x38FE, r10	; 0x8038fe <mState>
    1eb0:	1c c0       	rjmp	.+56     	; 0x1eea <main+0x254>
			break;
		case IDLE://7
 			WDT_RST();
    1eb2:	a8 95       	wdr
			WDT.CTRLA = MY_WDT;//watchdog
    1eb4:	f4 01       	movw	r30, r8
    1eb6:	70 82       	st	Z, r7
			closeGPS();
    1eb8:	0e 94 77 0c 	call	0x18ee	; 0x18ee <closeGPS>
 			WDT_RST();
    1ebc:	a8 95       	wdr
			clearPIRinterrupt();
    1ebe:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <clearPIRinterrupt>
#ifdef HAS_GPS
			if((g_rcvdCmd&0x10)==0x10){
    1ec2:	80 91 f8 38 	lds	r24, 0x38F8	; 0x8038f8 <g_rcvdCmd>
    1ec6:	84 ff       	sbrs	r24, 4
    1ec8:	04 c0       	rjmp	.+8      	; 0x1ed2 <main+0x23c>
				g_rcvdCmd=0;
    1eca:	10 92 f8 38 	sts	0x38F8, r1	; 0x8038f8 <g_rcvdCmd>
				mState=GET_GPS;
    1ece:	40 92 fe 38 	sts	0x38FE, r4	; 0x8038fe <mState>
				}
#endif				
			#ifdef DO_DIAGS
				USART_0_initialization();
    1ed2:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
//				char battv = getBatt();The VREF for getBatt() can mess up kill current after a handoff to Big
//				usart_put_string("IDLE ",5);
// 				LCDshort(battv,2);
// 				LCDspace();
			
				delay_ms(15);
    1ed6:	6f e0       	ldi	r22, 0x0F	; 15
    1ed8:	70 e0       	ldi	r23, 0x00	; 0
    1eda:	80 e0       	ldi	r24, 0x00	; 0
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
			#endif
			break;
    1ee2:	03 c0       	rjmp	.+6      	; 0x1eea <main+0x254>
		default: mState=IDLE;
    1ee4:	b0 92 fe 38 	sts	0x38FE, r11	; 0x8038fe <mState>
 			WDT_RST();
    1ee8:	a8 95       	wdr
			break;
	}
	sleepPins(1);
    1eea:	8f 2d       	mov	r24, r15
    1eec:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <sleepPins>
	ENABLE_INTERRUPTS();//might not have to do this every time.
    1ef0:	78 94       	sei
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1ef2:	f8 01       	movw	r30, r16
    1ef4:	80 81       	ld	r24, Z
    1ef6:	88 7f       	andi	r24, 0xF8	; 248
    1ef8:	85 60       	ori	r24, 0x05	; 5
    1efa:	80 83       	st	Z, r24
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1efc:	88 81       	ld	r24, Y
    1efe:	88 7f       	andi	r24, 0xF8	; 248
    1f00:	82 60       	ori	r24, 0x02	; 2
    1f02:	88 83       	st	Y, r24
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1f04:	f6 01       	movw	r30, r12
    1f06:	e0 82       	st	Z, r14
	NOP();
    1f08:	00 00       	nop
	SLEEP();
    1f0a:	88 95       	sleep
}
    1f0c:	74 cf       	rjmp	.-280    	; 0x1df6 <main+0x160>

00001f0e <__vector_13>:
***********************************************************************
***********************************************************************/
/***********************************************************************
*  ISR TCB0 Timer for Prox PWM capture
***********************************************************************/
ISR(TCB0_INT_vect){
    1f0e:	1f 92       	push	r1
    1f10:	0f 92       	push	r0
    1f12:	0f b6       	in	r0, 0x3f	; 63
    1f14:	0f 92       	push	r0
    1f16:	11 24       	eor	r1, r1
    1f18:	8f 93       	push	r24
    1f1a:	9f 93       	push	r25
	short dumb;
		dumb=TCB0_CCMP;
    1f1c:	80 91 4c 0a 	lds	r24, 0x0A4C	; 0x800a4c <__TEXT_REGION_LENGTH__+0x700a4c>
    1f20:	90 91 4d 0a 	lds	r25, 0x0A4D	; 0x800a4d <__TEXT_REGION_LENGTH__+0x700a4d>
// 		TCB0_INTCTRL = 0x01;//Enable capture interrupt flag
// 		TCB0_EVCTRL = 0x11;//Enable Captu
}
    1f24:	9f 91       	pop	r25
    1f26:	8f 91       	pop	r24
    1f28:	0f 90       	pop	r0
    1f2a:	0f be       	out	0x3f, r0	; 63
    1f2c:	0f 90       	pop	r0
    1f2e:	1f 90       	pop	r1
    1f30:	18 95       	reti

00001f32 <__vector_5>:
/***********************************************************************
*  ISR WAKEUP FROM BIG
***********************************************************************/
//	APRIL 2, 2020: THERE CAN BE A 30ms DELAY RESPONDING TO THE INTERRUPT FROM BIG BECAUSE TINY IS BUSY WITH RTC-PIT INTERRUPT
ISR(PORTC_PORT_vect){
    1f32:	1f 92       	push	r1
    1f34:	0f 92       	push	r0
    1f36:	0f b6       	in	r0, 0x3f	; 63
    1f38:	0f 92       	push	r0
    1f3a:	11 24       	eor	r1, r1
    1f3c:	2f 93       	push	r18
    1f3e:	3f 93       	push	r19
    1f40:	4f 93       	push	r20
    1f42:	5f 93       	push	r21
    1f44:	6f 93       	push	r22
    1f46:	7f 93       	push	r23
    1f48:	8f 93       	push	r24
    1f4a:	9f 93       	push	r25
    1f4c:	af 93       	push	r26
    1f4e:	bf 93       	push	r27
    1f50:	ef 93       	push	r30
    1f52:	ff 93       	push	r31
	DISABLE_INTERRUPTS();
    1f54:	f8 94       	cli
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1f56:	e1 e5       	ldi	r30, 0x51	; 81
    1f58:	f4 e0       	ldi	r31, 0x04	; 4
    1f5a:	80 81       	ld	r24, Z
    1f5c:	88 7f       	andi	r24, 0xF8	; 248
    1f5e:	80 83       	st	Z, r24
	TPC1_set_isc(PORT_ISC_INTDISABLE_gc);//C1=WAKEUP FROM BIG
	PORTC.INTFLAGS |= (1 << 1);
    1f60:	e0 e4       	ldi	r30, 0x40	; 64
    1f62:	f4 e0       	ldi	r31, 0x04	; 4
    1f64:	81 85       	ldd	r24, Z+9	; 0x09
    1f66:	82 60       	ori	r24, 0x02	; 2
    1f68:	81 87       	std	Z+9, r24	; 0x09
	char gotCmd;
	char iters;
	
	if(mState!=SOLAR_WAIT)gotCmd=getPacketFromBig();
    1f6a:	80 91 fe 38 	lds	r24, 0x38FE	; 0x8038fe <mState>
    1f6e:	88 30       	cpi	r24, 0x08	; 8
    1f70:	11 f0       	breq	.+4      	; 0x1f76 <__vector_5+0x44>
    1f72:	0e 94 ae 0a 	call	0x155c	; 0x155c <getPacketFromBig>
	PORTC.INTFLAGS |= (1 << 1);
    1f76:	e0 e4       	ldi	r30, 0x40	; 64
    1f78:	f4 e0       	ldi	r31, 0x04	; 4
    1f7a:	81 85       	ldd	r24, Z+9	; 0x09
    1f7c:	82 60       	ori	r24, 0x02	; 2
    1f7e:	81 87       	std	Z+9, r24	; 0x09
	if(mState==IDLE){
    1f80:	80 91 fe 38 	lds	r24, 0x38FE	; 0x8038fe <mState>
    1f84:	87 30       	cpi	r24, 0x07	; 7
    1f86:	31 f4       	brne	.+12     	; 0x1f94 <__vector_5+0x62>
		sleepPins(1);//
    1f88:	81 e0       	ldi	r24, 0x01	; 1
    1f8a:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <sleepPins>
		sleepPins(1);//
    1f8e:	81 e0       	ldi	r24, 0x01	; 1
    1f90:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <sleepPins>
	}
	WDT_RST();//
    1f94:	a8 95       	wdr
    1f96:	e1 e5       	ldi	r30, 0x51	; 81
    1f98:	f4 e0       	ldi	r31, 0x04	; 4
    1f9a:	80 81       	ld	r24, Z
    1f9c:	88 7f       	andi	r24, 0xF8	; 248
    1f9e:	85 60       	ori	r24, 0x05	; 5
    1fa0:	80 83       	st	Z, r24
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	ENABLE_INTERRUPTS();
    1fa2:	78 94       	sei
}
    1fa4:	ff 91       	pop	r31
    1fa6:	ef 91       	pop	r30
    1fa8:	bf 91       	pop	r27
    1faa:	af 91       	pop	r26
    1fac:	9f 91       	pop	r25
    1fae:	8f 91       	pop	r24
    1fb0:	7f 91       	pop	r23
    1fb2:	6f 91       	pop	r22
    1fb4:	5f 91       	pop	r21
    1fb6:	4f 91       	pop	r20
    1fb8:	3f 91       	pop	r19
    1fba:	2f 91       	pop	r18
    1fbc:	0f 90       	pop	r0
    1fbe:	0f be       	out	0x3f, r0	; 63
    1fc0:	0f 90       	pop	r0
    1fc2:	1f 90       	pop	r1
    1fc4:	18 95       	reti

00001fc6 <__vector_27>:
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
    1fc6:	1f 92       	push	r1
    1fc8:	0f 92       	push	r0
    1fca:	0f b6       	in	r0, 0x3f	; 63
    1fcc:	0f 92       	push	r0
    1fce:	11 24       	eor	r1, r1
    1fd0:	8f 93       	push	r24
    1fd2:	9f 93       	push	r25
    1fd4:	ef 93       	push	r30
    1fd6:	ff 93       	push	r31
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
    1fd8:	e0 91 ff 38 	lds	r30, 0x38FF	; 0x8038ff <p_GPSrcvData>
    1fdc:	f0 91 00 39 	lds	r31, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
    1fe0:	88 e3       	ldi	r24, 0x38	; 56
    1fe2:	e0 3c       	cpi	r30, 0xC0	; 192
    1fe4:	f8 07       	cpc	r31, r24
    1fe6:	d8 f0       	brcs	.+54     	; 0x201e <__vector_27+0x58>
    1fe8:	8f eb       	ldi	r24, 0xBF	; 191
    1fea:	98 e3       	ldi	r25, 0x38	; 56
    1fec:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
    1ff0:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    1ff4:	fc 01       	movw	r30, r24
		*p_GPSrcvData=USART0.RXDATAL;
    1ff6:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    1ffa:	80 83       	st	Z, r24
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
    1ffc:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    2000:	8a 30       	cpi	r24, 0x0A	; 10
    2002:	19 f4       	brne	.+6      	; 0x200a <__vector_27+0x44>
    2004:	81 e0       	ldi	r24, 0x01	; 1
    2006:	80 93 f7 38 	sts	0x38F7, r24	; 0x8038f7 <endOfLineFlag>
	p_GPSrcvData++;
    200a:	80 91 ff 38 	lds	r24, 0x38FF	; 0x8038ff <p_GPSrcvData>
    200e:	90 91 00 39 	lds	r25, 0x3900	; 0x803900 <p_GPSrcvData+0x1>
    2012:	01 96       	adiw	r24, 0x01	; 1
    2014:	80 93 ff 38 	sts	0x38FF, r24	; 0x8038ff <p_GPSrcvData>
    2018:	90 93 00 39 	sts	0x3900, r25	; 0x803900 <p_GPSrcvData+0x1>
}
    201c:	05 c0       	rjmp	.+10     	; 0x2028 <__vector_27+0x62>
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    201e:	88 e3       	ldi	r24, 0x38	; 56
    2020:	ea 30       	cpi	r30, 0x0A	; 10
    2022:	f8 07       	cpc	r31, r24
    2024:	58 f3       	brcs	.-42     	; 0x1ffc <__vector_27+0x36>
    2026:	e7 cf       	rjmp	.-50     	; 0x1ff6 <__vector_27+0x30>
		*p_GPSrcvData=USART0.RXDATAL;
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
	p_GPSrcvData++;
}
    2028:	ff 91       	pop	r31
    202a:	ef 91       	pop	r30
    202c:	9f 91       	pop	r25
    202e:	8f 91       	pop	r24
    2030:	0f 90       	pop	r0
    2032:	0f be       	out	0x3f, r0	; 63
    2034:	0f 90       	pop	r0
    2036:	1f 90       	pop	r1
    2038:	18 95       	reti

0000203a <__vector_4>:
/***********************************************************************
*  ISR MOTION
***********************************************************************/
ISR(PORTB_PORT_vect){
    203a:	1f 92       	push	r1
    203c:	0f 92       	push	r0
    203e:	0f b6       	in	r0, 0x3f	; 63
    2040:	0f 92       	push	r0
    2042:	11 24       	eor	r1, r1
    2044:	8f 93       	push	r24
    2046:	ef 93       	push	r30
    2048:	ff 93       	push	r31
	// B6 is Motion
	WDT_RST();//
    204a:	a8 95       	wdr
	if(!g_tripFlag){
    204c:	80 91 07 38 	lds	r24, 0x3807	; 0x803807 <g_tripFlag>
    2050:	81 11       	cpse	r24, r1
    2052:	0a c0       	rjmp	.+20     	; 0x2068 <__vector_4+0x2e>
		g_tripFlag=1;
    2054:	81 e0       	ldi	r24, 0x01	; 1
    2056:	80 93 07 38 	sts	0x3807, r24	; 0x803807 <g_tripFlag>
		motParams[NUM_TRIPS_INDEX]++;
    205a:	e0 ec       	ldi	r30, 0xC0	; 192
    205c:	f8 e3       	ldi	r31, 0x38	; 56
    205e:	86 89       	ldd	r24, Z+22	; 0x16
    2060:	8f 5f       	subi	r24, 0xFF	; 255
    2062:	86 8b       	std	Z+22, r24	; 0x16
		g_durCtr=0;
    2064:	10 92 00 38 	sts	0x3800, r1	; 0x803800 <_edata>
	}
	g_numTripZeroCtr=0;
    2068:	10 92 08 38 	sts	0x3808, r1	; 0x803808 <g_numTripZeroCtr>
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    206c:	26 98       	cbi	0x04, 6	; 4
	TPB6_set_dir(PORT_DIR_IN);
	g_gotMotion=1;
    206e:	81 e0       	ldi	r24, 0x01	; 1
    2070:	80 93 09 38 	sts	0x3809, r24	; 0x803809 <g_gotMotion>
	PORTB.INTFLAGS |= (1 << 6);
    2074:	e0 e2       	ldi	r30, 0x20	; 32
    2076:	f4 e0       	ldi	r31, 0x04	; 4
    2078:	81 85       	ldd	r24, Z+9	; 0x09
    207a:	80 64       	ori	r24, 0x40	; 64
    207c:	81 87       	std	Z+9, r24	; 0x09
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    207e:	e6 e3       	ldi	r30, 0x36	; 54
    2080:	f4 e0       	ldi	r31, 0x04	; 4
    2082:	80 81       	ld	r24, Z
    2084:	88 7f       	andi	r24, 0xF8	; 248
    2086:	80 83       	st	Z, r24
	TPB6_set_isc(PORT_ISC_INTDISABLE_gc);
}
    2088:	ff 91       	pop	r31
    208a:	ef 91       	pop	r30
    208c:	8f 91       	pop	r24
    208e:	0f 90       	pop	r0
    2090:	0f be       	out	0x3f, r0	; 63
    2092:	0f 90       	pop	r0
    2094:	1f 90       	pop	r1
    2096:	18 95       	reti

00002098 <__vector_7>:
/***********************************************************************
*  ISR PIT (RTC)  
*  BAD COMMS FROM BIG HIT WHEN TINY IS BUSY WITH THIS RTC-PIT INTERRUPT WHEN INTERRUPT FROM BIG HITS. RTC-PIT INTERRUPT ROUTINE TAKES ABOUT 30ms.
***********************************************************************/
ISR(RTC_PIT_vect)
{
    2098:	1f 92       	push	r1
    209a:	0f 92       	push	r0
    209c:	0f b6       	in	r0, 0x3f	; 63
    209e:	0f 92       	push	r0
    20a0:	11 24       	eor	r1, r1
    20a2:	2f 93       	push	r18
    20a4:	3f 93       	push	r19
    20a6:	4f 93       	push	r20
    20a8:	5f 93       	push	r21
    20aa:	6f 93       	push	r22
    20ac:	7f 93       	push	r23
    20ae:	8f 93       	push	r24
    20b0:	9f 93       	push	r25
    20b2:	af 93       	push	r26
    20b4:	bf 93       	push	r27
    20b6:	ef 93       	push	r30
    20b8:	ff 93       	push	r31
	char iters;
	short als;

	WDT_RST();//seems to require this one. Not sure why the main loop doesn't take care of it.
    20ba:	a8 95       	wdr
	if(g_motSecCtr==55){
    20bc:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <g_motSecCtr>
    20c0:	87 33       	cpi	r24, 0x37	; 55
    20c2:	c9 f4       	brne	.+50     	; 0x20f6 <__vector_7+0x5e>
		als=getALSfromProx();
    20c4:	0e 94 a9 01 	call	0x352	; 0x352 <getALSfromProx>
		als>>=1;
    20c8:	95 95       	asr	r25
    20ca:	87 95       	ror	r24
    20cc:	81 15       	cp	r24, r1
    20ce:	24 e0       	ldi	r18, 0x04	; 4
    20d0:	92 07       	cpc	r25, r18
    20d2:	14 f0       	brlt	.+4      	; 0x20d8 <__vector_7+0x40>
    20d4:	8f ef       	ldi	r24, 0xFF	; 255
    20d6:	93 e0       	ldi	r25, 0x03	; 3
		if(als>0x03FF)als=0x03FF;
		motParams[ALS_INDEX]|=als&0x00FF;
    20d8:	e0 ec       	ldi	r30, 0xC0	; 192
    20da:	f8 e3       	ldi	r31, 0x38	; 56
    20dc:	47 89       	ldd	r20, Z+23	; 0x17
		motParams[VERS_HBITS_INDEX]|=(als>>7)&0x0006;
    20de:	9c 01       	movw	r18, r24
    20e0:	22 0f       	add	r18, r18
    20e2:	23 2f       	mov	r18, r19
    20e4:	22 1f       	adc	r18, r18
    20e6:	33 0b       	sbc	r19, r19
    20e8:	92 2f       	mov	r25, r18
    20ea:	96 70       	andi	r25, 0x06	; 6
    20ec:	20 81       	ld	r18, Z
    20ee:	92 2b       	or	r25, r18
    20f0:	90 83       	st	Z, r25
		motParams[ALS_INDEX]|=(als&0x00FF);
    20f2:	84 2b       	or	r24, r20
    20f4:	87 8b       	std	Z+23, r24	; 0x17
// 		LCDshort(als,4);
	}
	if((g_tripFlag)&&(g_durCtr!=DURCTR_MAX))g_durCtr++;
    20f6:	80 91 07 38 	lds	r24, 0x3807	; 0x803807 <g_tripFlag>
    20fa:	88 23       	and	r24, r24
    20fc:	39 f0       	breq	.+14     	; 0x210c <__vector_7+0x74>
    20fe:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    2102:	8e 3f       	cpi	r24, 0xFE	; 254
    2104:	19 f0       	breq	.+6      	; 0x210c <__vector_7+0x74>
    2106:	8f 5f       	subi	r24, 0xFF	; 255
    2108:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <_edata>
#ifdef DO_DIAGS
	USART_0_initialization();
    210c:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
	USART_0_initialization();
    2110:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>
	if(g_gotMotion) usart_put_string("1",1);
    2114:	80 91 09 38 	lds	r24, 0x3809	; 0x803809 <g_gotMotion>
    2118:	88 23       	and	r24, r24
    211a:	31 f0       	breq	.+12     	; 0x2128 <__vector_7+0x90>
    211c:	61 e0       	ldi	r22, 0x01	; 1
    211e:	8a e4       	ldi	r24, 0x4A	; 74
    2120:	94 ea       	ldi	r25, 0xA4	; 164
    2122:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
    2126:	05 c0       	rjmp	.+10     	; 0x2132 <__vector_7+0x9a>
	else usart_put_string("0",1);
    2128:	61 e0       	ldi	r22, 0x01	; 1
    212a:	8c e4       	ldi	r24, 0x4C	; 76
    212c:	94 ea       	ldi	r25, 0xA4	; 164
    212e:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_put_string>
	delay_ms(30);
    2132:	6e e1       	ldi	r22, 0x1E	; 30
    2134:	70 e0       	ldi	r23, 0x00	; 0
    2136:	80 e0       	ldi	r24, 0x00	; 0
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	0e 94 92 01 	call	0x324	; 0x324 <delay_ms>
#endif
	if(g_motSecCtr>59)g_holdForBigFlag--;
    213e:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <g_motSecCtr>
    2142:	8c 33       	cpi	r24, 0x3C	; 60
    2144:	28 f0       	brcs	.+10     	; 0x2150 <__vector_7+0xb8>
    2146:	90 91 01 38 	lds	r25, 0x3801	; 0x803801 <g_holdForBigFlag>
    214a:	91 50       	subi	r25, 0x01	; 1
    214c:	90 93 01 38 	sts	0x3801, r25	; 0x803801 <g_holdForBigFlag>
	if((++g_motSecCtr>59)&&(g_holdForBigFlag<5)){
    2150:	8f 5f       	subi	r24, 0xFF	; 255
    2152:	80 93 06 38 	sts	0x3806, r24	; 0x803806 <g_motSecCtr>
    2156:	8c 33       	cpi	r24, 0x3C	; 60
    2158:	98 f0       	brcs	.+38     	; 0x2180 <__vector_7+0xe8>
    215a:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_holdForBigFlag>
    215e:	85 30       	cpi	r24, 0x05	; 5
    2160:	78 f4       	brcc	.+30     	; 0x2180 <__vector_7+0xe8>
		g_holdForBigFlag=58;//reset for one minute of holding data before giving up on Big and restarting anyway.
    2162:	8a e3       	ldi	r24, 0x3A	; 58
    2164:	80 93 01 38 	sts	0x3801, r24	; 0x803801 <g_holdForBigFlag>
		g_noMotionFlag=1;
		g_motSecCtr=0;
    2168:	10 92 06 38 	sts	0x3806, r1	; 0x803806 <g_motSecCtr>
		g_durIndex=DUR_INDEX;
    216c:	8a e0       	ldi	r24, 0x0A	; 10
    216e:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <g_durIndex>
		g_motionPatternIndex=MOTION_INDEX;//1 because the raw motion patterns go into motParams[1..8]
    2172:	81 e0       	ldi	r24, 0x01	; 1
    2174:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_motionPatternIndex>
		g_motionPatternMask=0x80;
    2178:	80 e8       	ldi	r24, 0x80	; 128
    217a:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <g_motionPatternMask>
    217e:	15 c0       	rjmp	.+42     	; 0x21aa <__vector_7+0x112>
		}else{
		g_motionPatternMask>>=1;
    2180:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <g_motionPatternMask>
    2184:	86 95       	lsr	r24
		if(g_motionPatternMask==0){
    2186:	19 f0       	breq	.+6      	; 0x218e <__vector_7+0xf6>
		g_motSecCtr=0;
		g_durIndex=DUR_INDEX;
		g_motionPatternIndex=MOTION_INDEX;//1 because the raw motion patterns go into motParams[1..8]
		g_motionPatternMask=0x80;
		}else{
		g_motionPatternMask>>=1;
    2188:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <g_motionPatternMask>
    218c:	0e c0       	rjmp	.+28     	; 0x21aa <__vector_7+0x112>
		if(g_motionPatternMask==0){
			g_motionPatternMask=0x80;
    218e:	80 e8       	ldi	r24, 0x80	; 128
    2190:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <g_motionPatternMask>
			if(++g_motionPatternIndex>8)g_motionPatternIndex=1;
    2194:	80 91 03 38 	lds	r24, 0x3803	; 0x803803 <g_motionPatternIndex>
    2198:	8f 5f       	subi	r24, 0xFF	; 255
    219a:	89 30       	cpi	r24, 0x09	; 9
    219c:	18 f4       	brcc	.+6      	; 0x21a4 <__vector_7+0x10c>
    219e:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_motionPatternIndex>
    21a2:	03 c0       	rjmp	.+6      	; 0x21aa <__vector_7+0x112>
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_motionPatternIndex>
		}
	}//end of <59 or >59

	if(g_gotMotion){
    21aa:	80 91 09 38 	lds	r24, 0x3809	; 0x803809 <g_gotMotion>
    21ae:	88 23       	and	r24, r24
    21b0:	a1 f0       	breq	.+40     	; 0x21da <__vector_7+0x142>
		g_noMotionFlag=0;
		g_motionMinTotal++;
    21b2:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <g_motionMinTotal>
    21b6:	8f 5f       	subi	r24, 0xFF	; 255
    21b8:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <g_motionMinTotal>
		if(g_motSecCtr<60)motParams[g_motionPatternIndex]|=g_motionPatternMask;
    21bc:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <g_motSecCtr>
    21c0:	8c 33       	cpi	r24, 0x3C	; 60
    21c2:	50 f5       	brcc	.+84     	; 0x2218 <__vector_7+0x180>
    21c4:	e0 91 03 38 	lds	r30, 0x3803	; 0x803803 <g_motionPatternIndex>
    21c8:	f0 e0       	ldi	r31, 0x00	; 0
    21ca:	e0 54       	subi	r30, 0x40	; 64
    21cc:	f7 4c       	sbci	r31, 0xC7	; 199
    21ce:	90 81       	ld	r25, Z
    21d0:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <g_motionPatternMask>
    21d4:	89 2b       	or	r24, r25
    21d6:	80 83       	st	Z, r24
    21d8:	1f c0       	rjmp	.+62     	; 0x2218 <__vector_7+0x180>

	}else{
		g_numTripZeroCtr++;
    21da:	80 91 08 38 	lds	r24, 0x3808	; 0x803808 <g_numTripZeroCtr>
    21de:	8f 5f       	subi	r24, 0xFF	; 255
    21e0:	80 93 08 38 	sts	0x3808, r24	; 0x803808 <g_numTripZeroCtr>
		if(g_numTripZeroCtr>100)g_numTripZeroCtr=100;
    21e4:	85 36       	cpi	r24, 0x65	; 101
    21e6:	20 f0       	brcs	.+8      	; 0x21f0 <__vector_7+0x158>
    21e8:	84 e6       	ldi	r24, 0x64	; 100
    21ea:	80 93 08 38 	sts	0x3808, r24	; 0x803808 <g_numTripZeroCtr>
    21ee:	14 c0       	rjmp	.+40     	; 0x2218 <__vector_7+0x180>
		if(g_numTripZeroCtr==NUMMOTSECS_BETWEEN_TRIPS){
    21f0:	85 30       	cpi	r24, 0x05	; 5
    21f2:	91 f4       	brne	.+36     	; 0x2218 <__vector_7+0x180>
			motParams[g_durIndex]=g_durCtr-NUMMOTSECS_BETWEEN_TRIPS;
    21f4:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <g_durIndex>
    21f8:	e8 2f       	mov	r30, r24
    21fa:	f0 e0       	ldi	r31, 0x00	; 0
    21fc:	e0 54       	subi	r30, 0x40	; 64
    21fe:	f7 4c       	sbci	r31, 0xC7	; 199
    2200:	90 91 00 38 	lds	r25, 0x3800	; 0x803800 <_edata>
    2204:	95 50       	subi	r25, 0x05	; 5
    2206:	90 83       	st	Z, r25
			g_tripFlag=0;
    2208:	10 92 07 38 	sts	0x3807, r1	; 0x803807 <g_tripFlag>
			g_durCtr=DURCTR_MAX;
    220c:	9e ef       	ldi	r25, 0xFE	; 254
    220e:	90 93 00 38 	sts	0x3800, r25	; 0x803800 <_edata>
			g_durIndex++;
    2212:	8f 5f       	subi	r24, 0xFF	; 255
    2214:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <g_durIndex>
		}
	}
	clearPIRinterrupt();//PIR DL line (interrupts) can get stuck high if not acknowledged by a pull low.	
    2218:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <clearPIRinterrupt>
	/* Overflow interrupt flag has to be cleared manually */
	g_gotMotion=0;
    221c:	10 92 09 38 	sts	0x3809, r1	; 0x803809 <g_gotMotion>
    2220:	e6 e3       	ldi	r30, 0x36	; 54
    2222:	f4 e0       	ldi	r31, 0x04	; 4
    2224:	80 81       	ld	r24, Z
    2226:	88 7f       	andi	r24, 0xF8	; 248
    2228:	82 60       	ori	r24, 0x02	; 2
    222a:	80 83       	st	Z, r24
	TPB6_set_isc(PORT_ISC_RISING_gc);
	RTC.PITINTFLAGS = 1;
    222c:	81 e0       	ldi	r24, 0x01	; 1
    222e:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
}
    2232:	ff 91       	pop	r31
    2234:	ef 91       	pop	r30
    2236:	bf 91       	pop	r27
    2238:	af 91       	pop	r26
    223a:	9f 91       	pop	r25
    223c:	8f 91       	pop	r24
    223e:	7f 91       	pop	r23
    2240:	6f 91       	pop	r22
    2242:	5f 91       	pop	r21
    2244:	4f 91       	pop	r20
    2246:	3f 91       	pop	r19
    2248:	2f 91       	pop	r18
    224a:	0f 90       	pop	r0
    224c:	0f be       	out	0x3f, r0	; 63
    224e:	0f 90       	pop	r0
    2250:	1f 90       	pop	r1
    2252:	18 95       	reti

00002254 <BOD_init>:
    2254:	80 e0       	ldi	r24, 0x00	; 0
    2256:	08 95       	ret

00002258 <CLKCTRL_init>:
    2258:	42 e0       	ldi	r20, 0x02	; 2
    225a:	68 ed       	ldi	r22, 0xD8	; 216
    225c:	88 e7       	ldi	r24, 0x78	; 120
    225e:	90 e0       	ldi	r25, 0x00	; 0
    2260:	0e 94 6f 11 	call	0x22de	; 0x22de <protected_write_io>
    2264:	40 e0       	ldi	r20, 0x00	; 0
    2266:	68 ed       	ldi	r22, 0xD8	; 216
    2268:	80 e7       	ldi	r24, 0x70	; 112
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	0e 94 6f 11 	call	0x22de	; 0x22de <protected_write_io>
    2270:	40 e0       	ldi	r20, 0x00	; 0
    2272:	68 ed       	ldi	r22, 0xD8	; 216
    2274:	80 e6       	ldi	r24, 0x60	; 96
    2276:	90 e0       	ldi	r25, 0x00	; 0
    2278:	0e 94 6f 11 	call	0x22de	; 0x22de <protected_write_io>
    227c:	80 e0       	ldi	r24, 0x00	; 0
    227e:	08 95       	ret

00002280 <CPUINT_init>:
    2280:	80 e0       	ldi	r24, 0x00	; 0
    2282:	08 95       	ret

00002284 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    2284:	e0 e1       	ldi	r30, 0x10	; 16
    2286:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    2288:	80 81       	ld	r24, Z
    228a:	88 60       	ori	r24, 0x08	; 8
    228c:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    228e:	e8 31       	cpi	r30, 0x18	; 24
    2290:	84 e0       	ldi	r24, 0x04	; 4
    2292:	f8 07       	cpc	r31, r24
    2294:	c9 f7       	brne	.-14     	; 0x2288 <mcu_init+0x4>
    2296:	e0 e3       	ldi	r30, 0x30	; 48
    2298:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    229a:	80 81       	ld	r24, Z
    229c:	88 60       	ori	r24, 0x08	; 8
    229e:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    22a0:	e8 33       	cpi	r30, 0x38	; 56
    22a2:	84 e0       	ldi	r24, 0x04	; 4
    22a4:	f8 07       	cpc	r31, r24
    22a6:	c9 f7       	brne	.-14     	; 0x229a <mcu_init+0x16>
	}

//	for (uint8_t i = 0; i < 8; i++) {
//		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
//	}
}
    22a8:	08 95       	ret

000022aa <USART_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    22aa:	23 98       	cbi	0x04, 3	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    22ac:	e3 e3       	ldi	r30, 0x33	; 51
    22ae:	f4 e0       	ldi	r31, 0x04	; 4
    22b0:	80 81       	ld	r24, Z
    22b2:	87 7f       	andi	r24, 0xF7	; 247
    22b4:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    22b6:	22 9a       	sbi	0x04, 2	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    22b8:	2a 98       	cbi	0x05, 2	; 5
{
	TPB3_set_dir(PORT_DIR_IN);
	TPB3_set_pull_mode(PORT_PULL_OFF);
	TPB2_set_dir(PORT_DIR_OUT);
	TPB2_set_level(0);
	USART_0_init();
    22ba:	0e 94 82 11 	call	0x2304	; 0x2304 <USART_0_init>
    22be:	08 95       	ret

000022c0 <system_init>:
}
void system_init()
{
	mcu_init();
    22c0:	0e 94 42 11 	call	0x2284	; 0x2284 <mcu_init>

	/* PORT setting on PB4 */

	CLKCTRL_init();
    22c4:	0e 94 2c 11 	call	0x2258	; 0x2258 <CLKCTRL_init>

	RTC_0_init();
    22c8:	0e 94 73 11 	call	0x22e6	; 0x22e6 <RTC_0_init>

//	ADC_0_initialization();

	USART_0_initialization();
    22cc:	0e 94 55 11 	call	0x22aa	; 0x22aa <USART_0_initialization>

	CPUINT_init();
    22d0:	0e 94 40 11 	call	0x2280	; 0x2280 <CPUINT_init>

	SLPCTRL_init();
    22d4:	0e 94 80 11 	call	0x2300	; 0x2300 <SLPCTRL_init>

	BOD_init();
    22d8:	0e 94 2a 11 	call	0x2254	; 0x2254 <BOD_init>
    22dc:	08 95       	ret

000022de <protected_write_io>:
    22de:	fc 01       	movw	r30, r24
    22e0:	64 bf       	out	0x34, r22	; 52
    22e2:	40 83       	st	Z, r20
    22e4:	08 95       	ret

000022e6 <RTC_0_init>:
 * \brief Initialize RTC interface
 */
int8_t RTC_0_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
    22e6:	e0 e4       	ldi	r30, 0x40	; 64
    22e8:	f1 e0       	ldi	r31, 0x01	; 1
    22ea:	81 81       	ldd	r24, Z+1	; 0x01
    22ec:	81 11       	cpse	r24, r1
    22ee:	fd cf       	rjmp	.-6      	; 0x22ea <RTC_0_init+0x4>

// 	RTC.INTCTRL = 0 << RTC_CMP_bp    /* Compare Match Interrupt enable: disabled */
// 	              | 1 << RTC_OVF_bp; /* Overflow Interrupt enable: enabled */


	RTC.PITCTRLA = RTC_PERIOD_CYC32768_gc /* Off */
    22f0:	e0 e4       	ldi	r30, 0x40	; 64
    22f2:	f1 e0       	ldi	r31, 0x01	; 1
    22f4:	81 e7       	ldi	r24, 0x71	; 113
    22f6:	80 8b       	std	Z+16, r24	; 0x10
//	RTC.PITCTRLA = RTC_PERIOD_CYC16384_gc /* Off */
			 | 1 << RTC_PITEN_bp; /* Enable: disabled */

	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.PITINTCTRL = 1 << RTC_PI_bp; /* Periodic Interrupt: disabled */
    22f8:	81 e0       	ldi	r24, 0x01	; 1
    22fa:	82 8b       	std	Z+18, r24	; 0x12

	return 0;
}
    22fc:	80 e0       	ldi	r24, 0x00	; 0
    22fe:	08 95       	ret

00002300 <SLPCTRL_init>:
    2300:	80 e0       	ldi	r24, 0x00	; 0
    2302:	08 95       	ret

00002304 <USART_0_init>:
 * \brief Initialize usart interface
 */
int8_t USART_0_init()
{

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600); /* set baud rate register */
    2304:	e0 e0       	ldi	r30, 0x00	; 0
    2306:	f8 e0       	ldi	r31, 0x08	; 8
    2308:	8c e6       	ldi	r24, 0x6C	; 108
    230a:	95 e0       	ldi	r25, 0x05	; 5
    230c:	80 87       	std	Z+8, r24	; 0x08
    230e:	91 87       	std	Z+9, r25	; 0x09

	 USART0.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    2310:	80 e8       	ldi	r24, 0x80	; 128
    2312:	85 83       	std	Z+5, r24	; 0x05
			 | USART_RS485_OFF_gc /* RS485 Mode disabled */
			 | 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: enabled */
			 | 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			 | 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */
		
	USART0.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    2314:	80 ec       	ldi	r24, 0xC0	; 192
    2316:	86 83       	std	Z+6, r24	; 0x06
	// USART0.RXPLCTRL = 0x0 << USART_RXPL_gp; /* Receiver Pulse Lenght: 0x0 */

	// USART0.TXPLCTRL = 0x0 << USART_TXPL_gp; /* Transmit pulse length: 0x0 */

	return 0;
}
    2318:	80 e0       	ldi	r24, 0x00	; 0
    231a:	08 95       	ret

0000231c <__tablejump2__>:
    231c:	ee 0f       	add	r30, r30
    231e:	ff 1f       	adc	r31, r31
    2320:	05 90       	lpm	r0, Z+
    2322:	f4 91       	lpm	r31, Z
    2324:	e0 2d       	mov	r30, r0
    2326:	09 94       	ijmp

00002328 <ccp_write_io>:
    2328:	dc 01       	movw	r26, r24
    232a:	28 ed       	ldi	r18, 0xD8	; 216
    232c:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x700034>
    2330:	6c 93       	st	X, r22
    2332:	08 95       	ret

00002334 <_exit>:
    2334:	f8 94       	cli

00002336 <__stop_program>:
    2336:	ff cf       	rjmp	.-2      	; 0x2336 <__stop_program>
