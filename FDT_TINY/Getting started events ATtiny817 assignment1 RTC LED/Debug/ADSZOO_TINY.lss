
ADSZOO_TINY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  000023b5  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002226  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000fb  0000a226  00002226  000022ba  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000013a  00803800  00803800  000023b5  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  000023b5  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000023e8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000308  00000000  00000000  00002428  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000082d4  00000000  00000000  00002730  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002296  00000000  00000000  0000aa04  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00003029  00000000  00000000  0000cc9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000748  00000000  00000000  0000fcc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002250  00000000  00000000  0001040c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000403f  00000000  00000000  0001265c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000328  00000000  00000000  0001669b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 96 00 	jmp	0x12c	; 0x12c <__ctors_end>
       4:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       8:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      10:	0c 94 65 10 	jmp	0x20ca	; 0x20ca <__vector_4>
      14:	0c 94 e2 0f 	jmp	0x1fc4	; 0x1fc4 <__vector_5>
      18:	0c 94 82 10 	jmp	0x2104	; 0x2104 <__vector_6>
      1c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      20:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      24:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      28:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      2c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      30:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      34:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      38:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      3c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      40:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      44:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      48:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      4c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      50:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      54:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      58:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      5c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      60:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      64:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      68:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      6c:	0c 94 2b 10 	jmp	0x2056	; 0x2056 <__vector_27>
      70:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      74:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      78:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      7c:	97 01       	movw	r18, r14
      7e:	9a 01       	movw	r18, r20
      80:	9d 01       	movw	r18, r26
      82:	a0 01       	movw	r20, r0
      84:	a3 01       	movw	r20, r6
      86:	a6 01       	movw	r20, r12
      88:	a9 01       	movw	r20, r18
      8a:	ac 01       	movw	r20, r24
      8c:	af 01       	movw	r20, r30
      8e:	d5 01       	movw	r26, r10
      90:	be 01       	movw	r22, r28
      92:	c0 01       	movw	r24, r0
      94:	c2 01       	movw	r24, r4
      96:	c4 01       	movw	r24, r8
      98:	c6 01       	movw	r24, r12
      9a:	c8 01       	movw	r24, r16
      9c:	ca 01       	movw	r24, r20
      9e:	cd 01       	movw	r24, r26
      a0:	d0 01       	movw	r26, r0
      a2:	e2 01       	movw	r28, r4
      a4:	e5 01       	movw	r28, r10
      a6:	e8 01       	movw	r28, r16
      a8:	eb 01       	movw	r28, r22
      aa:	ee 01       	movw	r28, r28
      ac:	f1 01       	movw	r30, r2
      ae:	f4 01       	movw	r30, r8
      b0:	f7 01       	movw	r30, r14
      b2:	fa 01       	movw	r30, r20
      b4:	0f 02       	muls	r16, r31
      b6:	0f 02       	muls	r16, r31
      b8:	0f 02       	muls	r16, r31
      ba:	0f 02       	muls	r16, r31
      bc:	0f 02       	muls	r16, r31
      be:	0f 02       	muls	r16, r31
      c0:	0f 02       	muls	r16, r31
      c2:	fd 01       	movw	r30, r26
      c4:	00 02       	muls	r16, r16
      c6:	03 02       	muls	r16, r19
      c8:	06 02       	muls	r16, r22
      ca:	09 02       	muls	r16, r25
      cc:	0c 02       	muls	r16, r28
      ce:	47 02       	muls	r20, r23
      d0:	1b 02       	muls	r17, r27
      d2:	1d 02       	muls	r17, r29
      d4:	1f 02       	muls	r17, r31
      d6:	21 02       	muls	r18, r17
      d8:	24 02       	muls	r18, r20
      da:	27 02       	muls	r18, r23
      dc:	2a 02       	muls	r18, r26
      de:	2d 02       	muls	r18, r29
      e0:	30 02       	muls	r19, r16
      e2:	42 02       	muls	r20, r18
      e4:	42 02       	muls	r20, r18
      e6:	42 02       	muls	r20, r18
      e8:	42 02       	muls	r20, r18
      ea:	42 02       	muls	r20, r18
      ec:	42 02       	muls	r20, r18
      ee:	42 02       	muls	r20, r18
      f0:	45 02       	muls	r20, r21
      f2:	33 02       	muls	r19, r19
      f4:	36 02       	muls	r19, r22
      f6:	39 02       	muls	r19, r25
      f8:	3c 02       	muls	r19, r28
      fa:	3f 02       	muls	r19, r31
      fc:	26 03       	mulsu	r18, r22
      fe:	28 03       	fmul	r18, r16
     100:	2a 03       	fmul	r18, r18
     102:	2c 03       	fmul	r18, r20
     104:	2e 03       	fmul	r18, r22
     106:	30 03       	mulsu	r19, r16
     108:	32 03       	mulsu	r19, r18
     10a:	34 03       	mulsu	r19, r20
     10c:	36 03       	mulsu	r19, r22
     10e:	38 03       	fmul	r19, r16
     110:	3a 03       	fmul	r19, r18
     112:	3c 03       	fmul	r19, r20
     114:	3e 03       	fmul	r19, r22
     116:	40 03       	mulsu	r20, r16
     118:	42 03       	mulsu	r20, r18
     11a:	44 03       	mulsu	r20, r20
     11c:	4e 0f       	add	r20, r30
     11e:	54 0f       	add	r21, r20
     120:	67 0f       	add	r22, r23
     122:	75 0f       	add	r23, r21
     124:	7f 0f       	add	r23, r31
     126:	89 0f       	add	r24, r25
     128:	93 0f       	add	r25, r19
     12a:	9d 0f       	add	r25, r29

0000012c <__ctors_end>:
     12c:	11 24       	eor	r1, r1
     12e:	1f be       	out	0x3f, r1	; 63
     130:	cf ef       	ldi	r28, 0xFF	; 255
     132:	cd bf       	out	0x3d, r28	; 61
     134:	df e3       	ldi	r29, 0x3F	; 63
     136:	de bf       	out	0x3e, r29	; 62

00000138 <__do_clear_bss>:
     138:	29 e3       	ldi	r18, 0x39	; 57
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	b8 e3       	ldi	r27, 0x38	; 56
     13e:	01 c0       	rjmp	.+2      	; 0x142 <.do_clear_bss_start>

00000140 <.do_clear_bss_loop>:
     140:	1d 92       	st	X+, r1

00000142 <.do_clear_bss_start>:
     142:	aa 33       	cpi	r26, 0x3A	; 58
     144:	b2 07       	cpc	r27, r18
     146:	e1 f7       	brne	.-8      	; 0x140 <.do_clear_bss_loop>
     148:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <main>
     14c:	0c 94 11 11 	jmp	0x2222	; 0x2222 <_exit>

00000150 <__bad_interrupt>:
     150:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000154 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
**/
void atmel_start_init(void)
{
	system_init();
     154:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <system_init>
     158:	08 95       	ret

0000015a <getBatt>:
	for(iters=7;iters>0;iters--){
		if(getPIRbit()==1)ret+=(1<<iters);
	}
	if(getPIRbit()==1)ret+=1;
	return ret;
}
     15a:	06 98       	cbi	0x00, 6	; 0
     15c:	e6 e1       	ldi	r30, 0x16	; 22
     15e:	f4 e0       	ldi	r31, 0x04	; 4
     160:	80 81       	ld	r24, Z
     162:	87 7f       	andi	r24, 0xF7	; 247
     164:	80 83       	st	Z, r24
     166:	80 e2       	ldi	r24, 0x20	; 32
     168:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     16c:	82 e0       	ldi	r24, 0x02	; 2
     16e:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     172:	e0 e0       	ldi	r30, 0x00	; 0
     174:	f6 e0       	ldi	r31, 0x06	; 6
     176:	80 81       	ld	r24, Z
     178:	84 60       	ori	r24, 0x04	; 4
     17a:	80 83       	st	Z, r24
     17c:	a1 e0       	ldi	r26, 0x01	; 1
     17e:	b6 e0       	ldi	r27, 0x06	; 6
     180:	8c 91       	ld	r24, X
     182:	86 60       	ori	r24, 0x06	; 6
     184:	8c 93       	st	X, r24
     186:	87 e2       	ldi	r24, 0x27	; 39
     188:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
     18c:	88 ed       	ldi	r24, 0xD8	; 216
     18e:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
     192:	10 92 04 06 	sts	0x0604, r1	; 0x800604 <__TEXT_REGION_LENGTH__+0x700604>
     196:	10 92 09 06 	sts	0x0609, r1	; 0x800609 <__TEXT_REGION_LENGTH__+0x700609>
     19a:	10 92 0a 06 	sts	0x060A, r1	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
     19e:	86 e0       	ldi	r24, 0x06	; 6
     1a0:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
     1a4:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     1a8:	ab e0       	ldi	r26, 0x0B	; 11
     1aa:	b6 e0       	ldi	r27, 0x06	; 6
     1ac:	8c 91       	ld	r24, X
     1ae:	81 60       	ori	r24, 0x01	; 1
     1b0:	8c 93       	st	X, r24
     1b2:	80 81       	ld	r24, Z
     1b4:	81 60       	ori	r24, 0x01	; 1
     1b6:	80 83       	st	Z, r24
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     1be:	eb e0       	ldi	r30, 0x0B	; 11
     1c0:	f6 e0       	ldi	r31, 0x06	; 6
     1c2:	80 81       	ld	r24, Z
     1c4:	80 ff       	sbrs	r24, 0
     1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <getBatt+0x68>
     1c8:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     1cc:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     1d6:	eb e0       	ldi	r30, 0x0B	; 11
     1d8:	f6 e0       	ldi	r31, 0x06	; 6
     1da:	80 81       	ld	r24, Z
     1dc:	80 ff       	sbrs	r24, 0
     1de:	fd cf       	rjmp	.-6      	; 0x1da <getBatt+0x80>
     1e0:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     1e4:	20 91 10 06 	lds	r18, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	98 2f       	mov	r25, r24
     1ec:	88 27       	eor	r24, r24
     1ee:	82 0f       	add	r24, r18
     1f0:	91 1d       	adc	r25, r1
     1f2:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     1f6:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
     1fa:	08 2e       	mov	r0, r24
     1fc:	89 2f       	mov	r24, r25
     1fe:	00 0c       	add	r0, r0
     200:	88 1f       	adc	r24, r24
     202:	99 0b       	sbc	r25, r25
     204:	00 0c       	add	r0, r0
     206:	88 1f       	adc	r24, r24
     208:	99 1f       	adc	r25, r25
     20a:	08 95       	ret

0000020c <getLight>:
     20c:	06 98       	cbi	0x00, 6	; 0
     20e:	e6 e1       	ldi	r30, 0x16	; 22
     210:	f4 e0       	ldi	r31, 0x04	; 4
     212:	80 81       	ld	r24, Z
     214:	87 7f       	andi	r24, 0xF7	; 247
     216:	80 83       	st	Z, r24
     218:	05 9a       	sbi	0x00, 5	; 0
     21a:	0d 9a       	sbi	0x01, 5	; 1
     21c:	00 00       	nop
     21e:	80 e3       	ldi	r24, 0x30	; 48
     220:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     224:	82 e0       	ldi	r24, 0x02	; 2
     226:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     22a:	e0 e0       	ldi	r30, 0x00	; 0
     22c:	f6 e0       	ldi	r31, 0x06	; 6
     22e:	80 81       	ld	r24, Z
     230:	85 60       	ori	r24, 0x05	; 5
     232:	80 83       	st	Z, r24
     234:	a1 e0       	ldi	r26, 0x01	; 1
     236:	b6 e0       	ldi	r27, 0x06	; 6
     238:	8c 91       	ld	r24, X
     23a:	86 60       	ori	r24, 0x06	; 6
     23c:	8c 93       	st	X, r24
     23e:	87 e2       	ldi	r24, 0x27	; 39
     240:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
     244:	88 ed       	ldi	r24, 0xD8	; 216
     246:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
     24a:	10 92 04 06 	sts	0x0604, r1	; 0x800604 <__TEXT_REGION_LENGTH__+0x700604>
     24e:	10 92 09 06 	sts	0x0609, r1	; 0x800609 <__TEXT_REGION_LENGTH__+0x700609>
     252:	10 92 0a 06 	sts	0x060A, r1	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
     256:	86 e0       	ldi	r24, 0x06	; 6
     258:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
     25c:	87 e0       	ldi	r24, 0x07	; 7
     25e:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     262:	ab e0       	ldi	r26, 0x0B	; 11
     264:	b6 e0       	ldi	r27, 0x06	; 6
     266:	8c 91       	ld	r24, X
     268:	81 60       	ori	r24, 0x01	; 1
     26a:	8c 93       	st	X, r24
     26c:	80 81       	ld	r24, Z
     26e:	85 60       	ori	r24, 0x05	; 5
     270:	80 83       	st	Z, r24
     272:	81 e0       	ldi	r24, 0x01	; 1
     274:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     278:	eb e0       	ldi	r30, 0x0B	; 11
     27a:	f6 e0       	ldi	r31, 0x06	; 6
     27c:	80 81       	ld	r24, Z
     27e:	80 ff       	sbrs	r24, 0
     280:	fd cf       	rjmp	.-6      	; 0x27c <getLight+0x70>
     282:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     286:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     290:	eb e0       	ldi	r30, 0x0B	; 11
     292:	f6 e0       	ldi	r31, 0x06	; 6
     294:	80 81       	ld	r24, Z
     296:	80 ff       	sbrs	r24, 0
     298:	fd cf       	rjmp	.-6      	; 0x294 <getLight+0x88>
     29a:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     29e:	20 91 10 06 	lds	r18, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	98 2f       	mov	r25, r24
     2a6:	88 27       	eor	r24, r24
     2a8:	82 0f       	add	r24, r18
     2aa:	91 1d       	adc	r25, r1
     2ac:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     2b0:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
     2b4:	08 2e       	mov	r0, r24
     2b6:	89 2f       	mov	r24, r25
     2b8:	00 0c       	add	r0, r0
     2ba:	88 1f       	adc	r24, r24
     2bc:	99 0b       	sbc	r25, r25
     2be:	00 0c       	add	r0, r0
     2c0:	88 1f       	adc	r24, r24
     2c2:	99 1f       	adc	r25, r25
     2c4:	08 95       	ret

000002c6 <searchRcvBuffuBlox>:
     2c6:	23 e0       	ldi	r18, 0x03	; 3
     2c8:	38 e3       	ldi	r19, 0x38	; 56
     2ca:	20 93 38 39 	sts	0x3938, r18	; 0x803938 <GPSSearchPtr>
     2ce:	30 93 39 39 	sts	0x3939, r19	; 0x803939 <GPSSearchPtr+0x1>
     2d2:	a0 91 34 39 	lds	r26, 0x3934	; 0x803934 <p_GPSrcvData>
     2d6:	b0 91 35 39 	lds	r27, 0x3935	; 0x803935 <p_GPSrcvData+0x1>
     2da:	15 97       	sbiw	r26, 0x05	; 5
     2dc:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     2e0:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     2e4:	9f 01       	movw	r18, r30
     2e6:	2f 5f       	subi	r18, 0xFF	; 255
     2e8:	3f 4f       	sbci	r19, 0xFF	; 255
     2ea:	20 93 38 39 	sts	0x3938, r18	; 0x803938 <GPSSearchPtr>
     2ee:	30 93 39 39 	sts	0x3939, r19	; 0x803939 <GPSSearchPtr+0x1>
     2f2:	91 81       	ldd	r25, Z+1	; 0x01
     2f4:	98 13       	cpse	r25, r24
     2f6:	06 c0       	rjmp	.+12     	; 0x304 <searchRcvBuffuBlox+0x3e>
     2f8:	92 81       	ldd	r25, Z+2	; 0x02
     2fa:	96 13       	cpse	r25, r22
     2fc:	03 c0       	rjmp	.+6      	; 0x304 <searchRcvBuffuBlox+0x3e>
     2fe:	93 81       	ldd	r25, Z+3	; 0x03
     300:	94 17       	cp	r25, r20
     302:	31 f0       	breq	.+12     	; 0x310 <searchRcvBuffuBlox+0x4a>
     304:	2a 17       	cp	r18, r26
     306:	3b 07       	cpc	r19, r27
     308:	48 f3       	brcs	.-46     	; 0x2dc <searchRcvBuffuBlox+0x16>
     30a:	8a e9       	ldi	r24, 0x9A	; 154
     30c:	92 e0       	ldi	r25, 0x02	; 2
     30e:	08 95       	ret
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	08 95       	ret

00000316 <asciiToHex>:
     316:	48 2f       	mov	r20, r24
     318:	86 2f       	mov	r24, r22
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	fc 01       	movw	r30, r24
     31e:	f1 97       	sbiw	r30, 0x31	; 49
     320:	e9 30       	cpi	r30, 0x09	; 9
     322:	f1 05       	cpc	r31, r1
     324:	f8 f4       	brcc	.+62     	; 0x364 <asciiToHex+0x4e>
     326:	e2 5c       	subi	r30, 0xC2	; 194
     328:	ff 4f       	sbci	r31, 0xFF	; 255
     32a:	0c 94 05 11 	jmp	0x220a	; 0x220a <__tablejump2__>
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	1a c0       	rjmp	.+52     	; 0x368 <asciiToHex+0x52>
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	17 c0       	rjmp	.+46     	; 0x368 <asciiToHex+0x52>
     33a:	83 e0       	ldi	r24, 0x03	; 3
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	14 c0       	rjmp	.+40     	; 0x368 <asciiToHex+0x52>
     340:	84 e0       	ldi	r24, 0x04	; 4
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	11 c0       	rjmp	.+34     	; 0x368 <asciiToHex+0x52>
     346:	85 e0       	ldi	r24, 0x05	; 5
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	0e c0       	rjmp	.+28     	; 0x368 <asciiToHex+0x52>
     34c:	86 e0       	ldi	r24, 0x06	; 6
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0b c0       	rjmp	.+22     	; 0x368 <asciiToHex+0x52>
     352:	87 e0       	ldi	r24, 0x07	; 7
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	08 c0       	rjmp	.+16     	; 0x368 <asciiToHex+0x52>
     358:	88 e0       	ldi	r24, 0x08	; 8
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	05 c0       	rjmp	.+10     	; 0x368 <asciiToHex+0x52>
     35e:	89 e0       	ldi	r24, 0x09	; 9
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	02 c0       	rjmp	.+4      	; 0x368 <asciiToHex+0x52>
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	50 e0       	ldi	r21, 0x00	; 0
     36a:	fa 01       	movw	r30, r20
     36c:	f0 97       	sbiw	r30, 0x30	; 48
     36e:	ea 30       	cpi	r30, 0x0A	; 10
     370:	f1 05       	cpc	r31, r1
     372:	c8 f4       	brcc	.+50     	; 0x3a6 <asciiToHex+0x90>
     374:	e9 5b       	subi	r30, 0xB9	; 185
     376:	ff 4f       	sbci	r31, 0xFF	; 255
     378:	0c 94 05 11 	jmp	0x220a	; 0x220a <__tablejump2__>
     37c:	0a 96       	adiw	r24, 0x0a	; 10
     37e:	08 95       	ret
     380:	44 96       	adiw	r24, 0x14	; 20
     382:	08 95       	ret
     384:	4e 96       	adiw	r24, 0x1e	; 30
     386:	08 95       	ret
     388:	88 96       	adiw	r24, 0x28	; 40
     38a:	08 95       	ret
     38c:	c2 96       	adiw	r24, 0x32	; 50
     38e:	08 95       	ret
     390:	cc 96       	adiw	r24, 0x3c	; 60
     392:	08 95       	ret
     394:	8a 5b       	subi	r24, 0xBA	; 186
     396:	9f 4f       	sbci	r25, 0xFF	; 255
     398:	08 95       	ret
     39a:	80 5b       	subi	r24, 0xB0	; 176
     39c:	9f 4f       	sbci	r25, 0xFF	; 255
     39e:	08 95       	ret
     3a0:	86 5a       	subi	r24, 0xA6	; 166
     3a2:	9f 4f       	sbci	r25, 0xFF	; 255
     3a4:	08 95       	ret
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	08 95       	ret

000003ac <asciiHexToHex>:
     3ac:	48 2f       	mov	r20, r24
     3ae:	86 2f       	mov	r24, r22
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	fc 01       	movw	r30, r24
     3b4:	f1 97       	sbiw	r30, 0x31	; 49
     3b6:	e6 31       	cpi	r30, 0x16	; 22
     3b8:	f1 05       	cpc	r31, r1
     3ba:	88 f5       	brcc	.+98     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     3bc:	ef 5a       	subi	r30, 0xAF	; 175
     3be:	ff 4f       	sbci	r31, 0xFF	; 255
     3c0:	0c 94 05 11 	jmp	0x220a	; 0x220a <__tablejump2__>
     3c4:	81 e0       	ldi	r24, 0x01	; 1
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	2c c0       	rjmp	.+88     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3ca:	82 e0       	ldi	r24, 0x02	; 2
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	29 c0       	rjmp	.+82     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3d0:	83 e0       	ldi	r24, 0x03	; 3
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	26 c0       	rjmp	.+76     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3d6:	84 e0       	ldi	r24, 0x04	; 4
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	23 c0       	rjmp	.+70     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3dc:	85 e0       	ldi	r24, 0x05	; 5
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	20 c0       	rjmp	.+64     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3e2:	86 e0       	ldi	r24, 0x06	; 6
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	1d c0       	rjmp	.+58     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3e8:	87 e0       	ldi	r24, 0x07	; 7
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	1a c0       	rjmp	.+52     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3ee:	88 e0       	ldi	r24, 0x08	; 8
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	17 c0       	rjmp	.+46     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3f4:	89 e0       	ldi	r24, 0x09	; 9
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	14 c0       	rjmp	.+40     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3fa:	8a e0       	ldi	r24, 0x0A	; 10
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	11 c0       	rjmp	.+34     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     400:	8b e0       	ldi	r24, 0x0B	; 11
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	0e c0       	rjmp	.+28     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     406:	8c e0       	ldi	r24, 0x0C	; 12
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0b c0       	rjmp	.+22     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     40c:	8d e0       	ldi	r24, 0x0D	; 13
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	08 c0       	rjmp	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     412:	8e e0       	ldi	r24, 0x0E	; 14
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	05 c0       	rjmp	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     418:	8f e0       	ldi	r24, 0x0F	; 15
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	02 c0       	rjmp	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	50 e0       	ldi	r21, 0x00	; 0
     424:	fa 01       	movw	r30, r20
     426:	f0 97       	sbiw	r30, 0x30	; 48
     428:	e7 31       	cpi	r30, 0x17	; 23
     42a:	f1 05       	cpc	r31, r1
     42c:	58 f5       	brcc	.+86     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     42e:	e9 59       	subi	r30, 0x99	; 153
     430:	ff 4f       	sbci	r31, 0xFF	; 255
     432:	0c 94 05 11 	jmp	0x220a	; 0x220a <__tablejump2__>
     436:	40 96       	adiw	r24, 0x10	; 16
     438:	08 95       	ret
     43a:	80 96       	adiw	r24, 0x20	; 32
     43c:	08 95       	ret
     43e:	c0 96       	adiw	r24, 0x30	; 48
     440:	08 95       	ret
     442:	80 5c       	subi	r24, 0xC0	; 192
     444:	9f 4f       	sbci	r25, 0xFF	; 255
     446:	08 95       	ret
     448:	80 5b       	subi	r24, 0xB0	; 176
     44a:	9f 4f       	sbci	r25, 0xFF	; 255
     44c:	08 95       	ret
     44e:	80 5a       	subi	r24, 0xA0	; 160
     450:	9f 4f       	sbci	r25, 0xFF	; 255
     452:	08 95       	ret
     454:	80 59       	subi	r24, 0x90	; 144
     456:	9f 4f       	sbci	r25, 0xFF	; 255
     458:	08 95       	ret
     45a:	80 58       	subi	r24, 0x80	; 128
     45c:	9f 4f       	sbci	r25, 0xFF	; 255
     45e:	08 95       	ret
     460:	80 57       	subi	r24, 0x70	; 112
     462:	9f 4f       	sbci	r25, 0xFF	; 255
     464:	08 95       	ret
     466:	80 eb       	ldi	r24, 0xB0	; 176
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	08 95       	ret
     46c:	80 ec       	ldi	r24, 0xC0	; 192
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	08 95       	ret
     472:	80 ed       	ldi	r24, 0xD0	; 208
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	08 95       	ret
     478:	80 ee       	ldi	r24, 0xE0	; 224
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	08 95       	ret
     47e:	80 ef       	ldi	r24, 0xF0	; 240
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	08 95       	ret
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	08 95       	ret
     48a:	80 ea       	ldi	r24, 0xA0	; 160
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	08 95       	ret

00000490 <delay_ms>:
     490:	ab 01       	movw	r20, r22
     492:	bc 01       	movw	r22, r24
     494:	41 15       	cp	r20, r1
     496:	51 05       	cpc	r21, r1
     498:	61 05       	cpc	r22, r1
     49a:	71 05       	cpc	r23, r1
     49c:	61 f4       	brne	.+24     	; 0x4b6 <delay_ms+0x26>
     49e:	08 95       	ret
     4a0:	00 00       	nop
     4a2:	01 96       	adiw	r24, 0x01	; 1
     4a4:	8a 39       	cpi	r24, 0x9A	; 154
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	92 07       	cpc	r25, r18
     4aa:	d1 f7       	brne	.-12     	; 0x4a0 <delay_ms+0x10>
     4ac:	41 50       	subi	r20, 0x01	; 1
     4ae:	51 09       	sbc	r21, r1
     4b0:	61 09       	sbc	r22, r1
     4b2:	71 09       	sbc	r23, r1
     4b4:	19 f0       	breq	.+6      	; 0x4bc <delay_ms+0x2c>
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	f2 cf       	rjmp	.-28     	; 0x4a0 <delay_ms+0x10>
     4bc:	08 95       	ret

000004be <redBlink>:
     4be:	cf 93       	push	r28
     4c0:	c8 2f       	mov	r28, r24
     4c2:	42 9a       	sbi	0x08, 2	; 8
     4c4:	88 23       	and	r24, r24
     4c6:	81 f0       	breq	.+32     	; 0x4e8 <redBlink+0x2a>
     4c8:	4a 98       	cbi	0x09, 2	; 9
     4ca:	6a e0       	ldi	r22, 0x0A	; 10
     4cc:	70 e0       	ldi	r23, 0x00	; 0
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     4d6:	4a 9a       	sbi	0x09, 2	; 9
     4d8:	62 e3       	ldi	r22, 0x32	; 50
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     4e4:	c1 50       	subi	r28, 0x01	; 1
     4e6:	81 f7       	brne	.-32     	; 0x4c8 <redBlink+0xa>
     4e8:	42 98       	cbi	0x08, 2	; 8
     4ea:	e2 e5       	ldi	r30, 0x52	; 82
     4ec:	f4 e0       	ldi	r31, 0x04	; 4
     4ee:	80 81       	ld	r24, Z
     4f0:	88 60       	ori	r24, 0x08	; 8
     4f2:	80 83       	st	Z, r24
     4f4:	cf 91       	pop	r28
     4f6:	08 95       	ret

000004f8 <redBlinkLong>:
     4f8:	cf 93       	push	r28
     4fa:	c8 2f       	mov	r28, r24
     4fc:	42 9a       	sbi	0x08, 2	; 8
     4fe:	88 23       	and	r24, r24
     500:	81 f0       	breq	.+32     	; 0x522 <redBlinkLong+0x2a>
     502:	4a 98       	cbi	0x09, 2	; 9
     504:	6c e2       	ldi	r22, 0x2C	; 44
     506:	71 e0       	ldi	r23, 0x01	; 1
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     510:	4a 9a       	sbi	0x09, 2	; 9
     512:	62 e3       	ldi	r22, 0x32	; 50
     514:	70 e0       	ldi	r23, 0x00	; 0
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     51e:	c1 50       	subi	r28, 0x01	; 1
     520:	81 f7       	brne	.-32     	; 0x502 <redBlinkLong+0xa>
     522:	42 98       	cbi	0x08, 2	; 8
     524:	e2 e5       	ldi	r30, 0x52	; 82
     526:	f4 e0       	ldi	r31, 0x04	; 4
     528:	80 81       	ld	r24, Z
     52a:	88 60       	ori	r24, 0x08	; 8
     52c:	80 83       	st	Z, r24
     52e:	cf 91       	pop	r28
     530:	08 95       	ret

00000532 <myDelay_hus>:
     532:	ab 01       	movw	r20, r22
     534:	bc 01       	movw	r22, r24
     536:	41 15       	cp	r20, r1
     538:	51 05       	cpc	r21, r1
     53a:	61 05       	cpc	r22, r1
     53c:	71 05       	cpc	r23, r1
     53e:	59 f4       	brne	.+22     	; 0x556 <myDelay_hus+0x24>
     540:	08 95       	ret
     542:	00 00       	nop
     544:	01 96       	adiw	r24, 0x01	; 1
     546:	8e 32       	cpi	r24, 0x2E	; 46
     548:	91 05       	cpc	r25, r1
     54a:	d9 f7       	brne	.-10     	; 0x542 <myDelay_hus+0x10>
     54c:	41 50       	subi	r20, 0x01	; 1
     54e:	51 09       	sbc	r21, r1
     550:	61 09       	sbc	r22, r1
     552:	71 09       	sbc	r23, r1
     554:	19 f0       	breq	.+6      	; 0x55c <myDelay_hus+0x2a>
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	f3 cf       	rjmp	.-26     	; 0x542 <myDelay_hus+0x10>
     55c:	08 95       	ret

0000055e <usart_put_string>:
     55e:	66 23       	and	r22, r22
     560:	71 f0       	breq	.+28     	; 0x57e <usart_put_string+0x20>
     562:	dc 01       	movw	r26, r24
     564:	9c 01       	movw	r18, r24
     566:	26 0f       	add	r18, r22
     568:	31 1d       	adc	r19, r1
     56a:	e0 e0       	ldi	r30, 0x00	; 0
     56c:	f8 e0       	ldi	r31, 0x08	; 8
     56e:	94 81       	ldd	r25, Z+4	; 0x04
     570:	95 ff       	sbrs	r25, 5
     572:	fd cf       	rjmp	.-6      	; 0x56e <usart_put_string+0x10>
     574:	9d 91       	ld	r25, X+
     576:	92 83       	std	Z+2, r25	; 0x02
     578:	a2 17       	cp	r26, r18
     57a:	b3 07       	cpc	r27, r19
     57c:	c1 f7       	brne	.-16     	; 0x56e <usart_put_string+0x10>
     57e:	08 95       	ret

00000580 <initGPSuBlox>:
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	cd b7       	in	r28, 0x3d	; 61
     586:	de b7       	in	r29, 0x3e	; 62
     588:	c1 59       	subi	r28, 0x91	; 145
     58a:	d1 09       	sbc	r29, r1
     58c:	cd bf       	out	0x3d, r28	; 61
     58e:	de bf       	out	0x3e, r29	; 62
     590:	68 ee       	ldi	r22, 0xE8	; 232
     592:	73 e0       	ldi	r23, 0x03	; 3
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     59c:	8d e1       	ldi	r24, 0x1D	; 29
     59e:	e6 e2       	ldi	r30, 0x26	; 38
     5a0:	f2 ea       	ldi	r31, 0xA2	; 162
     5a2:	de 01       	movw	r26, r28
     5a4:	11 96       	adiw	r26, 0x01	; 1
     5a6:	01 90       	ld	r0, Z+
     5a8:	0d 92       	st	X+, r0
     5aa:	8a 95       	dec	r24
     5ac:	e1 f7       	brne	.-8      	; 0x5a6 <initGPSuBlox+0x26>
     5ae:	6d e1       	ldi	r22, 0x1D	; 29
     5b0:	ce 01       	movw	r24, r28
     5b2:	01 96       	adiw	r24, 0x01	; 1
     5b4:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     5b8:	8d e1       	ldi	r24, 0x1D	; 29
     5ba:	e3 e4       	ldi	r30, 0x43	; 67
     5bc:	f2 ea       	ldi	r31, 0xA2	; 162
     5be:	de 01       	movw	r26, r28
     5c0:	5e 96       	adiw	r26, 0x1e	; 30
     5c2:	01 90       	ld	r0, Z+
     5c4:	0d 92       	st	X+, r0
     5c6:	8a 95       	dec	r24
     5c8:	e1 f7       	brne	.-8      	; 0x5c2 <initGPSuBlox+0x42>
     5ca:	6d e1       	ldi	r22, 0x1D	; 29
     5cc:	ce 01       	movw	r24, r28
     5ce:	4e 96       	adiw	r24, 0x1e	; 30
     5d0:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     5d4:	8d e1       	ldi	r24, 0x1D	; 29
     5d6:	e0 e6       	ldi	r30, 0x60	; 96
     5d8:	f2 ea       	ldi	r31, 0xA2	; 162
     5da:	de 01       	movw	r26, r28
     5dc:	db 96       	adiw	r26, 0x3b	; 59
     5de:	01 90       	ld	r0, Z+
     5e0:	0d 92       	st	X+, r0
     5e2:	8a 95       	dec	r24
     5e4:	e1 f7       	brne	.-8      	; 0x5de <initGPSuBlox+0x5e>
     5e6:	6d e1       	ldi	r22, 0x1D	; 29
     5e8:	ce 01       	movw	r24, r28
     5ea:	cb 96       	adiw	r24, 0x3b	; 59
     5ec:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     5f0:	8d e1       	ldi	r24, 0x1D	; 29
     5f2:	ed e7       	ldi	r30, 0x7D	; 125
     5f4:	f2 ea       	ldi	r31, 0xA2	; 162
     5f6:	de 01       	movw	r26, r28
     5f8:	a8 5a       	subi	r26, 0xA8	; 168
     5fa:	bf 4f       	sbci	r27, 0xFF	; 255
     5fc:	01 90       	ld	r0, Z+
     5fe:	0d 92       	st	X+, r0
     600:	8a 95       	dec	r24
     602:	e1 f7       	brne	.-8      	; 0x5fc <initGPSuBlox+0x7c>
     604:	6d e1       	ldi	r22, 0x1D	; 29
     606:	ce 01       	movw	r24, r28
     608:	88 5a       	subi	r24, 0xA8	; 168
     60a:	9f 4f       	sbci	r25, 0xFF	; 255
     60c:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     610:	8d e1       	ldi	r24, 0x1D	; 29
     612:	ea e9       	ldi	r30, 0x9A	; 154
     614:	f2 ea       	ldi	r31, 0xA2	; 162
     616:	de 01       	movw	r26, r28
     618:	ab 58       	subi	r26, 0x8B	; 139
     61a:	bf 4f       	sbci	r27, 0xFF	; 255
     61c:	01 90       	ld	r0, Z+
     61e:	0d 92       	st	X+, r0
     620:	8a 95       	dec	r24
     622:	e1 f7       	brne	.-8      	; 0x61c <initGPSuBlox+0x9c>
     624:	6d e1       	ldi	r22, 0x1D	; 29
     626:	ce 01       	movw	r24, r28
     628:	8b 58       	subi	r24, 0x8B	; 139
     62a:	9f 4f       	sbci	r25, 0xFF	; 255
     62c:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     630:	cf 56       	subi	r28, 0x6F	; 111
     632:	df 4f       	sbci	r29, 0xFF	; 255
     634:	cd bf       	out	0x3d, r28	; 61
     636:	de bf       	out	0x3e, r29	; 62
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <hex1ToAscii>:
     63e:	8f 70       	andi	r24, 0x0F	; 15
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	fc 01       	movw	r30, r24
     644:	e2 58       	subi	r30, 0x82	; 130
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	0c 94 05 11 	jmp	0x220a	; 0x220a <__tablejump2__>
     64c:	80 e3       	ldi	r24, 0x30	; 48
     64e:	08 95       	ret
     650:	81 e3       	ldi	r24, 0x31	; 49
     652:	08 95       	ret
     654:	82 e3       	ldi	r24, 0x32	; 50
     656:	08 95       	ret
     658:	83 e3       	ldi	r24, 0x33	; 51
     65a:	08 95       	ret
     65c:	84 e3       	ldi	r24, 0x34	; 52
     65e:	08 95       	ret
     660:	85 e3       	ldi	r24, 0x35	; 53
     662:	08 95       	ret
     664:	86 e3       	ldi	r24, 0x36	; 54
     666:	08 95       	ret
     668:	87 e3       	ldi	r24, 0x37	; 55
     66a:	08 95       	ret
     66c:	88 e3       	ldi	r24, 0x38	; 56
     66e:	08 95       	ret
     670:	89 e3       	ldi	r24, 0x39	; 57
     672:	08 95       	ret
     674:	81 e4       	ldi	r24, 0x41	; 65
     676:	08 95       	ret
     678:	82 e4       	ldi	r24, 0x42	; 66
     67a:	08 95       	ret
     67c:	83 e4       	ldi	r24, 0x43	; 67
     67e:	08 95       	ret
     680:	84 e4       	ldi	r24, 0x44	; 68
     682:	08 95       	ret
     684:	85 e4       	ldi	r24, 0x45	; 69
     686:	08 95       	ret
     688:	86 e4       	ldi	r24, 0x46	; 70
     68a:	08 95       	ret

0000068c <hex2ToAscii>:
     68c:	1f 93       	push	r17
     68e:	cf 93       	push	r28
     690:	df 93       	push	r29
     692:	ec 01       	movw	r28, r24
     694:	0e 94 1f 03 	call	0x63e	; 0x63e <hex1ToAscii>
     698:	18 2f       	mov	r17, r24
     69a:	ce 01       	movw	r24, r28
     69c:	95 95       	asr	r25
     69e:	87 95       	ror	r24
     6a0:	95 95       	asr	r25
     6a2:	87 95       	ror	r24
     6a4:	95 95       	asr	r25
     6a6:	87 95       	ror	r24
     6a8:	95 95       	asr	r25
     6aa:	87 95       	ror	r24
     6ac:	0e 94 1f 03 	call	0x63e	; 0x63e <hex1ToAscii>
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	98 2f       	mov	r25, r24
     6b4:	88 27       	eor	r24, r24
     6b6:	81 0f       	add	r24, r17
     6b8:	91 1d       	adc	r25, r1
     6ba:	df 91       	pop	r29
     6bc:	cf 91       	pop	r28
     6be:	1f 91       	pop	r17
     6c0:	08 95       	ret

000006c2 <LCDshort>:
     6c2:	df 92       	push	r13
     6c4:	ef 92       	push	r14
     6c6:	ff 92       	push	r15
     6c8:	0f 93       	push	r16
     6ca:	1f 93       	push	r17
     6cc:	cf 93       	push	r28
     6ce:	df 93       	push	r29
     6d0:	00 d0       	rcall	.+0      	; 0x6d2 <LCDshort+0x10>
     6d2:	00 d0       	rcall	.+0      	; 0x6d4 <LCDshort+0x12>
     6d4:	cd b7       	in	r28, 0x3d	; 61
     6d6:	de b7       	in	r29, 0x3e	; 62
     6d8:	7c 01       	movw	r14, r24
     6da:	16 2f       	mov	r17, r22
     6dc:	8f 2d       	mov	r24, r15
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	0e 94 46 03 	call	0x68c	; 0x68c <hex2ToAscii>
     6e4:	08 2f       	mov	r16, r24
     6e6:	d9 2e       	mov	r13, r25
     6e8:	c7 01       	movw	r24, r14
     6ea:	99 27       	eor	r25, r25
     6ec:	0e 94 46 03 	call	0x68c	; 0x68c <hex2ToAscii>
     6f0:	d9 82       	std	Y+1, r13	; 0x01
     6f2:	0a 83       	std	Y+2, r16	; 0x02
     6f4:	9b 83       	std	Y+3, r25	; 0x03
     6f6:	8c 83       	std	Y+4, r24	; 0x04
     6f8:	12 30       	cpi	r17, 0x02	; 2
     6fa:	51 f0       	breq	.+20     	; 0x710 <LCDshort+0x4e>
     6fc:	13 30       	cpi	r17, 0x03	; 3
     6fe:	71 f0       	breq	.+28     	; 0x71c <LCDshort+0x5a>
     700:	11 30       	cpi	r17, 0x01	; 1
     702:	91 f4       	brne	.+36     	; 0x728 <LCDshort+0x66>
     704:	61 e0       	ldi	r22, 0x01	; 1
     706:	ce 01       	movw	r24, r28
     708:	04 96       	adiw	r24, 0x04	; 4
     70a:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     70e:	11 c0       	rjmp	.+34     	; 0x732 <LCDshort+0x70>
     710:	62 e0       	ldi	r22, 0x02	; 2
     712:	ce 01       	movw	r24, r28
     714:	03 96       	adiw	r24, 0x03	; 3
     716:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     71a:	0b c0       	rjmp	.+22     	; 0x732 <LCDshort+0x70>
     71c:	63 e0       	ldi	r22, 0x03	; 3
     71e:	ce 01       	movw	r24, r28
     720:	02 96       	adiw	r24, 0x02	; 2
     722:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     726:	05 c0       	rjmp	.+10     	; 0x732 <LCDshort+0x70>
     728:	64 e0       	ldi	r22, 0x04	; 4
     72a:	ce 01       	movw	r24, r28
     72c:	01 96       	adiw	r24, 0x01	; 1
     72e:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     732:	24 96       	adiw	r28, 0x04	; 4
     734:	cd bf       	out	0x3d, r28	; 61
     736:	de bf       	out	0x3e, r29	; 62
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	ff 90       	pop	r15
     742:	ef 90       	pop	r14
     744:	df 90       	pop	r13
     746:	08 95       	ret

00000748 <LCDclear>:
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	cd b7       	in	r28, 0x3d	; 61
     74e:	de b7       	in	r29, 0x3e	; 62
     750:	28 97       	sbiw	r28, 0x08	; 8
     752:	cd bf       	out	0x3d, r28	; 61
     754:	de bf       	out	0x3e, r29	; 62
     756:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
     75a:	88 e0       	ldi	r24, 0x08	; 8
     75c:	e7 eb       	ldi	r30, 0xB7	; 183
     75e:	f2 ea       	ldi	r31, 0xA2	; 162
     760:	de 01       	movw	r26, r28
     762:	11 96       	adiw	r26, 0x01	; 1
     764:	01 90       	ld	r0, Z+
     766:	0d 92       	st	X+, r0
     768:	8a 95       	dec	r24
     76a:	e1 f7       	brne	.-8      	; 0x764 <LCDclear+0x1c>
     76c:	68 e0       	ldi	r22, 0x08	; 8
     76e:	ce 01       	movw	r24, r28
     770:	01 96       	adiw	r24, 0x01	; 1
     772:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     776:	6a e0       	ldi	r22, 0x0A	; 10
     778:	70 e0       	ldi	r23, 0x00	; 0
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     782:	28 96       	adiw	r28, 0x08	; 8
     784:	cd bf       	out	0x3d, r28	; 61
     786:	de bf       	out	0x3e, r29	; 62
     788:	df 91       	pop	r29
     78a:	cf 91       	pop	r28
     78c:	08 95       	ret

0000078e <LCDspace>:
     78e:	61 e0       	ldi	r22, 0x01	; 1
     790:	8d ed       	ldi	r24, 0xDD	; 221
     792:	92 ea       	ldi	r25, 0xA2	; 162
     794:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     798:	6a e0       	ldi	r22, 0x0A	; 10
     79a:	70 e0       	ldi	r23, 0x00	; 0
     79c:	80 e0       	ldi	r24, 0x00	; 0
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     7a4:	08 95       	ret

000007a6 <clrRx>:
     7a6:	84 e0       	ldi	r24, 0x04	; 4
     7a8:	98 e3       	ldi	r25, 0x38	; 56
     7aa:	80 93 34 39 	sts	0x3934, r24	; 0x803934 <p_GPSrcvData>
     7ae:	90 93 35 39 	sts	0x3935, r25	; 0x803935 <p_GPSrcvData+0x1>
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	28 e5       	ldi	r18, 0x58	; 88
     7b8:	e0 91 34 39 	lds	r30, 0x3934	; 0x803934 <p_GPSrcvData>
     7bc:	f0 91 35 39 	lds	r31, 0x3935	; 0x803935 <p_GPSrcvData+0x1>
     7c0:	e8 0f       	add	r30, r24
     7c2:	f9 1f       	adc	r31, r25
     7c4:	20 83       	st	Z, r18
     7c6:	01 96       	adiw	r24, 0x01	; 1
     7c8:	86 3b       	cpi	r24, 0xB6	; 182
     7ca:	91 05       	cpc	r25, r1
     7cc:	a9 f7       	brne	.-22     	; 0x7b8 <clrRx+0x12>
     7ce:	84 e0       	ldi	r24, 0x04	; 4
     7d0:	98 e3       	ldi	r25, 0x38	; 56
     7d2:	80 93 34 39 	sts	0x3934, r24	; 0x803934 <p_GPSrcvData>
     7d6:	90 93 35 39 	sts	0x3935, r25	; 0x803935 <p_GPSrcvData+0x1>
     7da:	08 95       	ret

000007dc <gpsReqDateUblox>:
     7dc:	bf 92       	push	r11
     7de:	cf 92       	push	r12
     7e0:	df 92       	push	r13
     7e2:	ef 92       	push	r14
     7e4:	ff 92       	push	r15
     7e6:	0f 93       	push	r16
     7e8:	1f 93       	push	r17
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
     7f2:	6f 97       	sbiw	r28, 0x1f	; 31
     7f4:	cd bf       	out	0x3d, r28	; 61
     7f6:	de bf       	out	0x3e, r29	; 62
     7f8:	8f e0       	ldi	r24, 0x0F	; 15
     7fa:	ef eb       	ldi	r30, 0xBF	; 191
     7fc:	f2 ea       	ldi	r31, 0xA2	; 162
     7fe:	de 01       	movw	r26, r28
     800:	11 96       	adiw	r26, 0x01	; 1
     802:	01 90       	ld	r0, Z+
     804:	0d 92       	st	X+, r0
     806:	8a 95       	dec	r24
     808:	e1 f7       	brne	.-8      	; 0x802 <gpsReqDateUblox+0x26>
     80a:	04 e0       	ldi	r16, 0x04	; 4
     80c:	b1 2c       	mov	r11, r1
     80e:	c1 2c       	mov	r12, r1
     810:	68 94       	set
     812:	dd 24       	eor	r13, r13
     814:	d3 f8       	bld	r13, 3
     816:	0f 2e       	mov	r0, r31
     818:	fb eb       	ldi	r31, 0xBB	; 187
     81a:	ef 2e       	mov	r14, r31
     81c:	f8 e3       	ldi	r31, 0x38	; 56
     81e:	ff 2e       	mov	r15, r31
     820:	f0 2d       	mov	r31, r0
     822:	a8 95       	wdr
     824:	6f e0       	ldi	r22, 0x0F	; 15
     826:	ce 01       	movw	r24, r28
     828:	01 96       	adiw	r24, 0x01	; 1
     82a:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     82e:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <clrRx>
     832:	f6 01       	movw	r30, r12
     834:	85 81       	ldd	r24, Z+5	; 0x05
     836:	80 68       	ori	r24, 0x80	; 128
     838:	85 83       	std	Z+5, r24	; 0x05
     83a:	10 92 2c 39 	sts	0x392C, r1	; 0x80392c <endOfLineFlag>
     83e:	78 94       	sei
     840:	80 91 2c 39 	lds	r24, 0x392C	; 0x80392c <endOfLineFlag>
     844:	81 11       	cpse	r24, r1
     846:	0a c0       	rjmp	.+20     	; 0x85c <gpsReqDateUblox+0x80>
     848:	64 e6       	ldi	r22, 0x64	; 100
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     854:	1f e0       	ldi	r17, 0x0F	; 15
     856:	11 50       	subi	r17, 0x01	; 1
     858:	09 f0       	breq	.+2      	; 0x85c <gpsReqDateUblox+0x80>
     85a:	0e c1       	rjmp	.+540    	; 0xa78 <gpsReqDateUblox+0x29c>
     85c:	80 91 2a 39 	lds	r24, 0x392A	; 0x80392a <timeToFix>
     860:	90 91 2b 39 	lds	r25, 0x392B	; 0x80392b <timeToFix+0x1>
     864:	01 96       	adiw	r24, 0x01	; 1
     866:	80 93 2a 39 	sts	0x392A, r24	; 0x80392a <timeToFix>
     86a:	90 93 2b 39 	sts	0x392B, r25	; 0x80392b <timeToFix+0x1>
     86e:	81 3d       	cpi	r24, 0xD1	; 209
     870:	f2 e0       	ldi	r31, 0x02	; 2
     872:	9f 07       	cpc	r25, r31
     874:	24 f0       	brlt	.+8      	; 0x87e <gpsReqDateUblox+0xa2>
     876:	20 91 33 39 	lds	r18, 0x3933	; 0x803933 <mState>
     87a:	21 30       	cpi	r18, 0x01	; 1
     87c:	19 f4       	brne	.+6      	; 0x884 <gpsReqDateUblox+0xa8>
     87e:	8d 3a       	cpi	r24, 0xAD	; 173
     880:	93 40       	sbci	r25, 0x03	; 3
     882:	34 f0       	brlt	.+12     	; 0x890 <gpsReqDateUblox+0xb4>
     884:	8a e9       	ldi	r24, 0x9A	; 154
     886:	80 93 37 39 	sts	0x3937, r24	; 0x803937 <uBloxStatus>
     88a:	8a e9       	ldi	r24, 0x9A	; 154
     88c:	92 e0       	ldi	r25, 0x02	; 2
     88e:	fb c0       	rjmp	.+502    	; 0xa86 <gpsReqDateUblox+0x2aa>
     890:	f6 01       	movw	r30, r12
     892:	85 81       	ldd	r24, Z+5	; 0x05
     894:	8f 77       	andi	r24, 0x7F	; 127
     896:	85 83       	std	Z+5, r24	; 0x05
     898:	41 e4       	ldi	r20, 0x41	; 65
     89a:	64 e4       	ldi	r22, 0x44	; 68
     89c:	8a e5       	ldi	r24, 0x5A	; 90
     89e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <searchRcvBuffuBlox>
     8a2:	89 2b       	or	r24, r25
     8a4:	09 f0       	breq	.+2      	; 0x8a8 <gpsReqDateUblox+0xcc>
     8a6:	67 c0       	rjmp	.+206    	; 0x976 <gpsReqDateUblox+0x19a>
     8a8:	20 91 38 39 	lds	r18, 0x3938	; 0x803938 <GPSSearchPtr>
     8ac:	30 91 39 39 	lds	r19, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     8b0:	d9 01       	movw	r26, r18
     8b2:	12 97       	sbiw	r26, 0x02	; 2
     8b4:	f8 e3       	ldi	r31, 0x38	; 56
     8b6:	aa 3b       	cpi	r26, 0xBA	; 186
     8b8:	bf 07       	cpc	r27, r31
     8ba:	09 f0       	breq	.+2      	; 0x8be <gpsReqDateUblox+0xe2>
     8bc:	78 f4       	brcc	.+30     	; 0x8dc <gpsReqDateUblox+0x100>
     8be:	fd 01       	movw	r30, r26
     8c0:	80 81       	ld	r24, Z
     8c2:	8a 32       	cpi	r24, 0x2A	; 42
     8c4:	69 f0       	breq	.+26     	; 0x8e0 <gpsReqDateUblox+0x104>
     8c6:	31 96       	adiw	r30, 0x01	; 1
     8c8:	10 e0       	ldi	r17, 0x00	; 0
     8ca:	df 01       	movw	r26, r30
     8cc:	18 27       	eor	r17, r24
     8ce:	ee 16       	cp	r14, r30
     8d0:	ff 06       	cpc	r15, r31
     8d2:	39 f0       	breq	.+14     	; 0x8e2 <gpsReqDateUblox+0x106>
     8d4:	81 91       	ld	r24, Z+
     8d6:	8a 32       	cpi	r24, 0x2A	; 42
     8d8:	c1 f7       	brne	.-16     	; 0x8ca <gpsReqDateUblox+0xee>
     8da:	03 c0       	rjmp	.+6      	; 0x8e2 <gpsReqDateUblox+0x106>
     8dc:	10 e0       	ldi	r17, 0x00	; 0
     8de:	01 c0       	rjmp	.+2      	; 0x8e2 <gpsReqDateUblox+0x106>
     8e0:	10 e0       	ldi	r17, 0x00	; 0
     8e2:	12 96       	adiw	r26, 0x02	; 2
     8e4:	6c 91       	ld	r22, X
     8e6:	12 97       	sbiw	r26, 0x02	; 2
     8e8:	11 96       	adiw	r26, 0x01	; 1
     8ea:	8c 91       	ld	r24, X
     8ec:	0e 94 d6 01 	call	0x3ac	; 0x3ac <asciiHexToHex>
     8f0:	21 2f       	mov	r18, r17
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	28 17       	cp	r18, r24
     8f6:	39 07       	cpc	r19, r25
     8f8:	f1 f5       	brne	.+124    	; 0x976 <gpsReqDateUblox+0x19a>
     8fa:	34 c0       	rjmp	.+104    	; 0x964 <gpsReqDateUblox+0x188>
     8fc:	cf 01       	movw	r24, r30
     8fe:	01 96       	adiw	r24, 0x01	; 1
     900:	80 93 38 39 	sts	0x3938, r24	; 0x803938 <GPSSearchPtr>
     904:	90 93 39 39 	sts	0x3939, r25	; 0x803939 <GPSSearchPtr+0x1>
     908:	81 81       	ldd	r24, Z+1	; 0x01
     90a:	8c 32       	cpi	r24, 0x2C	; 44
     90c:	61 f5       	brne	.+88     	; 0x966 <gpsReqDateUblox+0x18a>
     90e:	2f 5f       	subi	r18, 0xFF	; 255
     910:	22 30       	cpi	r18, 0x02	; 2
     912:	49 f5       	brne	.+82     	; 0x966 <gpsReqDateUblox+0x18a>
     914:	22 81       	ldd	r18, Z+2	; 0x02
     916:	2c 32       	cpi	r18, 0x2C	; 44
     918:	71 f1       	breq	.+92     	; 0x976 <gpsReqDateUblox+0x19a>
     91a:	36 81       	ldd	r19, Z+6	; 0x06
     91c:	38 35       	cpi	r19, 0x58	; 88
     91e:	59 f1       	breq	.+86     	; 0x976 <gpsReqDateUblox+0x19a>
     920:	8b 2d       	mov	r24, r11
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	a4 e1       	ldi	r26, 0x14	; 20
     926:	b0 e0       	ldi	r27, 0x00	; 0
     928:	ac 0f       	add	r26, r28
     92a:	bd 1f       	adc	r27, r29
     92c:	a8 0f       	add	r26, r24
     92e:	b9 1f       	adc	r27, r25
     930:	3c 93       	st	X, r19
     932:	a0 e1       	ldi	r26, 0x10	; 16
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	ac 0f       	add	r26, r28
     938:	bd 1f       	adc	r27, r29
     93a:	a8 0f       	add	r26, r24
     93c:	b9 1f       	adc	r27, r25
     93e:	35 81       	ldd	r19, Z+5	; 0x05
     940:	3c 93       	st	X, r19
     942:	a8 e1       	ldi	r26, 0x18	; 24
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	ac 0f       	add	r26, r28
     948:	bd 1f       	adc	r27, r29
     94a:	a8 0f       	add	r26, r24
     94c:	b9 1f       	adc	r27, r25
     94e:	33 81       	ldd	r19, Z+3	; 0x03
     950:	3c 93       	st	X, r19
     952:	ec e1       	ldi	r30, 0x1C	; 28
     954:	f0 e0       	ldi	r31, 0x00	; 0
     956:	ec 0f       	add	r30, r28
     958:	fd 1f       	adc	r31, r29
     95a:	e8 0f       	add	r30, r24
     95c:	f9 1f       	adc	r31, r25
     95e:	20 83       	st	Z, r18
     960:	b3 94       	inc	r11
     962:	09 c0       	rjmp	.+18     	; 0x976 <gpsReqDateUblox+0x19a>
     964:	20 e0       	ldi	r18, 0x00	; 0
     966:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     96a:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     96e:	88 e3       	ldi	r24, 0x38	; 56
     970:	ea 3b       	cpi	r30, 0xBA	; 186
     972:	f8 07       	cpc	r31, r24
     974:	18 f2       	brcs	.-122    	; 0x8fc <gpsReqDateUblox+0x120>
     976:	01 50       	subi	r16, 0x01	; 1
     978:	09 f0       	breq	.+2      	; 0x97c <gpsReqDateUblox+0x1a0>
     97a:	53 cf       	rjmp	.-346    	; 0x822 <gpsReqDateUblox+0x46>
     97c:	1f 89       	ldd	r17, Y+23	; 0x17
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	9e 89       	ldd	r25, Y+22	; 0x16
     982:	91 13       	cpse	r25, r17
     984:	80 e0       	ldi	r24, 0x00	; 0
     986:	9d 89       	ldd	r25, Y+21	; 0x15
     988:	19 13       	cpse	r17, r25
     98a:	01 c0       	rjmp	.+2      	; 0x98e <gpsReqDateUblox+0x1b2>
     98c:	8f 5f       	subi	r24, 0xFF	; 255
     98e:	9c 89       	ldd	r25, Y+20	; 0x14
     990:	19 13       	cpse	r17, r25
     992:	01 c0       	rjmp	.+2      	; 0x996 <gpsReqDateUblox+0x1ba>
     994:	8f 5f       	subi	r24, 0xFF	; 255
     996:	83 30       	cpi	r24, 0x03	; 3
     998:	08 f4       	brcc	.+2      	; 0x99c <gpsReqDateUblox+0x1c0>
     99a:	5f c0       	rjmp	.+190    	; 0xa5a <gpsReqDateUblox+0x27e>
     99c:	0b 89       	ldd	r16, Y+19	; 0x13
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	9a 89       	ldd	r25, Y+18	; 0x12
     9a2:	90 13       	cpse	r25, r16
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	99 89       	ldd	r25, Y+17	; 0x11
     9a8:	09 13       	cpse	r16, r25
     9aa:	01 c0       	rjmp	.+2      	; 0x9ae <gpsReqDateUblox+0x1d2>
     9ac:	8f 5f       	subi	r24, 0xFF	; 255
     9ae:	98 89       	ldd	r25, Y+16	; 0x10
     9b0:	09 13       	cpse	r16, r25
     9b2:	01 c0       	rjmp	.+2      	; 0x9b6 <gpsReqDateUblox+0x1da>
     9b4:	8f 5f       	subi	r24, 0xFF	; 255
     9b6:	83 30       	cpi	r24, 0x03	; 3
     9b8:	08 f4       	brcc	.+2      	; 0x9bc <gpsReqDateUblox+0x1e0>
     9ba:	52 c0       	rjmp	.+164    	; 0xa60 <gpsReqDateUblox+0x284>
     9bc:	fb 8c       	ldd	r15, Y+27	; 0x1b
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     9c2:	9f 11       	cpse	r25, r15
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	99 8d       	ldd	r25, Y+25	; 0x19
     9c8:	f9 12       	cpse	r15, r25
     9ca:	01 c0       	rjmp	.+2      	; 0x9ce <gpsReqDateUblox+0x1f2>
     9cc:	8f 5f       	subi	r24, 0xFF	; 255
     9ce:	98 8d       	ldd	r25, Y+24	; 0x18
     9d0:	f9 12       	cpse	r15, r25
     9d2:	01 c0       	rjmp	.+2      	; 0x9d6 <gpsReqDateUblox+0x1fa>
     9d4:	8f 5f       	subi	r24, 0xFF	; 255
     9d6:	83 30       	cpi	r24, 0x03	; 3
     9d8:	08 f4       	brcc	.+2      	; 0x9dc <gpsReqDateUblox+0x200>
     9da:	45 c0       	rjmp	.+138    	; 0xa66 <gpsReqDateUblox+0x28a>
     9dc:	ef 8c       	ldd	r14, Y+31	; 0x1f
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9e2:	9e 11       	cpse	r25, r14
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	9d 8d       	ldd	r25, Y+29	; 0x1d
     9e8:	e9 12       	cpse	r14, r25
     9ea:	01 c0       	rjmp	.+2      	; 0x9ee <gpsReqDateUblox+0x212>
     9ec:	8f 5f       	subi	r24, 0xFF	; 255
     9ee:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9f0:	e9 12       	cpse	r14, r25
     9f2:	01 c0       	rjmp	.+2      	; 0x9f6 <gpsReqDateUblox+0x21a>
     9f4:	8f 5f       	subi	r24, 0xFF	; 255
     9f6:	83 30       	cpi	r24, 0x03	; 3
     9f8:	c8 f1       	brcs	.+114    	; 0xa6c <gpsReqDateUblox+0x290>
     9fa:	20 91 02 39 	lds	r18, 0x3902	; 0x803902 <gpsParams+0x10>
     9fe:	e2 ef       	ldi	r30, 0xF2	; 242
     a00:	f8 e3       	ldi	r31, 0x38	; 56
     a02:	8a e2       	ldi	r24, 0x2A	; 42
     a04:	99 e3       	ldi	r25, 0x39	; 57
     a06:	11 92       	st	Z+, r1
     a08:	e8 17       	cp	r30, r24
     a0a:	f9 07       	cpc	r31, r25
     a0c:	e1 f7       	brne	.-8      	; 0xa06 <gpsReqDateUblox+0x22a>
     a0e:	20 93 02 39 	sts	0x3902, r18	; 0x803902 <gpsParams+0x10>
     a12:	9c e2       	ldi	r25, 0x2C	; 44
     a14:	f9 16       	cp	r15, r25
     a16:	69 f1       	breq	.+90     	; 0xa72 <gpsReqDateUblox+0x296>
     a18:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     a1c:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     a20:	62 85       	ldd	r22, Z+10	; 0x0a
     a22:	80 e3       	ldi	r24, 0x30	; 48
     a24:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     a28:	d8 2e       	mov	r13, r24
     a2a:	61 2f       	mov	r22, r17
     a2c:	80 2f       	mov	r24, r16
     a2e:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     a32:	02 ef       	ldi	r16, 0xF2	; 242
     a34:	18 e3       	ldi	r17, 0x38	; 56
     a36:	e0 e1       	ldi	r30, 0x10	; 16
     a38:	de 9e       	mul	r13, r30
     a3a:	80 0d       	add	r24, r0
     a3c:	11 24       	eor	r1, r1
     a3e:	f8 01       	movw	r30, r16
     a40:	80 83       	st	Z, r24
     a42:	6f 2d       	mov	r22, r15
     a44:	8e 2d       	mov	r24, r14
     a46:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     a4a:	88 0f       	add	r24, r24
     a4c:	88 0f       	add	r24, r24
     a4e:	88 0f       	add	r24, r24
     a50:	f8 01       	movw	r30, r16
     a52:	81 83       	std	Z+1, r24	; 0x01
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	16 c0       	rjmp	.+44     	; 0xa86 <gpsReqDateUblox+0x2aa>
     a5a:	8a e9       	ldi	r24, 0x9A	; 154
     a5c:	92 e0       	ldi	r25, 0x02	; 2
     a5e:	13 c0       	rjmp	.+38     	; 0xa86 <gpsReqDateUblox+0x2aa>
     a60:	8a e9       	ldi	r24, 0x9A	; 154
     a62:	92 e0       	ldi	r25, 0x02	; 2
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <gpsReqDateUblox+0x2aa>
     a66:	8a e9       	ldi	r24, 0x9A	; 154
     a68:	92 e0       	ldi	r25, 0x02	; 2
     a6a:	0d c0       	rjmp	.+26     	; 0xa86 <gpsReqDateUblox+0x2aa>
     a6c:	8a e9       	ldi	r24, 0x9A	; 154
     a6e:	92 e0       	ldi	r25, 0x02	; 2
     a70:	0a c0       	rjmp	.+20     	; 0xa86 <gpsReqDateUblox+0x2aa>
     a72:	8a e9       	ldi	r24, 0x9A	; 154
     a74:	92 e0       	ldi	r25, 0x02	; 2
     a76:	07 c0       	rjmp	.+14     	; 0xa86 <gpsReqDateUblox+0x2aa>
     a78:	64 e6       	ldi	r22, 0x64	; 100
     a7a:	70 e0       	ldi	r23, 0x00	; 0
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     a84:	e8 ce       	rjmp	.-560    	; 0x856 <gpsReqDateUblox+0x7a>
     a86:	6f 96       	adiw	r28, 0x1f	; 31
     a88:	cd bf       	out	0x3d, r28	; 61
     a8a:	de bf       	out	0x3e, r29	; 62
     a8c:	df 91       	pop	r29
     a8e:	cf 91       	pop	r28
     a90:	1f 91       	pop	r17
     a92:	0f 91       	pop	r16
     a94:	ff 90       	pop	r15
     a96:	ef 90       	pop	r14
     a98:	df 90       	pop	r13
     a9a:	cf 90       	pop	r12
     a9c:	bf 90       	pop	r11
     a9e:	08 95       	ret

00000aa0 <GPSgetDate>:
     aa0:	0e 94 ee 03 	call	0x7dc	; 0x7dc <gpsReqDateUblox>
     aa4:	00 97       	sbiw	r24, 0x00	; 0
     aa6:	39 f4       	brne	.+14     	; 0xab6 <GPSgetDate+0x16>
     aa8:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     aac:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     ab0:	22 85       	ldd	r18, Z+10	; 0x0a
     ab2:	28 35       	cpi	r18, 0x58	; 88
     ab4:	39 f5       	brne	.+78     	; 0xb04 <GPSgetDate+0x64>
     ab6:	0e 94 ee 03 	call	0x7dc	; 0x7dc <gpsReqDateUblox>
     aba:	00 97       	sbiw	r24, 0x00	; 0
     abc:	39 f4       	brne	.+14     	; 0xacc <GPSgetDate+0x2c>
     abe:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     ac2:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     ac6:	22 85       	ldd	r18, Z+10	; 0x0a
     ac8:	28 35       	cpi	r18, 0x58	; 88
     aca:	e1 f4       	brne	.+56     	; 0xb04 <GPSgetDate+0x64>
     acc:	0e 94 ee 03 	call	0x7dc	; 0x7dc <gpsReqDateUblox>
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	39 f4       	brne	.+14     	; 0xae2 <GPSgetDate+0x42>
     ad4:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     ad8:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     adc:	22 85       	ldd	r18, Z+10	; 0x0a
     ade:	28 35       	cpi	r18, 0x58	; 88
     ae0:	89 f4       	brne	.+34     	; 0xb04 <GPSgetDate+0x64>
     ae2:	0e 94 ee 03 	call	0x7dc	; 0x7dc <gpsReqDateUblox>
     ae6:	00 97       	sbiw	r24, 0x00	; 0
     ae8:	41 f4       	brne	.+16     	; 0xafa <GPSgetDate+0x5a>
     aea:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     aee:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     af2:	22 85       	ldd	r18, Z+10	; 0x0a
     af4:	28 35       	cpi	r18, 0x58	; 88
     af6:	31 f4       	brne	.+12     	; 0xb04 <GPSgetDate+0x64>
     af8:	03 c0       	rjmp	.+6      	; 0xb00 <GPSgetDate+0x60>
     afa:	8a e9       	ldi	r24, 0x9A	; 154
     afc:	92 e0       	ldi	r25, 0x02	; 2
     afe:	08 95       	ret
     b00:	8a e9       	ldi	r24, 0x9A	; 154
     b02:	92 e0       	ldi	r25, 0x02	; 2
     b04:	08 95       	ret

00000b06 <gpsReqStatusUblox>:
     b06:	cf 92       	push	r12
     b08:	df 92       	push	r13
     b0a:	ef 92       	push	r14
     b0c:	ff 92       	push	r15
     b0e:	0f 93       	push	r16
     b10:	1f 93       	push	r17
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	10 92 37 39 	sts	0x3937, r1	; 0x803937 <uBloxStatus>
     b1a:	68 94       	set
     b1c:	cc 24       	eor	r12, r12
     b1e:	c2 f8       	bld	r12, 2
     b20:	d1 2c       	mov	r13, r1
     b22:	e1 2c       	mov	r14, r1
     b24:	68 94       	set
     b26:	ff 24       	eor	r15, r15
     b28:	f3 f8       	bld	r15, 3
     b2a:	0b eb       	ldi	r16, 0xBB	; 187
     b2c:	18 e3       	ldi	r17, 0x38	; 56
     b2e:	a8 95       	wdr
     b30:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <clrRx>
     b34:	e7 01       	movw	r28, r14
     b36:	8d 81       	ldd	r24, Y+5	; 0x05
     b38:	80 68       	ori	r24, 0x80	; 128
     b3a:	8d 83       	std	Y+5, r24	; 0x05
     b3c:	10 92 2c 39 	sts	0x392C, r1	; 0x80392c <endOfLineFlag>
     b40:	78 94       	sei
     b42:	80 91 2c 39 	lds	r24, 0x392C	; 0x80392c <endOfLineFlag>
     b46:	81 11       	cpse	r24, r1
     b48:	0a c0       	rjmp	.+20     	; 0xb5e <gpsReqStatusUblox+0x58>
     b4a:	64 e6       	ldi	r22, 0x64	; 100
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     b56:	cf e0       	ldi	r28, 0x0F	; 15
     b58:	c1 50       	subi	r28, 0x01	; 1
     b5a:	09 f0       	breq	.+2      	; 0xb5e <gpsReqStatusUblox+0x58>
     b5c:	83 c0       	rjmp	.+262    	; 0xc64 <gpsReqStatusUblox+0x15e>
     b5e:	80 91 2a 39 	lds	r24, 0x392A	; 0x80392a <timeToFix>
     b62:	90 91 2b 39 	lds	r25, 0x392B	; 0x80392b <timeToFix+0x1>
     b66:	01 96       	adiw	r24, 0x01	; 1
     b68:	80 93 2a 39 	sts	0x392A, r24	; 0x80392a <timeToFix>
     b6c:	90 93 2b 39 	sts	0x392B, r25	; 0x80392b <timeToFix+0x1>
     b70:	81 3d       	cpi	r24, 0xD1	; 209
     b72:	d2 e0       	ldi	r29, 0x02	; 2
     b74:	9d 07       	cpc	r25, r29
     b76:	24 f0       	brlt	.+8      	; 0xb80 <gpsReqStatusUblox+0x7a>
     b78:	20 91 33 39 	lds	r18, 0x3933	; 0x803933 <mState>
     b7c:	21 30       	cpi	r18, 0x01	; 1
     b7e:	19 f4       	brne	.+6      	; 0xb86 <gpsReqStatusUblox+0x80>
     b80:	8d 3a       	cpi	r24, 0xAD	; 173
     b82:	93 40       	sbci	r25, 0x03	; 3
     b84:	34 f0       	brlt	.+12     	; 0xb92 <gpsReqStatusUblox+0x8c>
     b86:	8a e9       	ldi	r24, 0x9A	; 154
     b88:	80 93 37 39 	sts	0x3937, r24	; 0x803937 <uBloxStatus>
     b8c:	8a e9       	ldi	r24, 0x9A	; 154
     b8e:	92 e0       	ldi	r25, 0x02	; 2
     b90:	70 c0       	rjmp	.+224    	; 0xc72 <gpsReqStatusUblox+0x16c>
     b92:	e7 01       	movw	r28, r14
     b94:	8d 81       	ldd	r24, Y+5	; 0x05
     b96:	8f 77       	andi	r24, 0x7F	; 127
     b98:	8d 83       	std	Y+5, r24	; 0x05
     b9a:	43 e4       	ldi	r20, 0x43	; 67
     b9c:	6d e4       	ldi	r22, 0x4D	; 77
     b9e:	82 e5       	ldi	r24, 0x52	; 82
     ba0:	0e 94 63 01 	call	0x2c6	; 0x2c6 <searchRcvBuffuBlox>
     ba4:	89 2b       	or	r24, r25
     ba6:	09 f0       	breq	.+2      	; 0xbaa <gpsReqStatusUblox+0xa4>
     ba8:	44 c0       	rjmp	.+136    	; 0xc32 <gpsReqStatusUblox+0x12c>
     baa:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     bae:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     bb2:	df 01       	movw	r26, r30
     bb4:	12 97       	sbiw	r26, 0x02	; 2
     bb6:	d8 e3       	ldi	r29, 0x38	; 56
     bb8:	aa 3b       	cpi	r26, 0xBA	; 186
     bba:	bd 07       	cpc	r27, r29
     bbc:	09 f0       	breq	.+2      	; 0xbc0 <gpsReqStatusUblox+0xba>
     bbe:	78 f4       	brcc	.+30     	; 0xbde <gpsReqStatusUblox+0xd8>
     bc0:	ed 01       	movw	r28, r26
     bc2:	88 81       	ld	r24, Y
     bc4:	8a 32       	cpi	r24, 0x2A	; 42
     bc6:	69 f0       	breq	.+26     	; 0xbe2 <gpsReqStatusUblox+0xdc>
     bc8:	31 97       	sbiw	r30, 0x01	; 1
     bca:	c0 e0       	ldi	r28, 0x00	; 0
     bcc:	df 01       	movw	r26, r30
     bce:	c8 27       	eor	r28, r24
     bd0:	e0 17       	cp	r30, r16
     bd2:	f1 07       	cpc	r31, r17
     bd4:	39 f0       	breq	.+14     	; 0xbe4 <gpsReqStatusUblox+0xde>
     bd6:	81 91       	ld	r24, Z+
     bd8:	8a 32       	cpi	r24, 0x2A	; 42
     bda:	c1 f7       	brne	.-16     	; 0xbcc <gpsReqStatusUblox+0xc6>
     bdc:	03 c0       	rjmp	.+6      	; 0xbe4 <gpsReqStatusUblox+0xde>
     bde:	c0 e0       	ldi	r28, 0x00	; 0
     be0:	01 c0       	rjmp	.+2      	; 0xbe4 <gpsReqStatusUblox+0xde>
     be2:	c0 e0       	ldi	r28, 0x00	; 0
     be4:	12 96       	adiw	r26, 0x02	; 2
     be6:	6c 91       	ld	r22, X
     be8:	12 97       	sbiw	r26, 0x02	; 2
     bea:	11 96       	adiw	r26, 0x01	; 1
     bec:	8c 91       	ld	r24, X
     bee:	0e 94 d6 01 	call	0x3ac	; 0x3ac <asciiHexToHex>
     bf2:	2c 2f       	mov	r18, r28
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	28 17       	cp	r18, r24
     bf8:	39 07       	cpc	r19, r25
     bfa:	d9 f4       	brne	.+54     	; 0xc32 <gpsReqStatusUblox+0x12c>
     bfc:	11 c0       	rjmp	.+34     	; 0xc20 <gpsReqStatusUblox+0x11a>
     bfe:	cf 01       	movw	r24, r30
     c00:	01 96       	adiw	r24, 0x01	; 1
     c02:	80 93 38 39 	sts	0x3938, r24	; 0x803938 <GPSSearchPtr>
     c06:	90 93 39 39 	sts	0x3939, r25	; 0x803939 <GPSSearchPtr+0x1>
     c0a:	81 81       	ldd	r24, Z+1	; 0x01
     c0c:	8c 32       	cpi	r24, 0x2C	; 44
     c0e:	49 f4       	brne	.+18     	; 0xc22 <gpsReqStatusUblox+0x11c>
     c10:	2f 5f       	subi	r18, 0xFF	; 255
     c12:	22 30       	cpi	r18, 0x02	; 2
     c14:	31 f4       	brne	.+12     	; 0xc22 <gpsReqStatusUblox+0x11c>
     c16:	82 81       	ldd	r24, Z+2	; 0x02
     c18:	81 34       	cpi	r24, 0x41	; 65
     c1a:	59 f4       	brne	.+22     	; 0xc32 <gpsReqStatusUblox+0x12c>
     c1c:	d3 94       	inc	r13
     c1e:	09 c0       	rjmp	.+18     	; 0xc32 <gpsReqStatusUblox+0x12c>
     c20:	20 e0       	ldi	r18, 0x00	; 0
     c22:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     c26:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     c2a:	d8 e3       	ldi	r29, 0x38	; 56
     c2c:	ea 3b       	cpi	r30, 0xBA	; 186
     c2e:	fd 07       	cpc	r31, r29
     c30:	30 f3       	brcs	.-52     	; 0xbfe <gpsReqStatusUblox+0xf8>
     c32:	ca 94       	dec	r12
     c34:	c1 10       	cpse	r12, r1
     c36:	7b cf       	rjmp	.-266    	; 0xb2e <gpsReqStatusUblox+0x28>
     c38:	e1 e0       	ldi	r30, 0x01	; 1
     c3a:	ed 15       	cp	r30, r13
     c3c:	68 f4       	brcc	.+26     	; 0xc58 <gpsReqStatusUblox+0x152>
     c3e:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     c42:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     c46:	81 81       	ldd	r24, Z+1	; 0x01
     c48:	81 34       	cpi	r24, 0x41	; 65
     c4a:	31 f4       	brne	.+12     	; 0xc58 <gpsReqStatusUblox+0x152>
     c4c:	89 e2       	ldi	r24, 0x29	; 41
     c4e:	80 93 37 39 	sts	0x3937, r24	; 0x803937 <uBloxStatus>
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	0d c0       	rjmp	.+26     	; 0xc72 <gpsReqStatusUblox+0x16c>
     c58:	8a e9       	ldi	r24, 0x9A	; 154
     c5a:	80 93 37 39 	sts	0x3937, r24	; 0x803937 <uBloxStatus>
     c5e:	8a e9       	ldi	r24, 0x9A	; 154
     c60:	92 e0       	ldi	r25, 0x02	; 2
     c62:	07 c0       	rjmp	.+14     	; 0xc72 <gpsReqStatusUblox+0x16c>
     c64:	64 e6       	ldi	r22, 0x64	; 100
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	80 e0       	ldi	r24, 0x00	; 0
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     c70:	73 cf       	rjmp	.-282    	; 0xb58 <gpsReqStatusUblox+0x52>
     c72:	df 91       	pop	r29
     c74:	cf 91       	pop	r28
     c76:	1f 91       	pop	r17
     c78:	0f 91       	pop	r16
     c7a:	ff 90       	pop	r15
     c7c:	ef 90       	pop	r14
     c7e:	df 90       	pop	r13
     c80:	cf 90       	pop	r12
     c82:	08 95       	ret

00000c84 <gpsReqLocUblox>:
     c84:	7f 92       	push	r7
     c86:	8f 92       	push	r8
     c88:	9f 92       	push	r9
     c8a:	af 92       	push	r10
     c8c:	bf 92       	push	r11
     c8e:	cf 92       	push	r12
     c90:	df 92       	push	r13
     c92:	ef 92       	push	r14
     c94:	ff 92       	push	r15
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	cd b7       	in	r28, 0x3d	; 61
     ca0:	de b7       	in	r29, 0x3e	; 62
     ca2:	af 97       	sbiw	r28, 0x2f	; 47
     ca4:	cd bf       	out	0x3d, r28	; 61
     ca6:	de bf       	out	0x3e, r29	; 62
     ca8:	8f e0       	ldi	r24, 0x0F	; 15
     caa:	ee ec       	ldi	r30, 0xCE	; 206
     cac:	f2 ea       	ldi	r31, 0xA2	; 162
     cae:	de 01       	movw	r26, r28
     cb0:	11 96       	adiw	r26, 0x01	; 1
     cb2:	01 90       	ld	r0, Z+
     cb4:	0d 92       	st	X+, r0
     cb6:	8a 95       	dec	r24
     cb8:	e1 f7       	brne	.-8      	; 0xcb2 <gpsReqLocUblox+0x2e>
     cba:	21 e0       	ldi	r18, 0x01	; 1
     cbc:	2f 8f       	std	Y+31, r18	; 0x1f
     cbe:	92 e0       	ldi	r25, 0x02	; 2
     cc0:	9a 8f       	std	Y+26, r25	; 0x1a
     cc2:	83 e0       	ldi	r24, 0x03	; 3
     cc4:	89 8f       	std	Y+25, r24	; 0x19
     cc6:	2f 8b       	std	Y+23, r18	; 0x17
     cc8:	9a 8b       	std	Y+18, r25	; 0x12
     cca:	89 8b       	std	Y+17, r24	; 0x11
     ccc:	2f a3       	std	Y+39, r18	; 0x27
     cce:	9a a3       	std	Y+34, r25	; 0x22
     cd0:	89 a3       	std	Y+33, r24	; 0x21
     cd2:	68 94       	set
     cd4:	bb 24       	eor	r11, r11
     cd6:	b3 f8       	bld	r11, 3
     cd8:	a1 2c       	mov	r10, r1
     cda:	c1 2c       	mov	r12, r1
     cdc:	68 94       	set
     cde:	dd 24       	eor	r13, r13
     ce0:	d3 f8       	bld	r13, 3
     ce2:	0f 2e       	mov	r0, r31
     ce4:	fb eb       	ldi	r31, 0xBB	; 187
     ce6:	ef 2e       	mov	r14, r31
     ce8:	f8 e3       	ldi	r31, 0x38	; 56
     cea:	ff 2e       	mov	r15, r31
     cec:	f0 2d       	mov	r31, r0
     cee:	a8 95       	wdr
     cf0:	6f e0       	ldi	r22, 0x0F	; 15
     cf2:	ce 01       	movw	r24, r28
     cf4:	01 96       	adiw	r24, 0x01	; 1
     cf6:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
     cfa:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <clrRx>
     cfe:	d6 01       	movw	r26, r12
     d00:	15 96       	adiw	r26, 0x05	; 5
     d02:	8c 91       	ld	r24, X
     d04:	15 97       	sbiw	r26, 0x05	; 5
     d06:	80 68       	ori	r24, 0x80	; 128
     d08:	15 96       	adiw	r26, 0x05	; 5
     d0a:	8c 93       	st	X, r24
     d0c:	10 92 2c 39 	sts	0x392C, r1	; 0x80392c <endOfLineFlag>
     d10:	78 94       	sei
     d12:	80 91 2c 39 	lds	r24, 0x392C	; 0x80392c <endOfLineFlag>
     d16:	81 11       	cpse	r24, r1
     d18:	0a c0       	rjmp	.+20     	; 0xd2e <gpsReqLocUblox+0xaa>
     d1a:	64 e6       	ldi	r22, 0x64	; 100
     d1c:	70 e0       	ldi	r23, 0x00	; 0
     d1e:	80 e0       	ldi	r24, 0x00	; 0
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     d26:	1f e0       	ldi	r17, 0x0F	; 15
     d28:	11 50       	subi	r17, 0x01	; 1
     d2a:	09 f0       	breq	.+2      	; 0xd2e <gpsReqLocUblox+0xaa>
     d2c:	e9 c1       	rjmp	.+978    	; 0x1100 <gpsReqLocUblox+0x47c>
     d2e:	00 91 2a 39 	lds	r16, 0x392A	; 0x80392a <timeToFix>
     d32:	10 91 2b 39 	lds	r17, 0x392B	; 0x80392b <timeToFix+0x1>
     d36:	01 3d       	cpi	r16, 0xD1	; 209
     d38:	b2 e0       	ldi	r27, 0x02	; 2
     d3a:	1b 07       	cpc	r17, r27
     d3c:	24 f0       	brlt	.+8      	; 0xd46 <gpsReqLocUblox+0xc2>
     d3e:	80 91 33 39 	lds	r24, 0x3933	; 0x803933 <mState>
     d42:	81 30       	cpi	r24, 0x01	; 1
     d44:	21 f4       	brne	.+8      	; 0xd4e <gpsReqLocUblox+0xca>
     d46:	0d 3a       	cpi	r16, 0xAD	; 173
     d48:	e3 e0       	ldi	r30, 0x03	; 3
     d4a:	1e 07       	cpc	r17, r30
     d4c:	34 f0       	brlt	.+12     	; 0xd5a <gpsReqLocUblox+0xd6>
     d4e:	8a e9       	ldi	r24, 0x9A	; 154
     d50:	80 93 37 39 	sts	0x3937, r24	; 0x803937 <uBloxStatus>
     d54:	8a e9       	ldi	r24, 0x9A	; 154
     d56:	92 e0       	ldi	r25, 0x02	; 2
     d58:	da c1       	rjmp	.+948    	; 0x110e <gpsReqLocUblox+0x48a>
     d5a:	0f 5f       	subi	r16, 0xFF	; 255
     d5c:	1f 4f       	sbci	r17, 0xFF	; 255
     d5e:	91 2e       	mov	r9, r17
     d60:	00 93 2a 39 	sts	0x392A, r16	; 0x80392a <timeToFix>
     d64:	10 93 2b 39 	sts	0x392B, r17	; 0x80392b <timeToFix+0x1>
     d68:	d6 01       	movw	r26, r12
     d6a:	15 96       	adiw	r26, 0x05	; 5
     d6c:	8c 91       	ld	r24, X
     d6e:	15 97       	sbiw	r26, 0x05	; 5
     d70:	8f 77       	andi	r24, 0x7F	; 127
     d72:	15 96       	adiw	r26, 0x05	; 5
     d74:	8c 93       	st	X, r24
     d76:	43 e5       	ldi	r20, 0x53	; 83
     d78:	6e e4       	ldi	r22, 0x4E	; 78
     d7a:	87 e4       	ldi	r24, 0x47	; 71
     d7c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <searchRcvBuffuBlox>
     d80:	89 2b       	or	r24, r25
     d82:	09 f0       	breq	.+2      	; 0xd86 <gpsReqLocUblox+0x102>
     d84:	7b c0       	rjmp	.+246    	; 0xe7c <gpsReqLocUblox+0x1f8>
     d86:	20 91 38 39 	lds	r18, 0x3938	; 0x803938 <GPSSearchPtr>
     d8a:	30 91 39 39 	lds	r19, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     d8e:	d9 01       	movw	r26, r18
     d90:	12 97       	sbiw	r26, 0x02	; 2
     d92:	e8 e3       	ldi	r30, 0x38	; 56
     d94:	aa 3b       	cpi	r26, 0xBA	; 186
     d96:	be 07       	cpc	r27, r30
     d98:	09 f0       	breq	.+2      	; 0xd9c <gpsReqLocUblox+0x118>
     d9a:	78 f4       	brcc	.+30     	; 0xdba <gpsReqLocUblox+0x136>
     d9c:	fd 01       	movw	r30, r26
     d9e:	80 81       	ld	r24, Z
     da0:	8a 32       	cpi	r24, 0x2A	; 42
     da2:	69 f0       	breq	.+26     	; 0xdbe <gpsReqLocUblox+0x13a>
     da4:	31 96       	adiw	r30, 0x01	; 1
     da6:	81 2c       	mov	r8, r1
     da8:	df 01       	movw	r26, r30
     daa:	88 26       	eor	r8, r24
     dac:	ee 15       	cp	r30, r14
     dae:	ff 05       	cpc	r31, r15
     db0:	39 f0       	breq	.+14     	; 0xdc0 <gpsReqLocUblox+0x13c>
     db2:	81 91       	ld	r24, Z+
     db4:	8a 32       	cpi	r24, 0x2A	; 42
     db6:	c1 f7       	brne	.-16     	; 0xda8 <gpsReqLocUblox+0x124>
     db8:	03 c0       	rjmp	.+6      	; 0xdc0 <gpsReqLocUblox+0x13c>
     dba:	81 2c       	mov	r8, r1
     dbc:	01 c0       	rjmp	.+2      	; 0xdc0 <gpsReqLocUblox+0x13c>
     dbe:	81 2c       	mov	r8, r1
     dc0:	12 96       	adiw	r26, 0x02	; 2
     dc2:	6c 91       	ld	r22, X
     dc4:	12 97       	sbiw	r26, 0x02	; 2
     dc6:	11 96       	adiw	r26, 0x01	; 1
     dc8:	8c 91       	ld	r24, X
     dca:	0e 94 d6 01 	call	0x3ac	; 0x3ac <asciiHexToHex>
     dce:	28 2d       	mov	r18, r8
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	28 17       	cp	r18, r24
     dd4:	39 07       	cpc	r19, r25
     dd6:	09 f0       	breq	.+2      	; 0xdda <gpsReqLocUblox+0x156>
     dd8:	51 c0       	rjmp	.+162    	; 0xe7c <gpsReqLocUblox+0x1f8>
     dda:	46 c0       	rjmp	.+140    	; 0xe68 <gpsReqLocUblox+0x1e4>
     ddc:	cf 01       	movw	r24, r30
     dde:	01 96       	adiw	r24, 0x01	; 1
     de0:	80 93 38 39 	sts	0x3938, r24	; 0x803938 <GPSSearchPtr>
     de4:	90 93 39 39 	sts	0x3939, r25	; 0x803939 <GPSSearchPtr+0x1>
     de8:	81 81       	ldd	r24, Z+1	; 0x01
     dea:	8c 32       	cpi	r24, 0x2C	; 44
     dec:	f1 f5       	brne	.+124    	; 0xe6a <gpsReqLocUblox+0x1e6>
     dee:	2f 5f       	subi	r18, 0xFF	; 255
     df0:	22 30       	cpi	r18, 0x02	; 2
     df2:	d9 f5       	brne	.+118    	; 0xe6a <gpsReqLocUblox+0x1e6>
     df4:	82 81       	ldd	r24, Z+2	; 0x02
     df6:	8c 32       	cpi	r24, 0x2C	; 44
     df8:	09 f4       	brne	.+2      	; 0xdfc <gpsReqLocUblox+0x178>
     dfa:	40 c0       	rjmp	.+128    	; 0xe7c <gpsReqLocUblox+0x1f8>
     dfc:	88 35       	cpi	r24, 0x58	; 88
     dfe:	f1 f1       	breq	.+124    	; 0xe7c <gpsReqLocUblox+0x1f8>
     e00:	8a 2d       	mov	r24, r10
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	48 e1       	ldi	r20, 0x18	; 24
     e06:	50 e0       	ldi	r21, 0x00	; 0
     e08:	4c 0f       	add	r20, r28
     e0a:	5d 1f       	adc	r21, r29
     e0c:	48 0f       	add	r20, r24
     e0e:	59 1f       	adc	r21, r25
     e10:	9f 01       	movw	r18, r30
     e12:	27 50       	subi	r18, 0x07	; 7
     e14:	31 09       	sbc	r19, r1
     e16:	d9 01       	movw	r26, r18
     e18:	2c 91       	ld	r18, X
     e1a:	da 01       	movw	r26, r20
     e1c:	2c 93       	st	X, r18
     e1e:	40 e1       	ldi	r20, 0x10	; 16
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	4c 0f       	add	r20, r28
     e24:	5d 1f       	adc	r21, r29
     e26:	48 0f       	add	r20, r24
     e28:	59 1f       	adc	r21, r25
     e2a:	9f 01       	movw	r18, r30
     e2c:	28 50       	subi	r18, 0x08	; 8
     e2e:	31 09       	sbc	r19, r1
     e30:	d9 01       	movw	r26, r18
     e32:	2c 91       	ld	r18, X
     e34:	da 01       	movw	r26, r20
     e36:	2c 93       	st	X, r18
     e38:	40 e2       	ldi	r20, 0x20	; 32
     e3a:	50 e0       	ldi	r21, 0x00	; 0
     e3c:	4c 0f       	add	r20, r28
     e3e:	5d 1f       	adc	r21, r29
     e40:	48 0f       	add	r20, r24
     e42:	59 1f       	adc	r21, r25
     e44:	9f 01       	movw	r18, r30
     e46:	25 50       	subi	r18, 0x05	; 5
     e48:	31 09       	sbc	r19, r1
     e4a:	d9 01       	movw	r26, r18
     e4c:	2c 91       	ld	r18, X
     e4e:	da 01       	movw	r26, r20
     e50:	2c 93       	st	X, r18
     e52:	a8 e2       	ldi	r26, 0x28	; 40
     e54:	b0 e0       	ldi	r27, 0x00	; 0
     e56:	ac 0f       	add	r26, r28
     e58:	bd 1f       	adc	r27, r29
     e5a:	a8 0f       	add	r26, r24
     e5c:	b9 1f       	adc	r27, r25
     e5e:	36 97       	sbiw	r30, 0x06	; 6
     e60:	20 81       	ld	r18, Z
     e62:	2c 93       	st	X, r18
     e64:	a3 94       	inc	r10
     e66:	0a c0       	rjmp	.+20     	; 0xe7c <gpsReqLocUblox+0x1f8>
     e68:	20 e0       	ldi	r18, 0x00	; 0
     e6a:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
     e6e:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     e72:	b8 e3       	ldi	r27, 0x38	; 56
     e74:	ea 3b       	cpi	r30, 0xBA	; 186
     e76:	fb 07       	cpc	r31, r27
     e78:	08 f4       	brcc	.+2      	; 0xe7c <gpsReqLocUblox+0x1f8>
     e7a:	b0 cf       	rjmp	.-160    	; 0xddc <gpsReqLocUblox+0x158>
     e7c:	ba 94       	dec	r11
     e7e:	b1 10       	cpse	r11, r1
     e80:	36 cf       	rjmp	.-404    	; 0xcee <gpsReqLocUblox+0x6a>
     e82:	6f 8d       	ldd	r22, Y+31	; 0x1f
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e88:	96 13       	cpse	r25, r22
     e8a:	80 e0       	ldi	r24, 0x00	; 0
     e8c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     e8e:	69 13       	cpse	r22, r25
     e90:	01 c0       	rjmp	.+2      	; 0xe94 <gpsReqLocUblox+0x210>
     e92:	8f 5f       	subi	r24, 0xFF	; 255
     e94:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e96:	69 13       	cpse	r22, r25
     e98:	01 c0       	rjmp	.+2      	; 0xe9c <gpsReqLocUblox+0x218>
     e9a:	8f 5f       	subi	r24, 0xFF	; 255
     e9c:	9b 8d       	ldd	r25, Y+27	; 0x1b
     e9e:	69 13       	cpse	r22, r25
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <gpsReqLocUblox+0x220>
     ea2:	8f 5f       	subi	r24, 0xFF	; 255
     ea4:	9a 8d       	ldd	r25, Y+26	; 0x1a
     ea6:	69 13       	cpse	r22, r25
     ea8:	01 c0       	rjmp	.+2      	; 0xeac <gpsReqLocUblox+0x228>
     eaa:	8f 5f       	subi	r24, 0xFF	; 255
     eac:	99 8d       	ldd	r25, Y+25	; 0x19
     eae:	69 13       	cpse	r22, r25
     eb0:	01 c0       	rjmp	.+2      	; 0xeb4 <gpsReqLocUblox+0x230>
     eb2:	8f 5f       	subi	r24, 0xFF	; 255
     eb4:	98 8d       	ldd	r25, Y+24	; 0x18
     eb6:	69 13       	cpse	r22, r25
     eb8:	01 c0       	rjmp	.+2      	; 0xebc <gpsReqLocUblox+0x238>
     eba:	8f 5f       	subi	r24, 0xFF	; 255
     ebc:	86 30       	cpi	r24, 0x06	; 6
     ebe:	08 f4       	brcc	.+2      	; 0xec2 <gpsReqLocUblox+0x23e>
     ec0:	10 c1       	rjmp	.+544    	; 0x10e2 <gpsReqLocUblox+0x45e>
     ec2:	8f 89       	ldd	r24, Y+23	; 0x17
     ec4:	91 e0       	ldi	r25, 0x01	; 1
     ec6:	2e 89       	ldd	r18, Y+22	; 0x16
     ec8:	28 13       	cpse	r18, r24
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	2d 89       	ldd	r18, Y+21	; 0x15
     ece:	82 13       	cpse	r24, r18
     ed0:	01 c0       	rjmp	.+2      	; 0xed4 <gpsReqLocUblox+0x250>
     ed2:	9f 5f       	subi	r25, 0xFF	; 255
     ed4:	2c 89       	ldd	r18, Y+20	; 0x14
     ed6:	82 13       	cpse	r24, r18
     ed8:	01 c0       	rjmp	.+2      	; 0xedc <gpsReqLocUblox+0x258>
     eda:	9f 5f       	subi	r25, 0xFF	; 255
     edc:	2b 89       	ldd	r18, Y+19	; 0x13
     ede:	82 13       	cpse	r24, r18
     ee0:	01 c0       	rjmp	.+2      	; 0xee4 <gpsReqLocUblox+0x260>
     ee2:	9f 5f       	subi	r25, 0xFF	; 255
     ee4:	2a 89       	ldd	r18, Y+18	; 0x12
     ee6:	82 13       	cpse	r24, r18
     ee8:	01 c0       	rjmp	.+2      	; 0xeec <gpsReqLocUblox+0x268>
     eea:	9f 5f       	subi	r25, 0xFF	; 255
     eec:	29 89       	ldd	r18, Y+17	; 0x11
     eee:	82 13       	cpse	r24, r18
     ef0:	01 c0       	rjmp	.+2      	; 0xef4 <gpsReqLocUblox+0x270>
     ef2:	9f 5f       	subi	r25, 0xFF	; 255
     ef4:	28 89       	ldd	r18, Y+16	; 0x10
     ef6:	82 13       	cpse	r24, r18
     ef8:	01 c0       	rjmp	.+2      	; 0xefc <gpsReqLocUblox+0x278>
     efa:	9f 5f       	subi	r25, 0xFF	; 255
     efc:	96 30       	cpi	r25, 0x06	; 6
     efe:	08 f4       	brcc	.+2      	; 0xf02 <gpsReqLocUblox+0x27e>
     f00:	f3 c0       	rjmp	.+486    	; 0x10e8 <gpsReqLocUblox+0x464>
     f02:	cf a4       	ldd	r12, Y+47	; 0x2f
     f04:	91 e0       	ldi	r25, 0x01	; 1
     f06:	2e a5       	ldd	r18, Y+46	; 0x2e
     f08:	2c 11       	cpse	r18, r12
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	2d a5       	ldd	r18, Y+45	; 0x2d
     f0e:	c2 12       	cpse	r12, r18
     f10:	01 c0       	rjmp	.+2      	; 0xf14 <gpsReqLocUblox+0x290>
     f12:	9f 5f       	subi	r25, 0xFF	; 255
     f14:	2c a5       	ldd	r18, Y+44	; 0x2c
     f16:	c2 12       	cpse	r12, r18
     f18:	01 c0       	rjmp	.+2      	; 0xf1c <gpsReqLocUblox+0x298>
     f1a:	9f 5f       	subi	r25, 0xFF	; 255
     f1c:	2b a5       	ldd	r18, Y+43	; 0x2b
     f1e:	c2 12       	cpse	r12, r18
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <gpsReqLocUblox+0x2a0>
     f22:	9f 5f       	subi	r25, 0xFF	; 255
     f24:	2a a5       	ldd	r18, Y+42	; 0x2a
     f26:	c2 12       	cpse	r12, r18
     f28:	01 c0       	rjmp	.+2      	; 0xf2c <gpsReqLocUblox+0x2a8>
     f2a:	9f 5f       	subi	r25, 0xFF	; 255
     f2c:	29 a5       	ldd	r18, Y+41	; 0x29
     f2e:	c2 12       	cpse	r12, r18
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <gpsReqLocUblox+0x2b0>
     f32:	9f 5f       	subi	r25, 0xFF	; 255
     f34:	28 a5       	ldd	r18, Y+40	; 0x28
     f36:	c2 12       	cpse	r12, r18
     f38:	01 c0       	rjmp	.+2      	; 0xf3c <gpsReqLocUblox+0x2b8>
     f3a:	9f 5f       	subi	r25, 0xFF	; 255
     f3c:	96 30       	cpi	r25, 0x06	; 6
     f3e:	08 f4       	brcc	.+2      	; 0xf42 <gpsReqLocUblox+0x2be>
     f40:	d6 c0       	rjmp	.+428    	; 0x10ee <gpsReqLocUblox+0x46a>
     f42:	df a0       	ldd	r13, Y+39	; 0x27
     f44:	91 e0       	ldi	r25, 0x01	; 1
     f46:	2e a1       	ldd	r18, Y+38	; 0x26
     f48:	2d 11       	cpse	r18, r13
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	2d a1       	ldd	r18, Y+37	; 0x25
     f4e:	d2 12       	cpse	r13, r18
     f50:	01 c0       	rjmp	.+2      	; 0xf54 <gpsReqLocUblox+0x2d0>
     f52:	9f 5f       	subi	r25, 0xFF	; 255
     f54:	2c a1       	ldd	r18, Y+36	; 0x24
     f56:	d2 12       	cpse	r13, r18
     f58:	01 c0       	rjmp	.+2      	; 0xf5c <gpsReqLocUblox+0x2d8>
     f5a:	9f 5f       	subi	r25, 0xFF	; 255
     f5c:	2b a1       	ldd	r18, Y+35	; 0x23
     f5e:	d2 12       	cpse	r13, r18
     f60:	01 c0       	rjmp	.+2      	; 0xf64 <gpsReqLocUblox+0x2e0>
     f62:	9f 5f       	subi	r25, 0xFF	; 255
     f64:	2a a1       	ldd	r18, Y+34	; 0x22
     f66:	d2 12       	cpse	r13, r18
     f68:	01 c0       	rjmp	.+2      	; 0xf6c <gpsReqLocUblox+0x2e8>
     f6a:	9f 5f       	subi	r25, 0xFF	; 255
     f6c:	29 a1       	ldd	r18, Y+33	; 0x21
     f6e:	d2 12       	cpse	r13, r18
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <gpsReqLocUblox+0x2f0>
     f72:	9f 5f       	subi	r25, 0xFF	; 255
     f74:	28 a1       	ldd	r18, Y+32	; 0x20
     f76:	d2 12       	cpse	r13, r18
     f78:	01 c0       	rjmp	.+2      	; 0xf7c <gpsReqLocUblox+0x2f8>
     f7a:	9f 5f       	subi	r25, 0xFF	; 255
     f7c:	96 30       	cpi	r25, 0x06	; 6
     f7e:	08 f4       	brcc	.+2      	; 0xf82 <gpsReqLocUblox+0x2fe>
     f80:	b9 c0       	rjmp	.+370    	; 0x10f4 <gpsReqLocUblox+0x470>
     f82:	ec e2       	ldi	r30, 0x2C	; 44
     f84:	de 16       	cp	r13, r30
     f86:	09 f4       	brne	.+2      	; 0xf8a <gpsReqLocUblox+0x306>
     f88:	b8 c0       	rjmp	.+368    	; 0x10fa <gpsReqLocUblox+0x476>
     f8a:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     f8e:	78 2e       	mov	r7, r24
     f90:	e0 90 38 39 	lds	r14, 0x3938	; 0x803938 <GPSSearchPtr>
     f94:	f0 90 39 39 	lds	r15, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
     f98:	d7 01       	movw	r26, r14
     f9a:	90 96       	adiw	r26, 0x20	; 32
     f9c:	6c 91       	ld	r22, X
     f9e:	90 97       	sbiw	r26, 0x20	; 32
     fa0:	5f 96       	adiw	r26, 0x1f	; 31
     fa2:	8c 91       	ld	r24, X
     fa4:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     fa8:	88 2e       	mov	r8, r24
     faa:	0f 2e       	mov	r0, r31
     fac:	f2 ef       	ldi	r31, 0xF2	; 242
     fae:	af 2e       	mov	r10, r31
     fb0:	f8 e3       	ldi	r31, 0x38	; 56
     fb2:	bf 2e       	mov	r11, r31
     fb4:	f0 2d       	mov	r31, r0
     fb6:	87 2d       	mov	r24, r7
     fb8:	86 95       	lsr	r24
     fba:	86 95       	lsr	r24
     fbc:	f5 01       	movw	r30, r10
     fbe:	91 81       	ldd	r25, Z+1	; 0x01
     fc0:	89 0f       	add	r24, r25
     fc2:	81 83       	std	Z+1, r24	; 0x01
     fc4:	6d 2d       	mov	r22, r13
     fc6:	8c 2d       	mov	r24, r12
     fc8:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     fcc:	f0 e4       	ldi	r31, 0x40	; 64
     fce:	7f 9e       	mul	r7, r31
     fd0:	80 0d       	add	r24, r0
     fd2:	11 24       	eor	r1, r1
     fd4:	d5 01       	movw	r26, r10
     fd6:	12 96       	adiw	r26, 0x02	; 2
     fd8:	8c 93       	st	X, r24
     fda:	d7 01       	movw	r26, r14
     fdc:	14 97       	sbiw	r26, 0x04	; 4
     fde:	f7 01       	movw	r30, r14
     fe0:	35 97       	sbiw	r30, 0x05	; 5
     fe2:	6c 91       	ld	r22, X
     fe4:	80 81       	ld	r24, Z
     fe6:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     fea:	f5 01       	movw	r30, r10
     fec:	93 81       	ldd	r25, Z+3	; 0x03
     fee:	89 0f       	add	r24, r25
     ff0:	83 83       	std	Z+3, r24	; 0x03
     ff2:	d7 01       	movw	r26, r14
     ff4:	1c 96       	adiw	r26, 0x0c	; 12
     ff6:	8c 91       	ld	r24, X
     ff8:	8e 34       	cpi	r24, 0x4E	; 78
     ffa:	19 f4       	brne	.+6      	; 0x1002 <gpsReqLocUblox+0x37e>
     ffc:	84 81       	ldd	r24, Z+4	; 0x04
     ffe:	80 68       	ori	r24, 0x80	; 128
    1000:	84 83       	std	Z+4, r24	; 0x04
    1002:	f7 01       	movw	r30, r14
    1004:	62 81       	ldd	r22, Z+2	; 0x02
    1006:	81 81       	ldd	r24, Z+1	; 0x01
    1008:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    100c:	0f 2e       	mov	r0, r31
    100e:	f2 ef       	ldi	r31, 0xF2	; 242
    1010:	cf 2e       	mov	r12, r31
    1012:	f8 e3       	ldi	r31, 0x38	; 56
    1014:	df 2e       	mov	r13, r31
    1016:	f0 2d       	mov	r31, r0
    1018:	d6 01       	movw	r26, r12
    101a:	14 96       	adiw	r26, 0x04	; 4
    101c:	9c 91       	ld	r25, X
    101e:	14 97       	sbiw	r26, 0x04	; 4
    1020:	89 0f       	add	r24, r25
    1022:	14 96       	adiw	r26, 0x04	; 4
    1024:	8c 93       	st	X, r24
    1026:	f7 01       	movw	r30, r14
    1028:	64 81       	ldd	r22, Z+4	; 0x04
    102a:	83 81       	ldd	r24, Z+3	; 0x03
    102c:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1030:	d6 01       	movw	r26, r12
    1032:	15 96       	adiw	r26, 0x05	; 5
    1034:	8c 93       	st	X, r24
    1036:	f7 01       	movw	r30, r14
    1038:	67 81       	ldd	r22, Z+7	; 0x07
    103a:	86 81       	ldd	r24, Z+6	; 0x06
    103c:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1040:	d6 01       	movw	r26, r12
    1042:	16 96       	adiw	r26, 0x06	; 6
    1044:	8c 93       	st	X, r24
    1046:	f7 01       	movw	r30, r14
    1048:	61 85       	ldd	r22, Z+9	; 0x09
    104a:	80 85       	ldd	r24, Z+8	; 0x08
    104c:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1050:	d6 01       	movw	r26, r12
    1052:	17 96       	adiw	r26, 0x07	; 7
    1054:	8c 93       	st	X, r24
    1056:	f7 01       	movw	r30, r14
    1058:	82 8d       	ldd	r24, Z+26	; 0x1a
    105a:	85 34       	cpi	r24, 0x45	; 69
    105c:	21 f4       	brne	.+8      	; 0x1066 <gpsReqLocUblox+0x3e2>
    105e:	f6 01       	movw	r30, r12
    1060:	80 85       	ldd	r24, Z+8	; 0x08
    1062:	80 64       	ori	r24, 0x40	; 64
    1064:	80 87       	std	Z+8, r24	; 0x08
    1066:	d7 01       	movw	r26, r14
    1068:	1e 96       	adiw	r26, 0x0e	; 14
    106a:	8c 91       	ld	r24, X
    106c:	81 33       	cpi	r24, 0x31	; 49
    106e:	19 f4       	brne	.+6      	; 0x1076 <gpsReqLocUblox+0x3f2>
    1070:	84 e6       	ldi	r24, 0x64	; 100
    1072:	80 93 fb 38 	sts	0x38FB, r24	; 0x8038fb <gpsParams+0x9>
    1076:	f7 01       	movw	r30, r14
    1078:	60 89       	ldd	r22, Z+16	; 0x10
    107a:	87 85       	ldd	r24, Z+15	; 0x0f
    107c:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1080:	0f 2e       	mov	r0, r31
    1082:	f2 ef       	ldi	r31, 0xF2	; 242
    1084:	cf 2e       	mov	r12, r31
    1086:	f8 e3       	ldi	r31, 0x38	; 56
    1088:	df 2e       	mov	r13, r31
    108a:	f0 2d       	mov	r31, r0
    108c:	d6 01       	movw	r26, r12
    108e:	19 96       	adiw	r26, 0x09	; 9
    1090:	9c 91       	ld	r25, X
    1092:	19 97       	sbiw	r26, 0x09	; 9
    1094:	89 0f       	add	r24, r25
    1096:	19 96       	adiw	r26, 0x09	; 9
    1098:	8c 93       	st	X, r24
    109a:	f7 01       	movw	r30, r14
    109c:	62 89       	ldd	r22, Z+18	; 0x12
    109e:	81 89       	ldd	r24, Z+17	; 0x11
    10a0:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    10a4:	d6 01       	movw	r26, r12
    10a6:	1a 96       	adiw	r26, 0x0a	; 10
    10a8:	8c 93       	st	X, r24
    10aa:	f7 01       	movw	r30, r14
    10ac:	65 89       	ldd	r22, Z+21	; 0x15
    10ae:	84 89       	ldd	r24, Z+20	; 0x14
    10b0:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    10b4:	d6 01       	movw	r26, r12
    10b6:	1b 96       	adiw	r26, 0x0b	; 11
    10b8:	8c 93       	st	X, r24
    10ba:	f7 01       	movw	r30, r14
    10bc:	67 89       	ldd	r22, Z+23	; 0x17
    10be:	86 89       	ldd	r24, Z+22	; 0x16
    10c0:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    10c4:	d6 01       	movw	r26, r12
    10c6:	1c 96       	adiw	r26, 0x0c	; 12
    10c8:	8c 93       	st	X, r24
    10ca:	1c 97       	sbiw	r26, 0x0c	; 12
    10cc:	1d 96       	adiw	r26, 0x0d	; 13
    10ce:	9c 92       	st	X, r9
    10d0:	1d 97       	sbiw	r26, 0x0d	; 13
    10d2:	1e 96       	adiw	r26, 0x0e	; 14
    10d4:	0c 93       	st	X, r16
    10d6:	1e 97       	sbiw	r26, 0x0e	; 14
    10d8:	1f 96       	adiw	r26, 0x0f	; 15
    10da:	8c 92       	st	X, r8
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	16 c0       	rjmp	.+44     	; 0x110e <gpsReqLocUblox+0x48a>
    10e2:	8a e9       	ldi	r24, 0x9A	; 154
    10e4:	92 e0       	ldi	r25, 0x02	; 2
    10e6:	13 c0       	rjmp	.+38     	; 0x110e <gpsReqLocUblox+0x48a>
    10e8:	8a e9       	ldi	r24, 0x9A	; 154
    10ea:	92 e0       	ldi	r25, 0x02	; 2
    10ec:	10 c0       	rjmp	.+32     	; 0x110e <gpsReqLocUblox+0x48a>
    10ee:	8a e9       	ldi	r24, 0x9A	; 154
    10f0:	92 e0       	ldi	r25, 0x02	; 2
    10f2:	0d c0       	rjmp	.+26     	; 0x110e <gpsReqLocUblox+0x48a>
    10f4:	8a e9       	ldi	r24, 0x9A	; 154
    10f6:	92 e0       	ldi	r25, 0x02	; 2
    10f8:	0a c0       	rjmp	.+20     	; 0x110e <gpsReqLocUblox+0x48a>
    10fa:	8a e9       	ldi	r24, 0x9A	; 154
    10fc:	92 e0       	ldi	r25, 0x02	; 2
    10fe:	07 c0       	rjmp	.+14     	; 0x110e <gpsReqLocUblox+0x48a>
    1100:	64 e6       	ldi	r22, 0x64	; 100
    1102:	70 e0       	ldi	r23, 0x00	; 0
    1104:	80 e0       	ldi	r24, 0x00	; 0
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    110c:	0d ce       	rjmp	.-998    	; 0xd28 <gpsReqLocUblox+0xa4>
    110e:	af 96       	adiw	r28, 0x2f	; 47
    1110:	cd bf       	out	0x3d, r28	; 61
    1112:	de bf       	out	0x3e, r29	; 62
    1114:	df 91       	pop	r29
    1116:	cf 91       	pop	r28
    1118:	1f 91       	pop	r17
    111a:	0f 91       	pop	r16
    111c:	ff 90       	pop	r15
    111e:	ef 90       	pop	r14
    1120:	df 90       	pop	r13
    1122:	cf 90       	pop	r12
    1124:	bf 90       	pop	r11
    1126:	af 90       	pop	r10
    1128:	9f 90       	pop	r9
    112a:	8f 90       	pop	r8
    112c:	7f 90       	pop	r7
    112e:	08 95       	ret

00001130 <GPSgetTime>:
    1130:	0e 94 42 06 	call	0xc84	; 0xc84 <gpsReqLocUblox>
    1134:	00 97       	sbiw	r24, 0x00	; 0
    1136:	61 f4       	brne	.+24     	; 0x1150 <GPSgetTime+0x20>
    1138:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
    113c:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
    1140:	23 a5       	ldd	r18, Z+43	; 0x2b
    1142:	28 35       	cpi	r18, 0x58	; 88
    1144:	29 f0       	breq	.+10     	; 0x1150 <GPSgetTime+0x20>
    1146:	20 91 01 39 	lds	r18, 0x3901	; 0x803901 <gpsParams+0xf>
    114a:	24 30       	cpi	r18, 0x04	; 4
    114c:	08 f0       	brcs	.+2      	; 0x1150 <GPSgetTime+0x20>
    114e:	45 c0       	rjmp	.+138    	; 0x11da <GPSgetTime+0xaa>
    1150:	0e 94 42 06 	call	0xc84	; 0xc84 <gpsReqLocUblox>
    1154:	00 97       	sbiw	r24, 0x00	; 0
    1156:	59 f4       	brne	.+22     	; 0x116e <GPSgetTime+0x3e>
    1158:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
    115c:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
    1160:	23 a5       	ldd	r18, Z+43	; 0x2b
    1162:	28 35       	cpi	r18, 0x58	; 88
    1164:	21 f0       	breq	.+8      	; 0x116e <GPSgetTime+0x3e>
    1166:	20 91 01 39 	lds	r18, 0x3901	; 0x803901 <gpsParams+0xf>
    116a:	24 30       	cpi	r18, 0x04	; 4
    116c:	b0 f5       	brcc	.+108    	; 0x11da <GPSgetTime+0xaa>
    116e:	0e 94 42 06 	call	0xc84	; 0xc84 <gpsReqLocUblox>
    1172:	00 97       	sbiw	r24, 0x00	; 0
    1174:	59 f4       	brne	.+22     	; 0x118c <GPSgetTime+0x5c>
    1176:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
    117a:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
    117e:	23 a5       	ldd	r18, Z+43	; 0x2b
    1180:	28 35       	cpi	r18, 0x58	; 88
    1182:	21 f0       	breq	.+8      	; 0x118c <GPSgetTime+0x5c>
    1184:	20 91 01 39 	lds	r18, 0x3901	; 0x803901 <gpsParams+0xf>
    1188:	24 30       	cpi	r18, 0x04	; 4
    118a:	38 f5       	brcc	.+78     	; 0x11da <GPSgetTime+0xaa>
    118c:	0e 94 42 06 	call	0xc84	; 0xc84 <gpsReqLocUblox>
    1190:	00 97       	sbiw	r24, 0x00	; 0
    1192:	59 f4       	brne	.+22     	; 0x11aa <GPSgetTime+0x7a>
    1194:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
    1198:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
    119c:	23 a5       	ldd	r18, Z+43	; 0x2b
    119e:	28 35       	cpi	r18, 0x58	; 88
    11a0:	21 f0       	breq	.+8      	; 0x11aa <GPSgetTime+0x7a>
    11a2:	20 91 01 39 	lds	r18, 0x3901	; 0x803901 <gpsParams+0xf>
    11a6:	24 30       	cpi	r18, 0x04	; 4
    11a8:	c0 f4       	brcc	.+48     	; 0x11da <GPSgetTime+0xaa>
    11aa:	0e 94 42 06 	call	0xc84	; 0xc84 <gpsReqLocUblox>
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	61 f4       	brne	.+24     	; 0x11ca <GPSgetTime+0x9a>
    11b2:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <GPSSearchPtr>
    11b6:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <GPSSearchPtr+0x1>
    11ba:	23 a5       	ldd	r18, Z+43	; 0x2b
    11bc:	28 35       	cpi	r18, 0x58	; 88
    11be:	41 f0       	breq	.+16     	; 0x11d0 <GPSgetTime+0xa0>
    11c0:	20 91 01 39 	lds	r18, 0x3901	; 0x803901 <gpsParams+0xf>
    11c4:	24 30       	cpi	r18, 0x04	; 4
    11c6:	38 f0       	brcs	.+14     	; 0x11d6 <GPSgetTime+0xa6>
    11c8:	08 95       	ret
    11ca:	8a e9       	ldi	r24, 0x9A	; 154
    11cc:	92 e0       	ldi	r25, 0x02	; 2
    11ce:	08 95       	ret
    11d0:	8a e9       	ldi	r24, 0x9A	; 154
    11d2:	92 e0       	ldi	r25, 0x02	; 2
    11d4:	08 95       	ret
    11d6:	8a e9       	ldi	r24, 0x9A	; 154
    11d8:	92 e0       	ldi	r25, 0x02	; 2
    11da:	08 95       	ret

000011dc <calcCRC>:
    11dc:	0f 93       	push	r16
    11de:	1f 93       	push	r17
    11e0:	cf 93       	push	r28
    11e2:	df 93       	push	r29
    11e4:	66 23       	and	r22, r22
    11e6:	c1 f1       	breq	.+112    	; 0x1258 <calcCRC+0x7c>
    11e8:	ec 01       	movw	r28, r24
    11ea:	8c 01       	movw	r16, r24
    11ec:	06 0f       	add	r16, r22
    11ee:	11 1d       	adc	r17, r1
    11f0:	8f ef       	ldi	r24, 0xFF	; 255
    11f2:	9f ef       	ldi	r25, 0xFF	; 255
    11f4:	1b c0       	rjmp	.+54     	; 0x122c <calcCRC+0x50>
    11f6:	bc 01       	movw	r22, r24
    11f8:	66 0f       	add	r22, r22
    11fa:	77 1f       	adc	r23, r23
    11fc:	fd 01       	movw	r30, r26
    11fe:	e4 23       	and	r30, r20
    1200:	f5 23       	and	r31, r21
    1202:	ef 2b       	or	r30, r31
    1204:	11 f0       	breq	.+4      	; 0x120a <calcCRC+0x2e>
    1206:	6f 5f       	subi	r22, 0xFF	; 255
    1208:	7f 4f       	sbci	r23, 0xFF	; 255
    120a:	56 95       	lsr	r21
    120c:	47 95       	ror	r20
    120e:	99 23       	and	r25, r25
    1210:	34 f4       	brge	.+12     	; 0x121e <calcCRC+0x42>
    1212:	cb 01       	movw	r24, r22
    1214:	e1 e2       	ldi	r30, 0x21	; 33
    1216:	8e 27       	eor	r24, r30
    1218:	e0 e1       	ldi	r30, 0x10	; 16
    121a:	9e 27       	eor	r25, r30
    121c:	01 c0       	rjmp	.+2      	; 0x1220 <calcCRC+0x44>
    121e:	cb 01       	movw	r24, r22
    1220:	21 50       	subi	r18, 0x01	; 1
    1222:	31 09       	sbc	r19, r1
    1224:	41 f7       	brne	.-48     	; 0x11f6 <calcCRC+0x1a>
    1226:	0c 17       	cp	r16, r28
    1228:	1d 07       	cpc	r17, r29
    122a:	c1 f0       	breq	.+48     	; 0x125c <calcCRC+0x80>
    122c:	a9 91       	ld	r26, Y+
    122e:	b0 e0       	ldi	r27, 0x00	; 0
    1230:	28 e0       	ldi	r18, 0x08	; 8
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	40 e8       	ldi	r20, 0x80	; 128
    1236:	50 e0       	ldi	r21, 0x00	; 0
    1238:	de cf       	rjmp	.-68     	; 0x11f6 <calcCRC+0x1a>
    123a:	99 23       	and	r25, r25
    123c:	3c f4       	brge	.+14     	; 0x124c <calcCRC+0x70>
    123e:	88 0f       	add	r24, r24
    1240:	99 1f       	adc	r25, r25
    1242:	41 e2       	ldi	r20, 0x21	; 33
    1244:	84 27       	eor	r24, r20
    1246:	40 e1       	ldi	r20, 0x10	; 16
    1248:	94 27       	eor	r25, r20
    124a:	02 c0       	rjmp	.+4      	; 0x1250 <calcCRC+0x74>
    124c:	88 0f       	add	r24, r24
    124e:	99 1f       	adc	r25, r25
    1250:	21 50       	subi	r18, 0x01	; 1
    1252:	31 09       	sbc	r19, r1
    1254:	91 f7       	brne	.-28     	; 0x123a <calcCRC+0x5e>
    1256:	05 c0       	rjmp	.+10     	; 0x1262 <calcCRC+0x86>
    1258:	8f ef       	ldi	r24, 0xFF	; 255
    125a:	9f ef       	ldi	r25, 0xFF	; 255
    125c:	20 e1       	ldi	r18, 0x10	; 16
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	ec cf       	rjmp	.-40     	; 0x123a <calcCRC+0x5e>
    1262:	df 91       	pop	r29
    1264:	cf 91       	pop	r28
    1266:	1f 91       	pop	r17
    1268:	0f 91       	pop	r16
    126a:	08 95       	ret

0000126c <getByteFromBig>:
    126c:	f8 94       	cli
    126e:	20 98       	cbi	0x04, 0	; 4
    1270:	e0 e3       	ldi	r30, 0x30	; 48
    1272:	f4 e0       	ldi	r31, 0x04	; 4
    1274:	80 81       	ld	r24, Z
    1276:	87 7f       	andi	r24, 0xF7	; 247
    1278:	80 83       	st	Z, r24
    127a:	43 98       	cbi	0x08, 3	; 8
    127c:	e3 e5       	ldi	r30, 0x53	; 83
    127e:	f4 e0       	ldi	r31, 0x04	; 4
    1280:	80 81       	ld	r24, Z
    1282:	87 7f       	andi	r24, 0xF7	; 247
    1284:	80 83       	st	Z, r24
    1286:	53 9b       	sbis	0x0a, 3	; 10
    1288:	06 c0       	rjmp	.+12     	; 0x1296 <getByteFromBig+0x2a>
    128a:	87 e8       	ldi	r24, 0x87	; 135
    128c:	93 e1       	ldi	r25, 0x13	; 19
    128e:	53 9b       	sbis	0x0a, 3	; 10
    1290:	02 c0       	rjmp	.+4      	; 0x1296 <getByteFromBig+0x2a>
    1292:	01 97       	sbiw	r24, 0x01	; 1
    1294:	e1 f7       	brne	.-8      	; 0x128e <getByteFromBig+0x22>
    1296:	30 9b       	sbis	0x06, 0	; 6
    1298:	02 c0       	rjmp	.+4      	; 0x129e <getByteFromBig+0x32>
    129a:	80 e8       	ldi	r24, 0x80	; 128
    129c:	01 c0       	rjmp	.+2      	; 0x12a0 <getByteFromBig+0x34>
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	53 99       	sbic	0x0a, 3	; 10
    12a2:	68 c0       	rjmp	.+208    	; 0x1374 <getByteFromBig+0x108>
    12a4:	99 ef       	ldi	r25, 0xF9	; 249
    12a6:	53 99       	sbic	0x0a, 3	; 10
    12a8:	65 c0       	rjmp	.+202    	; 0x1374 <getByteFromBig+0x108>
    12aa:	91 50       	subi	r25, 0x01	; 1
    12ac:	e1 f7       	brne	.-8      	; 0x12a6 <getByteFromBig+0x3a>
    12ae:	62 c0       	rjmp	.+196    	; 0x1374 <getByteFromBig+0x108>
    12b0:	53 9b       	sbis	0x0a, 3	; 10
    12b2:	02 c0       	rjmp	.+4      	; 0x12b8 <getByteFromBig+0x4c>
    12b4:	91 50       	subi	r25, 0x01	; 1
    12b6:	e1 f7       	brne	.-8      	; 0x12b0 <getByteFromBig+0x44>
    12b8:	30 99       	sbic	0x06, 0	; 6
    12ba:	80 64       	ori	r24, 0x40	; 64
    12bc:	53 99       	sbic	0x0a, 3	; 10
    12be:	5e c0       	rjmp	.+188    	; 0x137c <getByteFromBig+0x110>
    12c0:	99 ef       	ldi	r25, 0xF9	; 249
    12c2:	53 99       	sbic	0x0a, 3	; 10
    12c4:	5b c0       	rjmp	.+182    	; 0x137c <getByteFromBig+0x110>
    12c6:	91 50       	subi	r25, 0x01	; 1
    12c8:	e1 f7       	brne	.-8      	; 0x12c2 <getByteFromBig+0x56>
    12ca:	58 c0       	rjmp	.+176    	; 0x137c <getByteFromBig+0x110>
    12cc:	53 9b       	sbis	0x0a, 3	; 10
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <getByteFromBig+0x68>
    12d0:	91 50       	subi	r25, 0x01	; 1
    12d2:	e1 f7       	brne	.-8      	; 0x12cc <getByteFromBig+0x60>
    12d4:	30 99       	sbic	0x06, 0	; 6
    12d6:	80 62       	ori	r24, 0x20	; 32
    12d8:	53 99       	sbic	0x0a, 3	; 10
    12da:	54 c0       	rjmp	.+168    	; 0x1384 <getByteFromBig+0x118>
    12dc:	99 ef       	ldi	r25, 0xF9	; 249
    12de:	53 99       	sbic	0x0a, 3	; 10
    12e0:	51 c0       	rjmp	.+162    	; 0x1384 <getByteFromBig+0x118>
    12e2:	91 50       	subi	r25, 0x01	; 1
    12e4:	e1 f7       	brne	.-8      	; 0x12de <getByteFromBig+0x72>
    12e6:	4e c0       	rjmp	.+156    	; 0x1384 <getByteFromBig+0x118>
    12e8:	53 9b       	sbis	0x0a, 3	; 10
    12ea:	02 c0       	rjmp	.+4      	; 0x12f0 <getByteFromBig+0x84>
    12ec:	91 50       	subi	r25, 0x01	; 1
    12ee:	e1 f7       	brne	.-8      	; 0x12e8 <getByteFromBig+0x7c>
    12f0:	30 99       	sbic	0x06, 0	; 6
    12f2:	80 61       	ori	r24, 0x10	; 16
    12f4:	53 99       	sbic	0x0a, 3	; 10
    12f6:	4a c0       	rjmp	.+148    	; 0x138c <getByteFromBig+0x120>
    12f8:	99 ef       	ldi	r25, 0xF9	; 249
    12fa:	53 99       	sbic	0x0a, 3	; 10
    12fc:	47 c0       	rjmp	.+142    	; 0x138c <getByteFromBig+0x120>
    12fe:	91 50       	subi	r25, 0x01	; 1
    1300:	e1 f7       	brne	.-8      	; 0x12fa <getByteFromBig+0x8e>
    1302:	44 c0       	rjmp	.+136    	; 0x138c <getByteFromBig+0x120>
    1304:	53 9b       	sbis	0x0a, 3	; 10
    1306:	02 c0       	rjmp	.+4      	; 0x130c <getByteFromBig+0xa0>
    1308:	91 50       	subi	r25, 0x01	; 1
    130a:	e1 f7       	brne	.-8      	; 0x1304 <getByteFromBig+0x98>
    130c:	30 99       	sbic	0x06, 0	; 6
    130e:	88 60       	ori	r24, 0x08	; 8
    1310:	53 99       	sbic	0x0a, 3	; 10
    1312:	40 c0       	rjmp	.+128    	; 0x1394 <getByteFromBig+0x128>
    1314:	99 ef       	ldi	r25, 0xF9	; 249
    1316:	53 99       	sbic	0x0a, 3	; 10
    1318:	3d c0       	rjmp	.+122    	; 0x1394 <getByteFromBig+0x128>
    131a:	91 50       	subi	r25, 0x01	; 1
    131c:	e1 f7       	brne	.-8      	; 0x1316 <getByteFromBig+0xaa>
    131e:	3a c0       	rjmp	.+116    	; 0x1394 <getByteFromBig+0x128>
    1320:	53 9b       	sbis	0x0a, 3	; 10
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <getByteFromBig+0xbc>
    1324:	91 50       	subi	r25, 0x01	; 1
    1326:	e1 f7       	brne	.-8      	; 0x1320 <getByteFromBig+0xb4>
    1328:	30 99       	sbic	0x06, 0	; 6
    132a:	84 60       	ori	r24, 0x04	; 4
    132c:	53 99       	sbic	0x0a, 3	; 10
    132e:	36 c0       	rjmp	.+108    	; 0x139c <getByteFromBig+0x130>
    1330:	99 ef       	ldi	r25, 0xF9	; 249
    1332:	53 99       	sbic	0x0a, 3	; 10
    1334:	33 c0       	rjmp	.+102    	; 0x139c <getByteFromBig+0x130>
    1336:	91 50       	subi	r25, 0x01	; 1
    1338:	e1 f7       	brne	.-8      	; 0x1332 <getByteFromBig+0xc6>
    133a:	30 c0       	rjmp	.+96     	; 0x139c <getByteFromBig+0x130>
    133c:	53 9b       	sbis	0x0a, 3	; 10
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <getByteFromBig+0xd8>
    1340:	91 50       	subi	r25, 0x01	; 1
    1342:	e1 f7       	brne	.-8      	; 0x133c <getByteFromBig+0xd0>
    1344:	30 99       	sbic	0x06, 0	; 6
    1346:	82 60       	ori	r24, 0x02	; 2
    1348:	53 99       	sbic	0x0a, 3	; 10
    134a:	2c c0       	rjmp	.+88     	; 0x13a4 <getByteFromBig+0x138>
    134c:	99 ef       	ldi	r25, 0xF9	; 249
    134e:	53 99       	sbic	0x0a, 3	; 10
    1350:	29 c0       	rjmp	.+82     	; 0x13a4 <getByteFromBig+0x138>
    1352:	91 50       	subi	r25, 0x01	; 1
    1354:	e1 f7       	brne	.-8      	; 0x134e <getByteFromBig+0xe2>
    1356:	26 c0       	rjmp	.+76     	; 0x13a4 <getByteFromBig+0x138>
    1358:	53 9b       	sbis	0x0a, 3	; 10
    135a:	02 c0       	rjmp	.+4      	; 0x1360 <getByteFromBig+0xf4>
    135c:	91 50       	subi	r25, 0x01	; 1
    135e:	e1 f7       	brne	.-8      	; 0x1358 <getByteFromBig+0xec>
    1360:	30 99       	sbic	0x06, 0	; 6
    1362:	81 60       	ori	r24, 0x01	; 1
    1364:	53 99       	sbic	0x0a, 3	; 10
    1366:	22 c0       	rjmp	.+68     	; 0x13ac <getByteFromBig+0x140>
    1368:	99 ef       	ldi	r25, 0xF9	; 249
    136a:	53 99       	sbic	0x0a, 3	; 10
    136c:	1f c0       	rjmp	.+62     	; 0x13ac <getByteFromBig+0x140>
    136e:	91 50       	subi	r25, 0x01	; 1
    1370:	e1 f7       	brne	.-8      	; 0x136a <getByteFromBig+0xfe>
    1372:	08 95       	ret
    1374:	53 9b       	sbis	0x0a, 3	; 10
    1376:	a0 cf       	rjmp	.-192    	; 0x12b8 <getByteFromBig+0x4c>
    1378:	99 ef       	ldi	r25, 0xF9	; 249
    137a:	9a cf       	rjmp	.-204    	; 0x12b0 <getByteFromBig+0x44>
    137c:	53 9b       	sbis	0x0a, 3	; 10
    137e:	aa cf       	rjmp	.-172    	; 0x12d4 <getByteFromBig+0x68>
    1380:	99 ef       	ldi	r25, 0xF9	; 249
    1382:	a4 cf       	rjmp	.-184    	; 0x12cc <getByteFromBig+0x60>
    1384:	53 9b       	sbis	0x0a, 3	; 10
    1386:	b4 cf       	rjmp	.-152    	; 0x12f0 <getByteFromBig+0x84>
    1388:	99 ef       	ldi	r25, 0xF9	; 249
    138a:	ae cf       	rjmp	.-164    	; 0x12e8 <getByteFromBig+0x7c>
    138c:	53 9b       	sbis	0x0a, 3	; 10
    138e:	be cf       	rjmp	.-132    	; 0x130c <getByteFromBig+0xa0>
    1390:	99 ef       	ldi	r25, 0xF9	; 249
    1392:	b8 cf       	rjmp	.-144    	; 0x1304 <getByteFromBig+0x98>
    1394:	53 9b       	sbis	0x0a, 3	; 10
    1396:	c8 cf       	rjmp	.-112    	; 0x1328 <getByteFromBig+0xbc>
    1398:	99 ef       	ldi	r25, 0xF9	; 249
    139a:	c2 cf       	rjmp	.-124    	; 0x1320 <getByteFromBig+0xb4>
    139c:	53 9b       	sbis	0x0a, 3	; 10
    139e:	d2 cf       	rjmp	.-92     	; 0x1344 <getByteFromBig+0xd8>
    13a0:	99 ef       	ldi	r25, 0xF9	; 249
    13a2:	cc cf       	rjmp	.-104    	; 0x133c <getByteFromBig+0xd0>
    13a4:	53 9b       	sbis	0x0a, 3	; 10
    13a6:	dc cf       	rjmp	.-72     	; 0x1360 <getByteFromBig+0xf4>
    13a8:	99 ef       	ldi	r25, 0xF9	; 249
    13aa:	d6 cf       	rjmp	.-84     	; 0x1358 <getByteFromBig+0xec>
    13ac:	08 95       	ret

000013ae <sendByteToBig>:
    13ae:	20 9a       	sbi	0x04, 0	; 4
    13b0:	88 23       	and	r24, r24
    13b2:	14 f0       	brlt	.+4      	; 0x13b8 <sendByteToBig+0xa>
    13b4:	28 98       	cbi	0x05, 0	; 5
    13b6:	93 c0       	rjmp	.+294    	; 0x14de <sendByteToBig+0x130>
    13b8:	28 9a       	sbi	0x05, 0	; 5
    13ba:	91 c0       	rjmp	.+290    	; 0x14de <sendByteToBig+0x130>
    13bc:	29 ef       	ldi	r18, 0xF9	; 249
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	53 9b       	sbis	0x0a, 3	; 10
    13c2:	8f c0       	rjmp	.+286    	; 0x14e2 <sendByteToBig+0x134>
    13c4:	21 50       	subi	r18, 0x01	; 1
    13c6:	31 09       	sbc	r19, r1
    13c8:	d9 f7       	brne	.-10     	; 0x13c0 <sendByteToBig+0x12>
    13ca:	8b c0       	rjmp	.+278    	; 0x14e2 <sendByteToBig+0x134>
    13cc:	53 99       	sbic	0x0a, 3	; 10
    13ce:	03 c0       	rjmp	.+6      	; 0x13d6 <sendByteToBig+0x28>
    13d0:	21 50       	subi	r18, 0x01	; 1
    13d2:	31 09       	sbc	r19, r1
    13d4:	d9 f7       	brne	.-10     	; 0x13cc <sendByteToBig+0x1e>
    13d6:	86 fd       	sbrc	r24, 6
    13d8:	02 c0       	rjmp	.+4      	; 0x13de <sendByteToBig+0x30>
    13da:	28 98       	cbi	0x05, 0	; 5
    13dc:	87 c0       	rjmp	.+270    	; 0x14ec <sendByteToBig+0x13e>
    13de:	28 9a       	sbi	0x05, 0	; 5
    13e0:	85 c0       	rjmp	.+266    	; 0x14ec <sendByteToBig+0x13e>
    13e2:	29 ef       	ldi	r18, 0xF9	; 249
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	53 9b       	sbis	0x0a, 3	; 10
    13e8:	83 c0       	rjmp	.+262    	; 0x14f0 <sendByteToBig+0x142>
    13ea:	21 50       	subi	r18, 0x01	; 1
    13ec:	31 09       	sbc	r19, r1
    13ee:	d9 f7       	brne	.-10     	; 0x13e6 <sendByteToBig+0x38>
    13f0:	7f c0       	rjmp	.+254    	; 0x14f0 <sendByteToBig+0x142>
    13f2:	53 99       	sbic	0x0a, 3	; 10
    13f4:	03 c0       	rjmp	.+6      	; 0x13fc <sendByteToBig+0x4e>
    13f6:	21 50       	subi	r18, 0x01	; 1
    13f8:	31 09       	sbc	r19, r1
    13fa:	d9 f7       	brne	.-10     	; 0x13f2 <sendByteToBig+0x44>
    13fc:	85 fd       	sbrc	r24, 5
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <sendByteToBig+0x56>
    1400:	28 98       	cbi	0x05, 0	; 5
    1402:	7b c0       	rjmp	.+246    	; 0x14fa <sendByteToBig+0x14c>
    1404:	28 9a       	sbi	0x05, 0	; 5
    1406:	79 c0       	rjmp	.+242    	; 0x14fa <sendByteToBig+0x14c>
    1408:	29 ef       	ldi	r18, 0xF9	; 249
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	53 9b       	sbis	0x0a, 3	; 10
    140e:	77 c0       	rjmp	.+238    	; 0x14fe <sendByteToBig+0x150>
    1410:	21 50       	subi	r18, 0x01	; 1
    1412:	31 09       	sbc	r19, r1
    1414:	d9 f7       	brne	.-10     	; 0x140c <sendByteToBig+0x5e>
    1416:	73 c0       	rjmp	.+230    	; 0x14fe <sendByteToBig+0x150>
    1418:	53 99       	sbic	0x0a, 3	; 10
    141a:	03 c0       	rjmp	.+6      	; 0x1422 <sendByteToBig+0x74>
    141c:	21 50       	subi	r18, 0x01	; 1
    141e:	31 09       	sbc	r19, r1
    1420:	d9 f7       	brne	.-10     	; 0x1418 <sendByteToBig+0x6a>
    1422:	84 fd       	sbrc	r24, 4
    1424:	02 c0       	rjmp	.+4      	; 0x142a <sendByteToBig+0x7c>
    1426:	28 98       	cbi	0x05, 0	; 5
    1428:	6f c0       	rjmp	.+222    	; 0x1508 <sendByteToBig+0x15a>
    142a:	28 9a       	sbi	0x05, 0	; 5
    142c:	6d c0       	rjmp	.+218    	; 0x1508 <sendByteToBig+0x15a>
    142e:	29 ef       	ldi	r18, 0xF9	; 249
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	53 9b       	sbis	0x0a, 3	; 10
    1434:	6b c0       	rjmp	.+214    	; 0x150c <sendByteToBig+0x15e>
    1436:	21 50       	subi	r18, 0x01	; 1
    1438:	31 09       	sbc	r19, r1
    143a:	d9 f7       	brne	.-10     	; 0x1432 <sendByteToBig+0x84>
    143c:	67 c0       	rjmp	.+206    	; 0x150c <sendByteToBig+0x15e>
    143e:	53 99       	sbic	0x0a, 3	; 10
    1440:	03 c0       	rjmp	.+6      	; 0x1448 <sendByteToBig+0x9a>
    1442:	21 50       	subi	r18, 0x01	; 1
    1444:	31 09       	sbc	r19, r1
    1446:	d9 f7       	brne	.-10     	; 0x143e <sendByteToBig+0x90>
    1448:	83 fd       	sbrc	r24, 3
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <sendByteToBig+0xa2>
    144c:	28 98       	cbi	0x05, 0	; 5
    144e:	63 c0       	rjmp	.+198    	; 0x1516 <sendByteToBig+0x168>
    1450:	28 9a       	sbi	0x05, 0	; 5
    1452:	61 c0       	rjmp	.+194    	; 0x1516 <sendByteToBig+0x168>
    1454:	29 ef       	ldi	r18, 0xF9	; 249
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	53 9b       	sbis	0x0a, 3	; 10
    145a:	5f c0       	rjmp	.+190    	; 0x151a <sendByteToBig+0x16c>
    145c:	21 50       	subi	r18, 0x01	; 1
    145e:	31 09       	sbc	r19, r1
    1460:	d9 f7       	brne	.-10     	; 0x1458 <sendByteToBig+0xaa>
    1462:	5b c0       	rjmp	.+182    	; 0x151a <sendByteToBig+0x16c>
    1464:	53 99       	sbic	0x0a, 3	; 10
    1466:	03 c0       	rjmp	.+6      	; 0x146e <sendByteToBig+0xc0>
    1468:	21 50       	subi	r18, 0x01	; 1
    146a:	31 09       	sbc	r19, r1
    146c:	d9 f7       	brne	.-10     	; 0x1464 <sendByteToBig+0xb6>
    146e:	82 fd       	sbrc	r24, 2
    1470:	02 c0       	rjmp	.+4      	; 0x1476 <sendByteToBig+0xc8>
    1472:	28 98       	cbi	0x05, 0	; 5
    1474:	57 c0       	rjmp	.+174    	; 0x1524 <sendByteToBig+0x176>
    1476:	28 9a       	sbi	0x05, 0	; 5
    1478:	55 c0       	rjmp	.+170    	; 0x1524 <sendByteToBig+0x176>
    147a:	29 ef       	ldi	r18, 0xF9	; 249
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	53 9b       	sbis	0x0a, 3	; 10
    1480:	53 c0       	rjmp	.+166    	; 0x1528 <sendByteToBig+0x17a>
    1482:	21 50       	subi	r18, 0x01	; 1
    1484:	31 09       	sbc	r19, r1
    1486:	d9 f7       	brne	.-10     	; 0x147e <sendByteToBig+0xd0>
    1488:	4f c0       	rjmp	.+158    	; 0x1528 <sendByteToBig+0x17a>
    148a:	53 99       	sbic	0x0a, 3	; 10
    148c:	03 c0       	rjmp	.+6      	; 0x1494 <sendByteToBig+0xe6>
    148e:	21 50       	subi	r18, 0x01	; 1
    1490:	31 09       	sbc	r19, r1
    1492:	d9 f7       	brne	.-10     	; 0x148a <sendByteToBig+0xdc>
    1494:	81 fd       	sbrc	r24, 1
    1496:	02 c0       	rjmp	.+4      	; 0x149c <sendByteToBig+0xee>
    1498:	28 98       	cbi	0x05, 0	; 5
    149a:	4b c0       	rjmp	.+150    	; 0x1532 <sendByteToBig+0x184>
    149c:	28 9a       	sbi	0x05, 0	; 5
    149e:	49 c0       	rjmp	.+146    	; 0x1532 <sendByteToBig+0x184>
    14a0:	29 ef       	ldi	r18, 0xF9	; 249
    14a2:	30 e0       	ldi	r19, 0x00	; 0
    14a4:	53 9b       	sbis	0x0a, 3	; 10
    14a6:	47 c0       	rjmp	.+142    	; 0x1536 <sendByteToBig+0x188>
    14a8:	21 50       	subi	r18, 0x01	; 1
    14aa:	31 09       	sbc	r19, r1
    14ac:	d9 f7       	brne	.-10     	; 0x14a4 <sendByteToBig+0xf6>
    14ae:	43 c0       	rjmp	.+134    	; 0x1536 <sendByteToBig+0x188>
    14b0:	53 99       	sbic	0x0a, 3	; 10
    14b2:	03 c0       	rjmp	.+6      	; 0x14ba <sendByteToBig+0x10c>
    14b4:	21 50       	subi	r18, 0x01	; 1
    14b6:	31 09       	sbc	r19, r1
    14b8:	d9 f7       	brne	.-10     	; 0x14b0 <sendByteToBig+0x102>
    14ba:	80 fd       	sbrc	r24, 0
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <sendByteToBig+0x114>
    14be:	28 98       	cbi	0x05, 0	; 5
    14c0:	3f c0       	rjmp	.+126    	; 0x1540 <sendByteToBig+0x192>
    14c2:	28 9a       	sbi	0x05, 0	; 5
    14c4:	3d c0       	rjmp	.+122    	; 0x1540 <sendByteToBig+0x192>
    14c6:	89 ef       	ldi	r24, 0xF9	; 249
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	53 9b       	sbis	0x0a, 3	; 10
    14cc:	3b c0       	rjmp	.+118    	; 0x1544 <sendByteToBig+0x196>
    14ce:	01 97       	sbiw	r24, 0x01	; 1
    14d0:	e1 f7       	brne	.-8      	; 0x14ca <sendByteToBig+0x11c>
    14d2:	38 c0       	rjmp	.+112    	; 0x1544 <sendByteToBig+0x196>
    14d4:	53 99       	sbic	0x0a, 3	; 10
    14d6:	3b c0       	rjmp	.+118    	; 0x154e <sendByteToBig+0x1a0>
    14d8:	01 97       	sbiw	r24, 0x01	; 1
    14da:	e1 f7       	brne	.-8      	; 0x14d4 <sendByteToBig+0x126>
    14dc:	08 95       	ret
    14de:	53 99       	sbic	0x0a, 3	; 10
    14e0:	6d cf       	rjmp	.-294    	; 0x13bc <sendByteToBig+0xe>
    14e2:	53 99       	sbic	0x0a, 3	; 10
    14e4:	78 cf       	rjmp	.-272    	; 0x13d6 <sendByteToBig+0x28>
    14e6:	29 ef       	ldi	r18, 0xF9	; 249
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	70 cf       	rjmp	.-288    	; 0x13cc <sendByteToBig+0x1e>
    14ec:	53 99       	sbic	0x0a, 3	; 10
    14ee:	79 cf       	rjmp	.-270    	; 0x13e2 <sendByteToBig+0x34>
    14f0:	53 99       	sbic	0x0a, 3	; 10
    14f2:	84 cf       	rjmp	.-248    	; 0x13fc <sendByteToBig+0x4e>
    14f4:	29 ef       	ldi	r18, 0xF9	; 249
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	7c cf       	rjmp	.-264    	; 0x13f2 <sendByteToBig+0x44>
    14fa:	53 99       	sbic	0x0a, 3	; 10
    14fc:	85 cf       	rjmp	.-246    	; 0x1408 <sendByteToBig+0x5a>
    14fe:	53 99       	sbic	0x0a, 3	; 10
    1500:	90 cf       	rjmp	.-224    	; 0x1422 <sendByteToBig+0x74>
    1502:	29 ef       	ldi	r18, 0xF9	; 249
    1504:	30 e0       	ldi	r19, 0x00	; 0
    1506:	88 cf       	rjmp	.-240    	; 0x1418 <sendByteToBig+0x6a>
    1508:	53 99       	sbic	0x0a, 3	; 10
    150a:	91 cf       	rjmp	.-222    	; 0x142e <sendByteToBig+0x80>
    150c:	53 99       	sbic	0x0a, 3	; 10
    150e:	9c cf       	rjmp	.-200    	; 0x1448 <sendByteToBig+0x9a>
    1510:	29 ef       	ldi	r18, 0xF9	; 249
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	94 cf       	rjmp	.-216    	; 0x143e <sendByteToBig+0x90>
    1516:	53 99       	sbic	0x0a, 3	; 10
    1518:	9d cf       	rjmp	.-198    	; 0x1454 <sendByteToBig+0xa6>
    151a:	53 99       	sbic	0x0a, 3	; 10
    151c:	a8 cf       	rjmp	.-176    	; 0x146e <sendByteToBig+0xc0>
    151e:	29 ef       	ldi	r18, 0xF9	; 249
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	a0 cf       	rjmp	.-192    	; 0x1464 <sendByteToBig+0xb6>
    1524:	53 99       	sbic	0x0a, 3	; 10
    1526:	a9 cf       	rjmp	.-174    	; 0x147a <sendByteToBig+0xcc>
    1528:	53 99       	sbic	0x0a, 3	; 10
    152a:	b4 cf       	rjmp	.-152    	; 0x1494 <sendByteToBig+0xe6>
    152c:	29 ef       	ldi	r18, 0xF9	; 249
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	ac cf       	rjmp	.-168    	; 0x148a <sendByteToBig+0xdc>
    1532:	53 99       	sbic	0x0a, 3	; 10
    1534:	b5 cf       	rjmp	.-150    	; 0x14a0 <sendByteToBig+0xf2>
    1536:	53 99       	sbic	0x0a, 3	; 10
    1538:	c0 cf       	rjmp	.-128    	; 0x14ba <sendByteToBig+0x10c>
    153a:	29 ef       	ldi	r18, 0xF9	; 249
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	b8 cf       	rjmp	.-144    	; 0x14b0 <sendByteToBig+0x102>
    1540:	53 99       	sbic	0x0a, 3	; 10
    1542:	c1 cf       	rjmp	.-126    	; 0x14c6 <sendByteToBig+0x118>
    1544:	53 99       	sbic	0x0a, 3	; 10
    1546:	03 c0       	rjmp	.+6      	; 0x154e <sendByteToBig+0x1a0>
    1548:	89 ef       	ldi	r24, 0xF9	; 249
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	c3 cf       	rjmp	.-122    	; 0x14d4 <sendByteToBig+0x126>
    154e:	08 95       	ret

00001550 <getPacketFromBig>:
    1550:	8f 92       	push	r8
    1552:	9f 92       	push	r9
    1554:	af 92       	push	r10
    1556:	bf 92       	push	r11
    1558:	cf 92       	push	r12
    155a:	df 92       	push	r13
    155c:	ef 92       	push	r14
    155e:	ff 92       	push	r15
    1560:	0f 93       	push	r16
    1562:	1f 93       	push	r17
    1564:	cf 93       	push	r28
    1566:	df 93       	push	r29
    1568:	cd b7       	in	r28, 0x3d	; 61
    156a:	de b7       	in	r29, 0x3e	; 62
    156c:	29 97       	sbiw	r28, 0x09	; 9
    156e:	cd bf       	out	0x3d, r28	; 61
    1570:	de bf       	out	0x3e, r29	; 62
    1572:	f8 94       	cli
    1574:	20 98       	cbi	0x04, 0	; 4
    1576:	e0 e3       	ldi	r30, 0x30	; 48
    1578:	f4 e0       	ldi	r31, 0x04	; 4
    157a:	80 81       	ld	r24, Z
    157c:	87 7f       	andi	r24, 0xF7	; 247
    157e:	80 83       	st	Z, r24
    1580:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    1584:	f8 2e       	mov	r15, r24
    1586:	89 83       	std	Y+1, r24	; 0x01
    1588:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    158c:	88 2e       	mov	r8, r24
    158e:	8a 83       	std	Y+2, r24	; 0x02
    1590:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    1594:	98 2e       	mov	r9, r24
    1596:	8b 83       	std	Y+3, r24	; 0x03
    1598:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    159c:	a8 2e       	mov	r10, r24
    159e:	8c 83       	std	Y+4, r24	; 0x04
    15a0:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    15a4:	b8 2e       	mov	r11, r24
    15a6:	8d 83       	std	Y+5, r24	; 0x05
    15a8:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    15ac:	c8 2e       	mov	r12, r24
    15ae:	8e 83       	std	Y+6, r24	; 0x06
    15b0:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    15b4:	e8 2e       	mov	r14, r24
    15b6:	8f 83       	std	Y+7, r24	; 0x07
    15b8:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    15bc:	18 2f       	mov	r17, r24
    15be:	88 87       	std	Y+8, r24	; 0x08
    15c0:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    15c4:	08 2f       	mov	r16, r24
    15c6:	89 87       	std	Y+9, r24	; 0x09
    15c8:	67 e0       	ldi	r22, 0x07	; 7
    15ca:	ce 01       	movw	r24, r28
    15cc:	01 96       	adiw	r24, 0x01	; 1
    15ce:	0e 94 ee 08 	call	0x11dc	; 0x11dc <calcCRC>
    15d2:	21 2f       	mov	r18, r17
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	32 2f       	mov	r19, r18
    15d8:	22 27       	eor	r18, r18
    15da:	20 0f       	add	r18, r16
    15dc:	31 1d       	adc	r19, r1
    15de:	82 17       	cp	r24, r18
    15e0:	93 07       	cpc	r25, r19
    15e2:	09 f0       	breq	.+2      	; 0x15e6 <getPacketFromBig+0x96>
    15e4:	be c0       	rjmp	.+380    	; 0x1762 <getPacketFromBig+0x212>
    15e6:	f0 92 2d 39 	sts	0x392D, r15	; 0x80392d <rcvdCmd>
    15ea:	8f 2d       	mov	r24, r15
    15ec:	87 70       	andi	r24, 0x07	; 7
    15ee:	d8 2e       	mov	r13, r24
    15f0:	e2 e0       	ldi	r30, 0x02	; 2
    15f2:	8e 17       	cp	r24, r30
    15f4:	a1 f1       	breq	.+104    	; 0x165e <getPacketFromBig+0x10e>
    15f6:	e8 17       	cp	r30, r24
    15f8:	30 f0       	brcs	.+12     	; 0x1606 <getPacketFromBig+0xb6>
    15fa:	88 23       	and	r24, r24
    15fc:	61 f0       	breq	.+24     	; 0x1616 <getPacketFromBig+0xc6>
    15fe:	f1 e0       	ldi	r31, 0x01	; 1
    1600:	8f 17       	cp	r24, r31
    1602:	d9 f0       	breq	.+54     	; 0x163a <getPacketFromBig+0xea>
    1604:	62 c0       	rjmp	.+196    	; 0x16ca <getPacketFromBig+0x17a>
    1606:	83 e0       	ldi	r24, 0x03	; 3
    1608:	d8 16       	cp	r13, r24
    160a:	d9 f1       	breq	.+118    	; 0x1682 <getPacketFromBig+0x132>
    160c:	e4 e0       	ldi	r30, 0x04	; 4
    160e:	de 16       	cp	r13, r30
    1610:	09 f4       	brne	.+2      	; 0x1614 <getPacketFromBig+0xc4>
    1612:	49 c0       	rjmp	.+146    	; 0x16a6 <getPacketFromBig+0x156>
    1614:	5a c0       	rjmp	.+180    	; 0x16ca <getPacketFromBig+0x17a>
    1616:	ea eb       	ldi	r30, 0xBA	; 186
    1618:	f8 e3       	ldi	r31, 0x38	; 56
    161a:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    161e:	85 83       	std	Z+5, r24	; 0x05
    1620:	80 8a       	std	Z+16, r8	; 0x10
    1622:	91 8a       	std	Z+17, r9	; 0x11
    1624:	a4 8e       	std	Z+28, r10	; 0x1c
    1626:	b5 8e       	std	Z+29, r11	; 0x1d
    1628:	c0 a6       	std	Z+40, r12	; 0x28
    162a:	e1 a6       	std	Z+41, r14	; 0x29
    162c:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_light>
    1630:	90 91 02 38 	lds	r25, 0x3802	; 0x803802 <g_light+0x1>
    1634:	94 ab       	std	Z+52, r25	; 0x34
    1636:	85 ab       	std	Z+53, r24	; 0x35
    1638:	59 c0       	rjmp	.+178    	; 0x16ec <getPacketFromBig+0x19c>
    163a:	ea eb       	ldi	r30, 0xBA	; 186
    163c:	f8 e3       	ldi	r31, 0x38	; 56
    163e:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    1642:	80 83       	st	Z, r24
    1644:	86 82       	std	Z+6, r8	; 0x06
    1646:	97 82       	std	Z+7, r9	; 0x07
    1648:	a2 8a       	std	Z+18, r10	; 0x12
    164a:	b3 8a       	std	Z+19, r11	; 0x13
    164c:	c6 8e       	std	Z+30, r12	; 0x1e
    164e:	e7 8e       	std	Z+31, r14	; 0x1f
    1650:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_light>
    1654:	90 91 02 38 	lds	r25, 0x3802	; 0x803802 <g_light+0x1>
    1658:	92 a7       	std	Z+42, r25	; 0x2a
    165a:	83 a7       	std	Z+43, r24	; 0x2b
    165c:	47 c0       	rjmp	.+142    	; 0x16ec <getPacketFromBig+0x19c>
    165e:	ea eb       	ldi	r30, 0xBA	; 186
    1660:	f8 e3       	ldi	r31, 0x38	; 56
    1662:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    1666:	81 83       	std	Z+1, r24	; 0x01
    1668:	80 86       	std	Z+8, r8	; 0x08
    166a:	91 86       	std	Z+9, r9	; 0x09
    166c:	a4 8a       	std	Z+20, r10	; 0x14
    166e:	b5 8a       	std	Z+21, r11	; 0x15
    1670:	c0 a2       	std	Z+32, r12	; 0x20
    1672:	e1 a2       	std	Z+33, r14	; 0x21
    1674:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_light>
    1678:	90 91 02 38 	lds	r25, 0x3802	; 0x803802 <g_light+0x1>
    167c:	94 a7       	std	Z+44, r25	; 0x2c
    167e:	85 a7       	std	Z+45, r24	; 0x2d
    1680:	35 c0       	rjmp	.+106    	; 0x16ec <getPacketFromBig+0x19c>
    1682:	ea eb       	ldi	r30, 0xBA	; 186
    1684:	f8 e3       	ldi	r31, 0x38	; 56
    1686:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    168a:	82 83       	std	Z+2, r24	; 0x02
    168c:	82 86       	std	Z+10, r8	; 0x0a
    168e:	93 86       	std	Z+11, r9	; 0x0b
    1690:	a6 8a       	std	Z+22, r10	; 0x16
    1692:	b7 8a       	std	Z+23, r11	; 0x17
    1694:	c2 a2       	std	Z+34, r12	; 0x22
    1696:	e3 a2       	std	Z+35, r14	; 0x23
    1698:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_light>
    169c:	90 91 02 38 	lds	r25, 0x3802	; 0x803802 <g_light+0x1>
    16a0:	96 a7       	std	Z+46, r25	; 0x2e
    16a2:	87 a7       	std	Z+47, r24	; 0x2f
    16a4:	23 c0       	rjmp	.+70     	; 0x16ec <getPacketFromBig+0x19c>
    16a6:	ea eb       	ldi	r30, 0xBA	; 186
    16a8:	f8 e3       	ldi	r31, 0x38	; 56
    16aa:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    16ae:	83 83       	std	Z+3, r24	; 0x03
    16b0:	84 86       	std	Z+12, r8	; 0x0c
    16b2:	95 86       	std	Z+13, r9	; 0x0d
    16b4:	a0 8e       	std	Z+24, r10	; 0x18
    16b6:	b1 8e       	std	Z+25, r11	; 0x19
    16b8:	c4 a2       	std	Z+36, r12	; 0x24
    16ba:	e5 a2       	std	Z+37, r14	; 0x25
    16bc:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_light>
    16c0:	90 91 02 38 	lds	r25, 0x3802	; 0x803802 <g_light+0x1>
    16c4:	90 ab       	std	Z+48, r25	; 0x30
    16c6:	81 ab       	std	Z+49, r24	; 0x31
    16c8:	11 c0       	rjmp	.+34     	; 0x16ec <getPacketFromBig+0x19c>
    16ca:	ea eb       	ldi	r30, 0xBA	; 186
    16cc:	f8 e3       	ldi	r31, 0x38	; 56
    16ce:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    16d2:	84 83       	std	Z+4, r24	; 0x04
    16d4:	86 86       	std	Z+14, r8	; 0x0e
    16d6:	97 86       	std	Z+15, r9	; 0x0f
    16d8:	a2 8e       	std	Z+26, r10	; 0x1a
    16da:	b3 8e       	std	Z+27, r11	; 0x1b
    16dc:	c6 a2       	std	Z+38, r12	; 0x26
    16de:	e7 a2       	std	Z+39, r14	; 0x27
    16e0:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_light>
    16e4:	90 91 02 38 	lds	r25, 0x3802	; 0x803802 <g_light+0x1>
    16e8:	92 ab       	std	Z+50, r25	; 0x32
    16ea:	83 ab       	std	Z+51, r24	; 0x33
    16ec:	20 9a       	sbi	0x04, 0	; 4
    16ee:	43 98       	cbi	0x08, 3	; 8
    16f0:	66 e3       	ldi	r22, 0x36	; 54
    16f2:	8a eb       	ldi	r24, 0xBA	; 186
    16f4:	98 e3       	ldi	r25, 0x38	; 56
    16f6:	0e 94 ee 08 	call	0x11dc	; 0x11dc <calcCRC>
    16fa:	ea eb       	ldi	r30, 0xBA	; 186
    16fc:	f8 e3       	ldi	r31, 0x38	; 56
    16fe:	96 ab       	std	Z+54, r25	; 0x36
    1700:	87 ab       	std	Z+55, r24	; 0x37
    1702:	80 81       	ld	r24, Z
    1704:	88 23       	and	r24, r24
    1706:	14 f0       	brlt	.+4      	; 0x170c <getPacketFromBig+0x1bc>
    1708:	28 98       	cbi	0x05, 0	; 5
    170a:	57 c0       	rjmp	.+174    	; 0x17ba <getPacketFromBig+0x26a>
    170c:	28 9a       	sbi	0x05, 0	; 5
    170e:	55 c0       	rjmp	.+170    	; 0x17ba <getPacketFromBig+0x26a>
    1710:	8f e2       	ldi	r24, 0x2F	; 47
    1712:	95 e7       	ldi	r25, 0x75	; 117
    1714:	53 9b       	sbis	0x0a, 3	; 10
    1716:	53 c0       	rjmp	.+166    	; 0x17be <getPacketFromBig+0x26e>
    1718:	01 97       	sbiw	r24, 0x01	; 1
    171a:	e1 f7       	brne	.-8      	; 0x1714 <getPacketFromBig+0x1c4>
    171c:	50 c0       	rjmp	.+160    	; 0x17be <getPacketFromBig+0x26e>
    171e:	f8 01       	movw	r30, r16
    1720:	81 91       	ld	r24, Z+
    1722:	8f 01       	movw	r16, r30
    1724:	0e 94 d7 09 	call	0x13ae	; 0x13ae <sendByteToBig>
    1728:	e0 16       	cp	r14, r16
    172a:	f1 06       	cpc	r15, r17
    172c:	c1 f7       	brne	.-16     	; 0x171e <getPacketFromBig+0x1ce>
    172e:	20 98       	cbi	0x04, 0	; 4
    1730:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
    1734:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
    1738:	62 e0       	ldi	r22, 0x02	; 2
    173a:	8f ed       	ldi	r24, 0xDF	; 223
    173c:	92 ea       	ldi	r25, 0xA2	; 162
    173e:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
    1742:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    1746:	62 e0       	ldi	r22, 0x02	; 2
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <LCDshort>
    174e:	a8 95       	wdr
    1750:	68 ec       	ldi	r22, 0xC8	; 200
    1752:	70 e0       	ldi	r23, 0x00	; 0
    1754:	80 e0       	ldi	r24, 0x00	; 0
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    175c:	10 92 00 38 	sts	0x3800, r1	; 0x803800 <_edata>
    1760:	13 c0       	rjmp	.+38     	; 0x1788 <getPacketFromBig+0x238>
    1762:	88 e0       	ldi	r24, 0x08	; 8
    1764:	80 93 2d 39 	sts	0x392D, r24	; 0x80392d <rcvdCmd>
    1768:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
    176c:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
    1770:	63 e0       	ldi	r22, 0x03	; 3
    1772:	82 ee       	ldi	r24, 0xE2	; 226
    1774:	92 ea       	ldi	r25, 0xA2	; 162
    1776:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
    177a:	a8 95       	wdr
    177c:	68 ec       	ldi	r22, 0xC8	; 200
    177e:	70 e0       	ldi	r23, 0x00	; 0
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1788:	d1 10       	cpse	r13, r1
    178a:	08 c0       	rjmp	.+16     	; 0x179c <getPacketFromBig+0x24c>
    178c:	ea eb       	ldi	r30, 0xBA	; 186
    178e:	f8 e3       	ldi	r31, 0x38	; 56
    1790:	80 ef       	ldi	r24, 0xF0	; 240
    1792:	98 e3       	ldi	r25, 0x38	; 56
    1794:	11 92       	st	Z+, r1
    1796:	8e 17       	cp	r24, r30
    1798:	9f 07       	cpc	r25, r31
    179a:	e1 f7       	brne	.-8      	; 0x1794 <getPacketFromBig+0x244>
    179c:	0e 94 06 01 	call	0x20c	; 0x20c <getLight>
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	80 93 01 38 	sts	0x3801, r24	; 0x803801 <g_light>
    17a6:	90 93 02 38 	sts	0x3802, r25	; 0x803802 <g_light+0x1>
    17aa:	e0 e4       	ldi	r30, 0x40	; 64
    17ac:	f4 e0       	ldi	r31, 0x04	; 4
    17ae:	81 85       	ldd	r24, Z+9	; 0x09
    17b0:	82 60       	ori	r24, 0x02	; 2
    17b2:	81 87       	std	Z+9, r24	; 0x09
    17b4:	78 94       	sei
    17b6:	89 81       	ldd	r24, Y+1	; 0x01
    17b8:	0b c0       	rjmp	.+22     	; 0x17d0 <getPacketFromBig+0x280>
    17ba:	53 99       	sbic	0x0a, 3	; 10
    17bc:	a9 cf       	rjmp	.-174    	; 0x1710 <getPacketFromBig+0x1c0>
    17be:	0a eb       	ldi	r16, 0xBA	; 186
    17c0:	18 e3       	ldi	r17, 0x38	; 56
    17c2:	0f 2e       	mov	r0, r31
    17c4:	f2 ef       	ldi	r31, 0xF2	; 242
    17c6:	ef 2e       	mov	r14, r31
    17c8:	f8 e3       	ldi	r31, 0x38	; 56
    17ca:	ff 2e       	mov	r15, r31
    17cc:	f0 2d       	mov	r31, r0
    17ce:	a7 cf       	rjmp	.-178    	; 0x171e <getPacketFromBig+0x1ce>
    17d0:	29 96       	adiw	r28, 0x09	; 9
    17d2:	cd bf       	out	0x3d, r28	; 61
    17d4:	de bf       	out	0x3e, r29	; 62
    17d6:	df 91       	pop	r29
    17d8:	cf 91       	pop	r28
    17da:	1f 91       	pop	r17
    17dc:	0f 91       	pop	r16
    17de:	ff 90       	pop	r15
    17e0:	ef 90       	pop	r14
    17e2:	df 90       	pop	r13
    17e4:	cf 90       	pop	r12
    17e6:	bf 90       	pop	r11
    17e8:	af 90       	pop	r10
    17ea:	9f 90       	pop	r9
    17ec:	8f 90       	pop	r8
    17ee:	08 95       	ret

000017f0 <send56BytesToBig>:
    17f0:	0f 93       	push	r16
    17f2:	1f 93       	push	r17
    17f4:	cf 93       	push	r28
    17f6:	df 93       	push	r29
    17f8:	8c 01       	movw	r16, r24
    17fa:	20 9a       	sbi	0x04, 0	; 4
    17fc:	43 98       	cbi	0x08, 3	; 8
    17fe:	66 e3       	ldi	r22, 0x36	; 54
    1800:	0e 94 ee 08 	call	0x11dc	; 0x11dc <calcCRC>
    1804:	f8 01       	movw	r30, r16
    1806:	96 ab       	std	Z+54, r25	; 0x36
    1808:	87 ab       	std	Z+55, r24	; 0x37
    180a:	c0 e3       	ldi	r28, 0x30	; 48
    180c:	d5 e7       	ldi	r29, 0x75	; 117
    180e:	28 98       	cbi	0x05, 0	; 5
    1810:	61 e0       	ldi	r22, 0x01	; 1
    1812:	70 e0       	ldi	r23, 0x00	; 0
    1814:	80 e0       	ldi	r24, 0x00	; 0
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	0e 94 99 02 	call	0x532	; 0x532 <myDelay_hus>
    181c:	53 9b       	sbis	0x0a, 3	; 10
    181e:	1a c0       	rjmp	.+52     	; 0x1854 <send56BytesToBig+0x64>
    1820:	21 97       	sbiw	r28, 0x01	; 1
    1822:	a9 f7       	brne	.-22     	; 0x180e <send56BytesToBig+0x1e>
    1824:	17 c0       	rjmp	.+46     	; 0x1854 <send56BytesToBig+0x64>
    1826:	8f e2       	ldi	r24, 0x2F	; 47
    1828:	95 e7       	ldi	r25, 0x75	; 117
    182a:	53 9b       	sbis	0x0a, 3	; 10
    182c:	15 c0       	rjmp	.+42     	; 0x1858 <send56BytesToBig+0x68>
    182e:	01 97       	sbiw	r24, 0x01	; 1
    1830:	e1 f7       	brne	.-8      	; 0x182a <send56BytesToBig+0x3a>
    1832:	12 c0       	rjmp	.+36     	; 0x1858 <send56BytesToBig+0x68>
    1834:	53 99       	sbic	0x0a, 3	; 10
    1836:	02 c0       	rjmp	.+4      	; 0x183c <send56BytesToBig+0x4c>
    1838:	01 97       	sbiw	r24, 0x01	; 1
    183a:	e1 f7       	brne	.-8      	; 0x1834 <send56BytesToBig+0x44>
    183c:	40 9a       	sbi	0x08, 0	; 8
    183e:	48 9a       	sbi	0x09, 0	; 9
    1840:	e8 01       	movw	r28, r16
    1842:	08 5c       	subi	r16, 0xC8	; 200
    1844:	1f 4f       	sbci	r17, 0xFF	; 255
    1846:	89 91       	ld	r24, Y+
    1848:	0e 94 d7 09 	call	0x13ae	; 0x13ae <sendByteToBig>
    184c:	0c 17       	cp	r16, r28
    184e:	1d 07       	cpc	r17, r29
    1850:	d1 f7       	brne	.-12     	; 0x1846 <send56BytesToBig+0x56>
    1852:	07 c0       	rjmp	.+14     	; 0x1862 <send56BytesToBig+0x72>
    1854:	53 99       	sbic	0x0a, 3	; 10
    1856:	e7 cf       	rjmp	.-50     	; 0x1826 <send56BytesToBig+0x36>
    1858:	53 99       	sbic	0x0a, 3	; 10
    185a:	f0 cf       	rjmp	.-32     	; 0x183c <send56BytesToBig+0x4c>
    185c:	8f e2       	ldi	r24, 0x2F	; 47
    185e:	95 e7       	ldi	r25, 0x75	; 117
    1860:	e9 cf       	rjmp	.-46     	; 0x1834 <send56BytesToBig+0x44>
    1862:	df 91       	pop	r29
    1864:	cf 91       	pop	r28
    1866:	1f 91       	pop	r17
    1868:	0f 91       	pop	r16
    186a:	08 95       	ret

0000186c <USART0_ON>:
    186c:	23 98       	cbi	0x04, 3	; 4
    186e:	e3 e3       	ldi	r30, 0x33	; 51
    1870:	f4 e0       	ldi	r31, 0x04	; 4
    1872:	90 81       	ld	r25, Z
    1874:	97 7f       	andi	r25, 0xF7	; 247
    1876:	90 83       	st	Z, r25
    1878:	2a 9a       	sbi	0x05, 2	; 5
    187a:	22 9a       	sbi	0x04, 2	; 4
    187c:	2c e6       	ldi	r18, 0x6C	; 108
    187e:	35 e0       	ldi	r19, 0x05	; 5
    1880:	20 93 08 08 	sts	0x0808, r18	; 0x800808 <__TEXT_REGION_LENGTH__+0x700808>
    1884:	30 93 09 08 	sts	0x0809, r19	; 0x800809 <__TEXT_REGION_LENGTH__+0x700809>
    1888:	88 23       	and	r24, r24
    188a:	21 f0       	breq	.+8      	; 0x1894 <USART0_ON+0x28>
    188c:	80 ec       	ldi	r24, 0xC0	; 192
    188e:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    1892:	10 c0       	rjmp	.+32     	; 0x18b4 <USART0_ON+0x48>
    1894:	23 98       	cbi	0x04, 3	; 4
    1896:	e3 e3       	ldi	r30, 0x33	; 51
    1898:	f4 e0       	ldi	r31, 0x04	; 4
    189a:	80 81       	ld	r24, Z
    189c:	87 7f       	andi	r24, 0xF7	; 247
    189e:	80 83       	st	Z, r24
    18a0:	2a 9a       	sbi	0x05, 2	; 5
    18a2:	22 9a       	sbi	0x04, 2	; 4
    18a4:	e0 e0       	ldi	r30, 0x00	; 0
    18a6:	f8 e0       	ldi	r31, 0x08	; 8
    18a8:	8c e6       	ldi	r24, 0x6C	; 108
    18aa:	95 e0       	ldi	r25, 0x05	; 5
    18ac:	80 87       	std	Z+8, r24	; 0x08
    18ae:	91 87       	std	Z+9, r25	; 0x09
    18b0:	80 e4       	ldi	r24, 0x40	; 64
    18b2:	86 83       	std	Z+6, r24	; 0x06
    18b4:	e0 e0       	ldi	r30, 0x00	; 0
    18b6:	f8 e0       	ldi	r31, 0x08	; 8
    18b8:	81 81       	ldd	r24, Z+1	; 0x01
    18ba:	80 81       	ld	r24, Z
    18bc:	08 95       	ret

000018be <openGPSuBlox>:
    18be:	24 98       	cbi	0x04, 4	; 4
    18c0:	02 9a       	sbi	0x00, 2	; 0
    18c2:	0a 9a       	sbi	0x01, 2	; 1
    18c4:	84 e0       	ldi	r24, 0x04	; 4
    18c6:	98 e3       	ldi	r25, 0x38	; 56
    18c8:	80 93 34 39 	sts	0x3934, r24	; 0x803934 <p_GPSrcvData>
    18cc:	90 93 35 39 	sts	0x3935, r25	; 0x803935 <p_GPSrcvData+0x1>
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	0e 94 36 0c 	call	0x186c	; 0x186c <USART0_ON>
    18d6:	08 95       	ret

000018d8 <USART0_OFF>:
    18d8:	10 92 06 08 	sts	0x0806, r1	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    18dc:	23 9a       	sbi	0x04, 3	; 4
    18de:	22 9a       	sbi	0x04, 2	; 4
    18e0:	2a 98       	cbi	0x05, 2	; 5
    18e2:	2b 98       	cbi	0x05, 3	; 5
    18e4:	08 95       	ret

000018e6 <closeGPS>:
    18e6:	02 9a       	sbi	0x00, 2	; 0
    18e8:	0a 98       	cbi	0x01, 2	; 1
    18ea:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <USART0_OFF>
    18ee:	08 95       	ret

000018f0 <gTryUblox>:
    18f0:	df 92       	push	r13
    18f2:	ef 92       	push	r14
    18f4:	ff 92       	push	r15
    18f6:	0f 93       	push	r16
    18f8:	1f 93       	push	r17
    18fa:	cf 93       	push	r28
    18fc:	df 93       	push	r29
    18fe:	68 94       	set
    1900:	dd 24       	eor	r13, r13
    1902:	d3 f8       	bld	r13, 3
    1904:	e1 2c       	mov	r14, r1
    1906:	68 94       	set
    1908:	ff 24       	eor	r15, r15
    190a:	f3 f8       	bld	r15, 3
    190c:	d9 ef       	ldi	r29, 0xF9	; 249
    190e:	c3 e0       	ldi	r28, 0x03	; 3
    1910:	a8 95       	wdr
    1912:	6a ef       	ldi	r22, 0xFA	; 250
    1914:	70 e0       	ldi	r23, 0x00	; 0
    1916:	80 e0       	ldi	r24, 0x00	; 0
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    191e:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <clrRx>
    1922:	f7 01       	movw	r30, r14
    1924:	85 81       	ldd	r24, Z+5	; 0x05
    1926:	80 68       	ori	r24, 0x80	; 128
    1928:	85 83       	std	Z+5, r24	; 0x05
    192a:	78 94       	sei
    192c:	0e 94 83 05 	call	0xb06	; 0xb06 <gpsReqStatusUblox>
    1930:	8c 01       	movw	r16, r24
    1932:	c1 50       	subi	r28, 0x01	; 1
    1934:	21 f0       	breq	.+8      	; 0x193e <gTryUblox+0x4e>
    1936:	8a 39       	cpi	r24, 0x9A	; 154
    1938:	92 40       	sbci	r25, 0x02	; 2
    193a:	51 f3       	breq	.-44     	; 0x1910 <gTryUblox+0x20>
    193c:	20 c0       	rjmp	.+64     	; 0x197e <gTryUblox+0x8e>
    193e:	61 e0       	ldi	r22, 0x01	; 1
    1940:	86 ee       	ldi	r24, 0xE6	; 230
    1942:	92 ea       	ldi	r25, 0xA2	; 162
    1944:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
    1948:	d1 50       	subi	r29, 0x01	; 1
    194a:	29 f0       	breq	.+10     	; 0x1956 <gTryUblox+0x66>
    194c:	0a 39       	cpi	r16, 0x9A	; 154
    194e:	82 e0       	ldi	r24, 0x02	; 2
    1950:	18 07       	cpc	r17, r24
    1952:	e9 f2       	breq	.-70     	; 0x190e <gTryUblox+0x1e>
    1954:	1b c0       	rjmp	.+54     	; 0x198c <gTryUblox+0x9c>
    1956:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <closeGPS>
    195a:	68 ee       	ldi	r22, 0xE8	; 232
    195c:	73 e0       	ldi	r23, 0x03	; 3
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1966:	0e 94 5f 0c 	call	0x18be	; 0x18be <openGPSuBlox>
    196a:	0e 94 c0 02 	call	0x580	; 0x580 <initGPSuBlox>
    196e:	da 94       	dec	r13
    1970:	dd 20       	and	r13, r13
    1972:	61 f0       	breq	.+24     	; 0x198c <gTryUblox+0x9c>
    1974:	0a 39       	cpi	r16, 0x9A	; 154
    1976:	e2 e0       	ldi	r30, 0x02	; 2
    1978:	1e 07       	cpc	r17, r30
    197a:	41 f2       	breq	.-112    	; 0x190c <gTryUblox+0x1c>
    197c:	07 c0       	rjmp	.+14     	; 0x198c <gTryUblox+0x9c>
    197e:	61 e0       	ldi	r22, 0x01	; 1
    1980:	86 ee       	ldi	r24, 0xE6	; 230
    1982:	92 ea       	ldi	r25, 0xA2	; 162
    1984:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
    1988:	d1 30       	cpi	r29, 0x01	; 1
    198a:	29 f3       	breq	.-54     	; 0x1956 <gTryUblox+0x66>
    198c:	c8 01       	movw	r24, r16
    198e:	df 91       	pop	r29
    1990:	cf 91       	pop	r28
    1992:	1f 91       	pop	r17
    1994:	0f 91       	pop	r16
    1996:	ff 90       	pop	r15
    1998:	ef 90       	pop	r14
    199a:	df 90       	pop	r13
    199c:	08 95       	ret

0000199e <sleepPins>:
    199e:	cf 93       	push	r28
    19a0:	df 93       	push	r29
    19a2:	00 98       	cbi	0x00, 0	; 0
    19a4:	e0 e1       	ldi	r30, 0x10	; 16
    19a6:	f4 e0       	ldi	r31, 0x04	; 4
    19a8:	90 81       	ld	r25, Z
    19aa:	98 60       	ori	r25, 0x08	; 8
    19ac:	90 83       	st	Z, r25
    19ae:	01 98       	cbi	0x00, 1	; 0
    19b0:	e1 e1       	ldi	r30, 0x11	; 17
    19b2:	f4 e0       	ldi	r31, 0x04	; 4
    19b4:	90 81       	ld	r25, Z
    19b6:	98 60       	ori	r25, 0x08	; 8
    19b8:	90 83       	st	Z, r25
    19ba:	03 98       	cbi	0x00, 3	; 0
    19bc:	e3 e1       	ldi	r30, 0x13	; 19
    19be:	f4 e0       	ldi	r31, 0x04	; 4
    19c0:	90 81       	ld	r25, Z
    19c2:	98 60       	ori	r25, 0x08	; 8
    19c4:	90 83       	st	Z, r25
    19c6:	04 98       	cbi	0x00, 4	; 0
    19c8:	e4 e1       	ldi	r30, 0x14	; 20
    19ca:	f4 e0       	ldi	r31, 0x04	; 4
    19cc:	90 81       	ld	r25, Z
    19ce:	98 60       	ori	r25, 0x08	; 8
    19d0:	90 83       	st	Z, r25
    19d2:	05 98       	cbi	0x00, 5	; 0
    19d4:	e5 e1       	ldi	r30, 0x15	; 21
    19d6:	f4 e0       	ldi	r31, 0x04	; 4
    19d8:	90 81       	ld	r25, Z
    19da:	98 60       	ori	r25, 0x08	; 8
    19dc:	90 83       	st	Z, r25
    19de:	06 98       	cbi	0x00, 6	; 0
    19e0:	e6 e1       	ldi	r30, 0x16	; 22
    19e2:	f4 e0       	ldi	r31, 0x04	; 4
    19e4:	90 81       	ld	r25, Z
    19e6:	98 60       	ori	r25, 0x08	; 8
    19e8:	90 83       	st	Z, r25
    19ea:	07 98       	cbi	0x00, 7	; 0
    19ec:	e7 e1       	ldi	r30, 0x17	; 23
    19ee:	f4 e0       	ldi	r31, 0x04	; 4
    19f0:	90 81       	ld	r25, Z
    19f2:	98 60       	ori	r25, 0x08	; 8
    19f4:	90 83       	st	Z, r25
    19f6:	20 98       	cbi	0x04, 0	; 4
    19f8:	e0 e3       	ldi	r30, 0x30	; 48
    19fa:	f4 e0       	ldi	r31, 0x04	; 4
    19fc:	90 81       	ld	r25, Z
    19fe:	97 7f       	andi	r25, 0xF7	; 247
    1a00:	90 83       	st	Z, r25
    1a02:	21 98       	cbi	0x04, 1	; 4
    1a04:	e1 e3       	ldi	r30, 0x31	; 49
    1a06:	f4 e0       	ldi	r31, 0x04	; 4
    1a08:	90 81       	ld	r25, Z
    1a0a:	98 60       	ori	r25, 0x08	; 8
    1a0c:	90 83       	st	Z, r25
    1a0e:	24 98       	cbi	0x04, 4	; 4
    1a10:	e4 e3       	ldi	r30, 0x34	; 52
    1a12:	f4 e0       	ldi	r31, 0x04	; 4
    1a14:	90 81       	ld	r25, Z
    1a16:	98 60       	ori	r25, 0x08	; 8
    1a18:	90 83       	st	Z, r25
    1a1a:	25 98       	cbi	0x04, 5	; 4
    1a1c:	e5 e3       	ldi	r30, 0x35	; 53
    1a1e:	f4 e0       	ldi	r31, 0x04	; 4
    1a20:	90 81       	ld	r25, Z
    1a22:	98 60       	ori	r25, 0x08	; 8
    1a24:	90 83       	st	Z, r25
    1a26:	26 98       	cbi	0x04, 6	; 4
    1a28:	e6 e3       	ldi	r30, 0x36	; 54
    1a2a:	f4 e0       	ldi	r31, 0x04	; 4
    1a2c:	90 81       	ld	r25, Z
    1a2e:	97 7f       	andi	r25, 0xF7	; 247
    1a30:	90 83       	st	Z, r25
    1a32:	90 81       	ld	r25, Z
    1a34:	98 7f       	andi	r25, 0xF8	; 248
    1a36:	92 60       	ori	r25, 0x02	; 2
    1a38:	90 83       	st	Z, r25
    1a3a:	27 98       	cbi	0x04, 7	; 4
    1a3c:	e7 e3       	ldi	r30, 0x37	; 55
    1a3e:	f4 e0       	ldi	r31, 0x04	; 4
    1a40:	90 81       	ld	r25, Z
    1a42:	98 60       	ori	r25, 0x08	; 8
    1a44:	90 83       	st	Z, r25
    1a46:	40 98       	cbi	0x08, 0	; 8
    1a48:	e0 e5       	ldi	r30, 0x50	; 80
    1a4a:	f4 e0       	ldi	r31, 0x04	; 4
    1a4c:	90 81       	ld	r25, Z
    1a4e:	98 60       	ori	r25, 0x08	; 8
    1a50:	90 83       	st	Z, r25
    1a52:	41 98       	cbi	0x08, 1	; 8
    1a54:	e1 e5       	ldi	r30, 0x51	; 81
    1a56:	f4 e0       	ldi	r31, 0x04	; 4
    1a58:	90 81       	ld	r25, Z
    1a5a:	98 60       	ori	r25, 0x08	; 8
    1a5c:	90 83       	st	Z, r25
    1a5e:	88 23       	and	r24, r24
    1a60:	29 f0       	breq	.+10     	; 0x1a6c <sleepPins+0xce>
    1a62:	80 81       	ld	r24, Z
    1a64:	88 7f       	andi	r24, 0xF8	; 248
    1a66:	85 60       	ori	r24, 0x05	; 5
    1a68:	80 83       	st	Z, r24
    1a6a:	05 c0       	rjmp	.+10     	; 0x1a76 <sleepPins+0xd8>
    1a6c:	e1 e5       	ldi	r30, 0x51	; 81
    1a6e:	f4 e0       	ldi	r31, 0x04	; 4
    1a70:	80 81       	ld	r24, Z
    1a72:	88 7f       	andi	r24, 0xF8	; 248
    1a74:	80 83       	st	Z, r24
    1a76:	42 98       	cbi	0x08, 2	; 8
    1a78:	e2 e5       	ldi	r30, 0x52	; 82
    1a7a:	f4 e0       	ldi	r31, 0x04	; 4
    1a7c:	80 81       	ld	r24, Z
    1a7e:	88 60       	ori	r24, 0x08	; 8
    1a80:	80 83       	st	Z, r24
    1a82:	43 98       	cbi	0x08, 3	; 8
    1a84:	e3 e5       	ldi	r30, 0x53	; 83
    1a86:	f4 e0       	ldi	r31, 0x04	; 4
    1a88:	80 81       	ld	r24, Z
    1a8a:	87 7f       	andi	r24, 0xF7	; 247
    1a8c:	80 83       	st	Z, r24
    1a8e:	44 98       	cbi	0x08, 4	; 8
    1a90:	e4 e5       	ldi	r30, 0x54	; 84
    1a92:	f4 e0       	ldi	r31, 0x04	; 4
    1a94:	80 81       	ld	r24, Z
    1a96:	88 60       	ori	r24, 0x08	; 8
    1a98:	80 83       	st	Z, r24
    1a9a:	45 98       	cbi	0x08, 5	; 8
    1a9c:	c5 e5       	ldi	r28, 0x55	; 85
    1a9e:	d4 e0       	ldi	r29, 0x04	; 4
    1aa0:	88 81       	ld	r24, Y
    1aa2:	88 60       	ori	r24, 0x08	; 8
    1aa4:	88 83       	st	Y, r24
    1aa6:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
    1aaa:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1aae:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <closeGPS>
    1ab2:	88 81       	ld	r24, Y
    1ab4:	88 60       	ori	r24, 0x08	; 8
    1ab6:	88 83       	st	Y, r24
    1ab8:	df 91       	pop	r29
    1aba:	cf 91       	pop	r28
    1abc:	08 95       	ret

00001abe <getGPS>:
    1abe:	0f 93       	push	r16
    1ac0:	1f 93       	push	r17
    1ac2:	cf 93       	push	r28
    1ac4:	df 93       	push	r29
    1ac6:	0e 94 5f 0c 	call	0x18be	; 0x18be <openGPSuBlox>
    1aca:	0e 94 c0 02 	call	0x580	; 0x580 <initGPSuBlox>
    1ace:	0e 94 c0 02 	call	0x580	; 0x580 <initGPSuBlox>
    1ad2:	0e 94 c0 02 	call	0x580	; 0x580 <initGPSuBlox>
    1ad6:	10 92 2a 39 	sts	0x392A, r1	; 0x80392a <timeToFix>
    1ada:	10 92 2b 39 	sts	0x392B, r1	; 0x80392b <timeToFix+0x1>
    1ade:	0e 94 ad 00 	call	0x15a	; 0x15a <getBatt>
    1ae2:	80 93 02 39 	sts	0x3902, r24	; 0x803902 <gpsParams+0x10>
    1ae6:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <gTryUblox>
    1aea:	8c 01       	movw	r16, r24
    1aec:	89 2b       	or	r24, r25
    1aee:	59 f0       	breq	.+22     	; 0x1b06 <getGPS+0x48>
    1af0:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <closeGPS>
    1af4:	0a e9       	ldi	r16, 0x9A	; 154
    1af6:	12 e0       	ldi	r17, 0x02	; 2
    1af8:	4b c0       	rjmp	.+150    	; 0x1b90 <getGPS+0xd2>
    1afa:	c1 50       	subi	r28, 0x01	; 1
    1afc:	29 f4       	brne	.+10     	; 0x1b08 <getGPS+0x4a>
    1afe:	0f c0       	rjmp	.+30     	; 0x1b1e <getGPS+0x60>
    1b00:	c1 11       	cpse	r28, r1
    1b02:	09 c0       	rjmp	.+18     	; 0x1b16 <getGPS+0x58>
    1b04:	0c c0       	rjmp	.+24     	; 0x1b1e <getGPS+0x60>
    1b06:	cf e0       	ldi	r28, 0x0F	; 15
    1b08:	0e 94 50 05 	call	0xaa0	; 0xaa0 <GPSgetDate>
    1b0c:	89 2b       	or	r24, r25
    1b0e:	a9 f7       	brne	.-22     	; 0x1afa <getGPS+0x3c>
    1b10:	f7 cf       	rjmp	.-18     	; 0x1b00 <getGPS+0x42>
    1b12:	c1 50       	subi	r28, 0x01	; 1
    1b14:	21 f0       	breq	.+8      	; 0x1b1e <getGPS+0x60>
    1b16:	0e 94 98 08 	call	0x1130	; 0x1130 <GPSgetTime>
    1b1a:	89 2b       	or	r24, r25
    1b1c:	d1 f7       	brne	.-12     	; 0x1b12 <getGPS+0x54>
    1b1e:	6a e0       	ldi	r22, 0x0A	; 10
    1b20:	88 ee       	ldi	r24, 0xE8	; 232
    1b22:	92 ea       	ldi	r25, 0xA2	; 162
    1b24:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
    1b28:	f8 94       	cli
    1b2a:	c0 e0       	ldi	r28, 0x00	; 0
    1b2c:	a8 95       	wdr
    1b2e:	cf 5f       	subi	r28, 0xFF	; 255
    1b30:	40 9a       	sbi	0x08, 0	; 8
    1b32:	48 98       	cbi	0x09, 0	; 9
    1b34:	82 ef       	ldi	r24, 0xF2	; 242
    1b36:	98 e3       	ldi	r25, 0x38	; 56
    1b38:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <send56BytesToBig>
    1b3c:	0e 94 36 09 	call	0x126c	; 0x126c <getByteFromBig>
    1b40:	d8 2f       	mov	r29, r24
    1b42:	0e 94 a4 03 	call	0x748	; 0x748 <LCDclear>
    1b46:	62 e0       	ldi	r22, 0x02	; 2
    1b48:	8d 2f       	mov	r24, r29
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <LCDshort>
    1b50:	6c 2f       	mov	r22, r28
    1b52:	62 95       	swap	r22
    1b54:	66 95       	lsr	r22
    1b56:	66 95       	lsr	r22
    1b58:	63 70       	andi	r22, 0x03	; 3
    1b5a:	70 e0       	ldi	r23, 0x00	; 0
    1b5c:	80 e0       	ldi	r24, 0x00	; 0
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1b64:	d7 34       	cpi	r29, 0x47	; 71
    1b66:	11 f0       	breq	.+4      	; 0x1b6c <getGPS+0xae>
    1b68:	ce 31       	cpi	r28, 0x1E	; 30
    1b6a:	01 f7       	brne	.-64     	; 0x1b2c <getGPS+0x6e>
    1b6c:	78 94       	sei
    1b6e:	a8 95       	wdr
    1b70:	60 ed       	ldi	r22, 0xD0	; 208
    1b72:	77 e0       	ldi	r23, 0x07	; 7
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1b7c:	a8 95       	wdr
    1b7e:	60 ed       	ldi	r22, 0xD0	; 208
    1b80:	77 e0       	ldi	r23, 0x07	; 7
    1b82:	80 e0       	ldi	r24, 0x00	; 0
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1b8a:	a8 95       	wdr
    1b8c:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <USART0_OFF>
    1b90:	c8 01       	movw	r24, r16
    1b92:	df 91       	pop	r29
    1b94:	cf 91       	pop	r28
    1b96:	1f 91       	pop	r17
    1b98:	0f 91       	pop	r16
    1b9a:	08 95       	ret

00001b9c <pirSUdelay>:
    1b9c:	80 e0       	ldi	r24, 0x00	; 0
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	00 00       	nop
    1ba2:	01 96       	adiw	r24, 0x01	; 1
    1ba4:	8c 33       	cpi	r24, 0x3C	; 60
    1ba6:	91 05       	cpc	r25, r1
    1ba8:	d9 f7       	brne	.-10     	; 0x1ba0 <pirSUdelay+0x4>
    1baa:	08 95       	ret

00001bac <setPIRbit>:
    1bac:	0f 93       	push	r16
    1bae:	1f 93       	push	r17
    1bb0:	cf 93       	push	r28
    1bb2:	df 93       	push	r29
    1bb4:	c7 e0       	ldi	r28, 0x07	; 7
    1bb6:	d0 e0       	ldi	r29, 0x00	; 0
    1bb8:	08 2f       	mov	r16, r24
    1bba:	10 e0       	ldi	r17, 0x00	; 0
    1bbc:	2f 98       	cbi	0x05, 7	; 5
    1bbe:	00 00       	nop
    1bc0:	00 00       	nop
    1bc2:	2f 9a       	sbi	0x05, 7	; 5
    1bc4:	00 00       	nop
    1bc6:	00 00       	nop
    1bc8:	98 01       	movw	r18, r16
    1bca:	0c 2e       	mov	r0, r28
    1bcc:	02 c0       	rjmp	.+4      	; 0x1bd2 <setPIRbit+0x26>
    1bce:	35 95       	asr	r19
    1bd0:	27 95       	ror	r18
    1bd2:	0a 94       	dec	r0
    1bd4:	e2 f7       	brpl	.-8      	; 0x1bce <setPIRbit+0x22>
    1bd6:	20 fd       	sbrc	r18, 0
    1bd8:	02 c0       	rjmp	.+4      	; 0x1bde <setPIRbit+0x32>
    1bda:	2f 98       	cbi	0x05, 7	; 5
    1bdc:	01 c0       	rjmp	.+2      	; 0x1be0 <setPIRbit+0x34>
    1bde:	2f 9a       	sbi	0x05, 7	; 5
    1be0:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <pirSUdelay>
    1be4:	21 97       	sbiw	r28, 0x01	; 1
    1be6:	50 f7       	brcc	.-44     	; 0x1bbc <setPIRbit+0x10>
    1be8:	df 91       	pop	r29
    1bea:	cf 91       	pop	r28
    1bec:	1f 91       	pop	r17
    1bee:	0f 91       	pop	r16
    1bf0:	08 95       	ret

00001bf2 <setPIRconfig>:
    1bf2:	1f 93       	push	r17
    1bf4:	cf 93       	push	r28
    1bf6:	df 93       	push	r29
    1bf8:	16 2f       	mov	r17, r22
    1bfa:	d4 2f       	mov	r29, r20
    1bfc:	c2 2f       	mov	r28, r18
    1bfe:	2f 98       	cbi	0x05, 7	; 5
    1c00:	27 9a       	sbi	0x04, 7	; 4
    1c02:	2f 98       	cbi	0x05, 7	; 5
    1c04:	00 00       	nop
    1c06:	00 00       	nop
    1c08:	2f 9a       	sbi	0x05, 7	; 5
    1c0a:	00 00       	nop
    1c0c:	00 00       	nop
    1c0e:	80 fd       	sbrc	r24, 0
    1c10:	02 c0       	rjmp	.+4      	; 0x1c16 <setPIRconfig+0x24>
    1c12:	2f 98       	cbi	0x05, 7	; 5
    1c14:	01 c0       	rjmp	.+2      	; 0x1c18 <setPIRconfig+0x26>
    1c16:	2f 9a       	sbi	0x05, 7	; 5
    1c18:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <pirSUdelay>
    1c1c:	81 2f       	mov	r24, r17
    1c1e:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <setPIRbit>
    1c22:	8d 2f       	mov	r24, r29
    1c24:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <setPIRbit>
    1c28:	8c 2f       	mov	r24, r28
    1c2a:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <setPIRbit>
    1c2e:	df 91       	pop	r29
    1c30:	cf 91       	pop	r28
    1c32:	1f 91       	pop	r17
    1c34:	08 95       	ret

00001c36 <pirCLKdelay>:
    1c36:	00 00       	nop
    1c38:	08 95       	ret

00001c3a <clearPIRinterrupt>:
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1c3a:	26 9a       	sbi	0x04, 6	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1c3c:	2e 98       	cbi	0x05, 6	; 5
*    PIR Clear Interrupt
********************************************/
void clearPIRinterrupt(){
	TPB6_set_dir(PORT_DIR_OUT);
	PORTB_set_pin_level(6, 0);
	pirCLKdelay();
    1c3e:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <pirCLKdelay>
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    1c42:	26 98       	cbi	0x04, 6	; 4
    1c44:	08 95       	ret

00001c46 <main>:
	unsigned int pirD=0;
	unsigned int pirE=0;
	short sensitivtyAll = PIR_SENSITIVITY;//birdbox 0060  May 2019
	short rcvdSensitivtyAll;

	g_motionMinTotal=0;
    1c46:	10 92 00 38 	sts	0x3800, r1	; 0x803800 <_edata>
	g_rxDataIndex=0;

	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    1c4a:	0e 94 aa 00 	call	0x154	; 0x154 <atmel_start_init>
	CCP = 0xD8;//enable writes to WDT
    1c4e:	88 ed       	ldi	r24, 0xD8	; 216
    1c50:	84 bf       	out	0x34, r24	; 52
	WDT.STATUS = 0x00;//
    1c52:	e0 e0       	ldi	r30, 0x00	; 0
    1c54:	f1 e0       	ldi	r31, 0x01	; 1
    1c56:	11 82       	std	Z+1, r1	; 0x01
	CCP = 0xD8;//enable writes to WDT
    1c58:	84 bf       	out	0x34, r24	; 52
	WDT.CTRLA = 0;//MY_WDT;//0=disable watchdog. 0x0B=8 seconds
    1c5a:	10 82       	st	Z, r1

	DISABLE_INTERRUPTS();
    1c5c:	f8 94       	cli
	ccp_write_io((void*)&(CLKCTRL.OSC32KCTRLA),1 << CLKCTRL_RUNSTDBY_bp /* Run standby: enabled */);
    1c5e:	62 e0       	ldi	r22, 0x02	; 2
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	88 e7       	ldi	r24, 0x78	; 120
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	0e 94 0b 11 	call	0x2216	; 0x2216 <ccp_write_io>
//	redBlink(11);
	mState=BEGIN;
    1c6a:	10 92 33 39 	sts	0x3933, r1	; 0x803933 <mState>
    1c6e:	ea eb       	ldi	r30, 0xBA	; 186
    1c70:	f8 e3       	ldi	r31, 0x38	; 56
    1c72:	82 ef       	ldi	r24, 0xF2	; 242
    1c74:	98 e3       	ldi	r25, 0x38	; 56
	for (iters=0;iters<SIZEOFMOTPARAMS;iters++)motParams[iters]=0;//SizeOfMotParams = 56
    1c76:	11 92       	st	Z+, r1
    1c78:	e8 17       	cp	r30, r24
    1c7a:	f9 07       	cpc	r31, r25
    1c7c:	e1 f7       	brne	.-8      	; 0x1c76 <main+0x30>
	sleepPins(1);
    1c7e:	81 e0       	ldi	r24, 0x01	; 1
    1c80:	0e 94 cf 0c 	call	0x199e	; 0x199e <sleepPins>
	NOP();
    1c84:	00 00       	nop
	WDT_RST();
    1c86:	a8 95       	wdr
#ifdef KILL_CURR_TEST
	redBlink(5);
    1c88:	85 e0       	ldi	r24, 0x05	; 5
    1c8a:	0e 94 5f 02 	call	0x4be	; 0x4be <redBlink>
	delay_ms(3000);
    1c8e:	68 eb       	ldi	r22, 0xB8	; 184
    1c90:	7b e0       	ldi	r23, 0x0B	; 11
    1c92:	80 e0       	ldi	r24, 0x00	; 0
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1c9a:	c0 e5       	ldi	r28, 0x50	; 80
    1c9c:	d0 e0       	ldi	r29, 0x00	; 0
    1c9e:	13 e0       	ldi	r17, 0x03	; 3
    1ca0:	18 83       	st	Y, r17
	NOP();
    1ca2:	00 00       	nop
	sleep_enable();
    1ca4:	88 81       	ld	r24, Y
    1ca6:	81 60       	ori	r24, 0x01	; 1
    1ca8:	88 83       	st	Y, r24
	sleep_cpu();
    1caa:	88 95       	sleep
#endif
	DISABLE_INTERRUPTS();
    1cac:	f8 94       	cli

#ifdef DO_DIAGS
	short battVal;
	  USART_0_initialization();
    1cae:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
//	  for(;;){
//	LCDclear();
	usart_put_string(&("BOOTA"),5);
    1cb2:	65 e0       	ldi	r22, 0x05	; 5
    1cb4:	83 ef       	ldi	r24, 0xF3	; 243
    1cb6:	92 ea       	ldi	r25, 0xA2	; 162
    1cb8:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
//	delay_ms(100);
//	LCDbottomLine();
//	usart_put_string(&("Startup B"),9);
//	delay_ms(100);
		WDT_RST();
    1cbc:	a8 95       	wdr
		delay_ms(1000);
    1cbe:	68 ee       	ldi	r22, 0xE8	; 232
    1cc0:	73 e0       	ldi	r23, 0x03	; 3
    1cc2:	80 e0       	ldi	r24, 0x00	; 0
    1cc4:	90 e0       	ldi	r25, 0x00	; 0
    1cc6:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08

}*/
/**** END DEV ****/

	VPORTA_INTFLAGS = 0xFF;
    1cca:	8f ef       	ldi	r24, 0xFF	; 255
    1ccc:	83 b9       	out	0x03, r24	; 3
	VPORTB_INTFLAGS = 0xFF;
    1cce:	87 b9       	out	0x07, r24	; 7
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1cd0:	e1 e5       	ldi	r30, 0x51	; 81
    1cd2:	f4 e0       	ldi	r31, 0x04	; 4
    1cd4:	80 81       	ld	r24, Z
    1cd6:	88 7f       	andi	r24, 0xF8	; 248
    1cd8:	85 60       	ori	r24, 0x05	; 5
    1cda:	80 83       	st	Z, r24
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1cdc:	e6 e3       	ldi	r30, 0x36	; 54
    1cde:	f4 e0       	ldi	r31, 0x04	; 4
    1ce0:	80 81       	ld	r24, Z
    1ce2:	88 7f       	andi	r24, 0xF8	; 248
    1ce4:	82 60       	ori	r24, 0x02	; 2
    1ce6:	80 83       	st	Z, r24
//	VPORTC_INTFLAGS = 0x3F;
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	TPB6_set_isc(PORT_ISC_RISING_gc);//Motion Switch
    *((uint8_t*)0x0A4A)&=~0x31;//TCA0 Ints
    1ce8:	ea e4       	ldi	r30, 0x4A	; 74
    1cea:	fa e0       	ldi	r31, 0x0A	; 10
    1cec:	80 81       	ld	r24, Z
    1cee:	8e 7c       	andi	r24, 0xCE	; 206
    1cf0:	80 83       	st	Z, r24
    *((uint8_t*)0x0A4B)|=0x31;//TCA0 Flags
    1cf2:	eb e4       	ldi	r30, 0x4B	; 75
    1cf4:	fa e0       	ldi	r31, 0x0A	; 10
    1cf6:	80 81       	ld	r24, Z
    1cf8:	81 63       	ori	r24, 0x31	; 49
    1cfa:	80 83       	st	Z, r24
	USART0_OFF();
    1cfc:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <USART0_OFF>

	ENABLE_INTERRUPTS();
    1d00:	78 94       	sei
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1d02:	18 83       	st	Y, r17

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600); /* set baud rate register for LCD*/
    1d04:	8c e6       	ldi	r24, 0x6C	; 108
    1d06:	95 e0       	ldi	r25, 0x05	; 5
    1d08:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x700808>
    1d0c:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x700809>
#ifdef DO_SOLAR_BATT_CHECK
	char battery;
	goodBattCtr=0;
    1d10:	c0 e0       	ldi	r28, 0x00	; 0
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1d12:	0f 2e       	mov	r0, r31
    1d14:	f6 e1       	ldi	r31, 0x16	; 22
    1d16:	cf 2e       	mov	r12, r31
    1d18:	f4 e0       	ldi	r31, 0x04	; 4
    1d1a:	df 2e       	mov	r13, r31
    1d1c:	f0 2d       	mov	r31, r0
	while(goodBattCtr<SOLAR_BATT_WAIT){//Wait here, possibly forever, until batt has been above threshhold for a while
		TPA6_set_dir(PORT_DIR_IN);
		TPA6_set_pull_mode(PORT_PULL_OFF);
		WDT_RST();
		mState=SOLAR_WAIT;
    1d1e:	68 94       	set
    1d20:	99 24       	eor	r9, r9
    1d22:	93 f8       	bld	r9, 3
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1d24:	01 e5       	ldi	r16, 0x51	; 81
    1d26:	14 e0       	ldi	r17, 0x04	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    1d28:	0f 2e       	mov	r0, r31
    1d2a:	f5 e3       	ldi	r31, 0x35	; 53
    1d2c:	ef 2e       	mov	r14, r31
    1d2e:	f4 e0       	ldi	r31, 0x04	; 4
    1d30:	ff 2e       	mov	r15, r31
    1d32:	f0 2d       	mov	r31, r0
		delay_ms(200);
		sleepPins(0);
		//		delay_ms(1050);
		ENABLE_INTERRUPTS();//might not have to do this every time.
		TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
		SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1d34:	0f 2e       	mov	r0, r31
    1d36:	f0 e5       	ldi	r31, 0x50	; 80
    1d38:	af 2e       	mov	r10, r31
    1d3a:	b1 2c       	mov	r11, r1
    1d3c:	f0 2d       	mov	r31, r0
    1d3e:	d3 e0       	ldi	r29, 0x03	; 3
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    1d40:	06 98       	cbi	0x00, 6	; 0
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1d42:	f6 01       	movw	r30, r12
    1d44:	80 81       	ld	r24, Z
    1d46:	87 7f       	andi	r24, 0xF7	; 247
    1d48:	80 83       	st	Z, r24
	char battery;
	goodBattCtr=0;
	while(goodBattCtr<SOLAR_BATT_WAIT){//Wait here, possibly forever, until batt has been above threshhold for a while
		TPA6_set_dir(PORT_DIR_IN);
		TPA6_set_pull_mode(PORT_PULL_OFF);
		WDT_RST();
    1d4a:	a8 95       	wdr
		mState=SOLAR_WAIT;
    1d4c:	90 92 33 39 	sts	0x3933, r9	; 0x803933 <mState>
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1d50:	f8 01       	movw	r30, r16
    1d52:	80 81       	ld	r24, Z
    1d54:	88 7f       	andi	r24, 0xF8	; 248
    1d56:	80 83       	st	Z, r24
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1d58:	4c 98       	cbi	0x09, 4	; 9
		TPC1_set_isc(PORT_ISC_INTDISABLE_gc);//C1=WAKEUP FROM BIG
		PORTC_set_pin_level(4, 0);	//Sleep V71 Low
		USART0_ON(0);
    1d5a:	80 e0       	ldi	r24, 0x00	; 0
    1d5c:	0e 94 36 0c 	call	0x186c	; 0x186c <USART0_ON>
		usart_put_string("S",1);
    1d60:	61 e0       	ldi	r22, 0x01	; 1
    1d62:	84 e1       	ldi	r24, 0x14	; 20
    1d64:	93 ea       	ldi	r25, 0xA3	; 163
    1d66:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
		if ((goodBattCtr==(SOLAR_BATT_WAIT-10))||(goodBattCtr==2)){
    1d6a:	ce 3b       	cpi	r28, 0xBE	; 190
    1d6c:	11 f0       	breq	.+4      	; 0x1d72 <main+0x12c>
    1d6e:	c2 30       	cpi	r28, 0x02	; 2
    1d70:	41 f4       	brne	.+16     	; 0x1d82 <main+0x13c>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1d72:	25 9a       	sbi	0x04, 5	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1d74:	2d 98       	cbi	0x05, 5	; 5
			TPB5_set_dir(PORT_DIR_OUT);	//reworked to reset big
			PORTB_set_pin_level(5, 0);	//reworked to reset big
			delay_ms(2000);
    1d76:	60 ed       	ldi	r22, 0xD0	; 208
    1d78:	77 e0       	ldi	r23, 0x07	; 7
    1d7a:	80 e0       	ldi	r24, 0x00	; 0
    1d7c:	90 e0       	ldi	r25, 0x00	; 0
    1d7e:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    1d82:	25 98       	cbi	0x04, 5	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    1d84:	f7 01       	movw	r30, r14
    1d86:	80 81       	ld	r24, Z
    1d88:	88 60       	ori	r24, 0x08	; 8
    1d8a:	80 83       	st	Z, r24
		}
		TPB5_set_dir(PORT_DIR_IN);			//reworked to reset big
		TPB5_set_pull_mode(PORT_PULL_UP);	//reworked to reset big
	
		delay_ms(100);
    1d8c:	64 e6       	ldi	r22, 0x64	; 100
    1d8e:	70 e0       	ldi	r23, 0x00	; 0
    1d90:	80 e0       	ldi	r24, 0x00	; 0
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
		battery=getBatt();
    1d98:	0e 94 ad 00 	call	0x15a	; 0x15a <getBatt>
    1d9c:	88 2e       	mov	r8, r24
		if(battery>=SOLAR_BATT_THRESHOLD)goodBattCtr++;else goodBattCtr=0;
    1d9e:	ff eb       	ldi	r31, 0xBF	; 191
    1da0:	f8 17       	cp	r31, r24
    1da2:	10 f4       	brcc	.+4      	; 0x1da8 <main+0x162>
    1da4:	cf 5f       	subi	r28, 0xFF	; 255
    1da6:	01 c0       	rjmp	.+2      	; 0x1daa <main+0x164>
    1da8:	c0 e0       	ldi	r28, 0x00	; 0
		LCDspace();
    1daa:	0e 94 c7 03 	call	0x78e	; 0x78e <LCDspace>
		LCDshort(battery,2);
    1dae:	62 e0       	ldi	r22, 0x02	; 2
    1db0:	88 2d       	mov	r24, r8
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <LCDshort>
		LCDspace();
    1db8:	0e 94 c7 03 	call	0x78e	; 0x78e <LCDspace>
		delay_ms(200);
    1dbc:	68 ec       	ldi	r22, 0xC8	; 200
    1dbe:	70 e0       	ldi	r23, 0x00	; 0
    1dc0:	80 e0       	ldi	r24, 0x00	; 0
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
		sleepPins(0);
    1dc8:	80 e0       	ldi	r24, 0x00	; 0
    1dca:	0e 94 cf 0c 	call	0x199e	; 0x199e <sleepPins>
		//		delay_ms(1050);
		ENABLE_INTERRUPTS();//might not have to do this every time.
    1dce:	78 94       	sei
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1dd0:	f8 01       	movw	r30, r16
    1dd2:	80 81       	ld	r24, Z
    1dd4:	88 7f       	andi	r24, 0xF8	; 248
    1dd6:	85 60       	ori	r24, 0x05	; 5
    1dd8:	80 83       	st	Z, r24
		TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
		SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1dda:	f5 01       	movw	r30, r10
    1ddc:	d0 83       	st	Z, r29
		SLEEP();
    1dde:	88 95       	sleep

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600); /* set baud rate register for LCD*/
#ifdef DO_SOLAR_BATT_CHECK
	char battery;
	goodBattCtr=0;
	while(goodBattCtr<SOLAR_BATT_WAIT){//Wait here, possibly forever, until batt has been above threshhold for a while
    1de0:	c8 3c       	cpi	r28, 0xC8	; 200
    1de2:	08 f4       	brcc	.+2      	; 0x1de6 <main+0x1a0>
    1de4:	ad cf       	rjmp	.-166    	; 0x1d40 <main+0xfa>
		ENABLE_INTERRUPTS();//might not have to do this every time.
		TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
		SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
		SLEEP();
	}
	WDT_RST();
    1de6:	a8 95       	wdr
	delay_ms(1000);
    1de8:	68 ee       	ldi	r22, 0xE8	; 232
    1dea:	73 e0       	ldi	r23, 0x03	; 3
    1dec:	80 e0       	ldi	r24, 0x00	; 0
    1dee:	90 e0       	ldi	r25, 0x00	; 0
    1df0:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
#endif
	usart_put_string("PAST SOLAR\r\n",12);
    1df4:	6c e0       	ldi	r22, 0x0C	; 12
    1df6:	89 ef       	ldi	r24, 0xF9	; 249
    1df8:	92 ea       	ldi	r25, 0xA2	; 162
    1dfa:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>

g_sensitivityHiBit = sensitivtyAll>>8;
    1dfe:	10 92 36 39 	sts	0x3936, r1	; 0x803936 <g_sensitivityHiBit>
g_sensitivityLoByte = (char)(sensitivtyAll&0x00FF);
    1e02:	80 ec       	ldi	r24, 0xC0	; 192
    1e04:	80 93 32 39 	sts	0x3932, r24	; 0x803932 <g_sensitivityLoByte>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1e08:	27 9a       	sbi	0x04, 7	; 4
TPB7_set_dir(PORT_DIR_OUT);
setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1e0a:	21 e3       	ldi	r18, 0x31	; 49
    1e0c:	41 e0       	ldi	r20, 0x01	; 1
    1e0e:	60 91 32 39 	lds	r22, 0x3932	; 0x803932 <g_sensitivityLoByte>
    1e12:	80 91 36 39 	lds	r24, 0x3936	; 0x803936 <g_sensitivityHiBit>
    1e16:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <setPIRconfig>
delay_ms(1000);
    1e1a:	68 ee       	ldi	r22, 0xE8	; 232
    1e1c:	73 e0       	ldi	r23, 0x03	; 3
    1e1e:	80 e0       	ldi	r24, 0x00	; 0
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1e26:	21 e3       	ldi	r18, 0x31	; 49
    1e28:	41 e0       	ldi	r20, 0x01	; 1
    1e2a:	60 91 32 39 	lds	r22, 0x3932	; 0x803932 <g_sensitivityLoByte>
    1e2e:	80 91 36 39 	lds	r24, 0x3936	; 0x803936 <g_sensitivityHiBit>
    1e32:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <setPIRconfig>
char detectedMot=0;

#ifdef NO_GPS
	mState=IDLE;
    1e36:	87 e0       	ldi	r24, 0x07	; 7
    1e38:	80 93 33 39 	sts	0x3933, r24	; 0x803933 <mState>
				else usart_put_string(".",1);
				delay_ms(15);
			#endif
		g_gotMotion=0;
		break;
		default: mState=IDLE;
    1e3c:	0f 2e       	mov	r0, r31
    1e3e:	f7 e0       	ldi	r31, 0x07	; 7
    1e40:	af 2e       	mov	r10, r31
    1e42:	f0 2d       	mov	r31, r0
		case NO_INITIAL_GPS_LONGTERM://6
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_LONGTERM;
		break;
		case IDLE://7
			WDT.CTRLA = 0;//disable watchdog
    1e44:	c1 2c       	mov	r12, r1
    1e46:	dd 24       	eor	r13, r13
    1e48:	d3 94       	inc	r13
			closeGPS();
			if(g_gotMotion)g_motionMinTotal++;
			clearPIRinterrupt();
			if((rcvdCmd&0x10)==0x10){
				rcvdCmd=0;
				mState=GET_GPS;
    1e4a:	68 94       	set
    1e4c:	66 24       	eor	r6, r6
    1e4e:	61 f8       	bld	r6, 1
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_LONGTERM;
		break;
		case NO_INITIAL_GPS_LONGTERM://6
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_LONGTERM;
    1e50:	0f 2e       	mov	r0, r31
    1e52:	f6 e0       	ldi	r31, 0x06	; 6
    1e54:	9f 2e       	mov	r9, r31
    1e56:	f0 2d       	mov	r31, r0
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_B;
		break;
		case NO_INITIAL_GPS_B://4
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_C;
    1e58:	0f 2e       	mov	r0, r31
    1e5a:	f5 e0       	ldi	r31, 0x05	; 5
    1e5c:	7f 2e       	mov	r7, r31
    1e5e:	f0 2d       	mov	r31, r0
				#endif				
				mState=IDLE;
		break;
		case NO_INITIAL_GPS_A://3
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_B;
    1e60:	68 94       	set
    1e62:	88 24       	eor	r8, r8
    1e64:	82 f8       	bld	r8, 2
				mState=INITIAL_GPS;
				redBlinkLong(1);
		break;
		case INITIAL_GPS://
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_A;
    1e66:	0f 2e       	mov	r0, r31
    1e68:	f3 e0       	ldi	r31, 0x03	; 3
    1e6a:	bf 2e       	mov	r11, r31
    1e6c:	f0 2d       	mov	r31, r0
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1e6e:	01 e5       	ldi	r16, 0x51	; 81
    1e70:	14 e0       	ldi	r17, 0x04	; 4
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1e72:	c6 e3       	ldi	r28, 0x36	; 54
    1e74:	d4 e0       	ldi	r29, 0x04	; 4

	sleepPins(1);
	ENABLE_INTERRUPTS();//might not have to do this every time.
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1e76:	0f 2e       	mov	r0, r31
    1e78:	f0 e5       	ldi	r31, 0x50	; 80
    1e7a:	ef 2e       	mov	r14, r31
    1e7c:	f1 2c       	mov	r15, r1
    1e7e:	f0 2d       	mov	r31, r0
#else
	mState=BEGIN;
#endif

for(;;){
	WDT_RST();
    1e80:	a8 95       	wdr
	switch(mState){
    1e82:	e0 91 33 39 	lds	r30, 0x3933	; 0x803933 <mState>
    1e86:	8e 2f       	mov	r24, r30
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	88 30       	cpi	r24, 0x08	; 8
    1e8c:	91 05       	cpc	r25, r1
    1e8e:	08 f0       	brcs	.+2      	; 0x1e92 <main+0x24c>
    1e90:	85 c0       	rjmp	.+266    	; 0x1f9c <main+0x356>
    1e92:	fc 01       	movw	r30, r24
    1e94:	e2 57       	subi	r30, 0x72	; 114
    1e96:	ff 4f       	sbci	r31, 0xFF	; 255
    1e98:	0c 94 05 11 	jmp	0x220a	; 0x220a <__tablejump2__>
		case BEGIN://0
				mState=INITIAL_GPS;
    1e9c:	81 e0       	ldi	r24, 0x01	; 1
    1e9e:	80 93 33 39 	sts	0x3933, r24	; 0x803933 <mState>
				redBlinkLong(1);
    1ea2:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <redBlinkLong>
		break;
    1ea6:	7c c0       	rjmp	.+248    	; 0x1fa0 <main+0x35a>
		case INITIAL_GPS://
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1ea8:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <getGPS>
    1eac:	89 2b       	or	r24, r25
    1eae:	19 f4       	brne	.+6      	; 0x1eb6 <main+0x270>
    1eb0:	a0 92 33 39 	sts	0x3933, r10	; 0x803933 <mState>
    1eb4:	02 c0       	rjmp	.+4      	; 0x1eba <main+0x274>
				else mState=NO_INITIAL_GPS_A;
    1eb6:	b0 92 33 39 	sts	0x3933, r11	; 0x803933 <mState>
				#ifdef DO_DIAGS
					USART_0_initialization();
    1eba:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
					LCDclear();
    1ebe:	0e 94 a4 03 	call	0x748	; 0x748 <LCDclear>
					usart_put_string("Got Initial GPS",15);
    1ec2:	6f e0       	ldi	r22, 0x0F	; 15
    1ec4:	86 e0       	ldi	r24, 0x06	; 6
    1ec6:	93 ea       	ldi	r25, 0xA3	; 163
    1ec8:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
				#endif
		break;
    1ecc:	69 c0       	rjmp	.+210    	; 0x1fa0 <main+0x35a>
		case GET_GPS://2
//				getGPS();
				closeGPS();
    1ece:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <closeGPS>
				#ifdef DO_DIAGS
				    USART_0_initialization();
    1ed2:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
					LCDclear ();
    1ed6:	0e 94 a4 03 	call	0x748	; 0x748 <LCDclear>
					usart_put_string("GotGPS",6);
    1eda:	69 2d       	mov	r22, r9
    1edc:	86 e1       	ldi	r24, 0x16	; 22
    1ede:	93 ea       	ldi	r25, 0xA3	; 163
    1ee0:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
				#endif				
				mState=IDLE;
    1ee4:	a0 92 33 39 	sts	0x3933, r10	; 0x803933 <mState>
		break;
    1ee8:	5b c0       	rjmp	.+182    	; 0x1fa0 <main+0x35a>
		case NO_INITIAL_GPS_A://3
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1eea:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <getGPS>
    1eee:	89 2b       	or	r24, r25
    1ef0:	19 f4       	brne	.+6      	; 0x1ef8 <main+0x2b2>
    1ef2:	a0 92 33 39 	sts	0x3933, r10	; 0x803933 <mState>
    1ef6:	54 c0       	rjmp	.+168    	; 0x1fa0 <main+0x35a>
				else mState=NO_INITIAL_GPS_B;
    1ef8:	80 92 33 39 	sts	0x3933, r8	; 0x803933 <mState>
    1efc:	51 c0       	rjmp	.+162    	; 0x1fa0 <main+0x35a>
		break;
		case NO_INITIAL_GPS_B://4
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1efe:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <getGPS>
    1f02:	89 2b       	or	r24, r25
    1f04:	19 f4       	brne	.+6      	; 0x1f0c <main+0x2c6>
    1f06:	a0 92 33 39 	sts	0x3933, r10	; 0x803933 <mState>
    1f0a:	4a c0       	rjmp	.+148    	; 0x1fa0 <main+0x35a>
				else mState=NO_INITIAL_GPS_C;
    1f0c:	70 92 33 39 	sts	0x3933, r7	; 0x803933 <mState>
    1f10:	47 c0       	rjmp	.+142    	; 0x1fa0 <main+0x35a>
		break;
		case NO_INITIAL_GPS_C://5
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1f12:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <getGPS>
    1f16:	89 2b       	or	r24, r25
    1f18:	19 f4       	brne	.+6      	; 0x1f20 <main+0x2da>
    1f1a:	a0 92 33 39 	sts	0x3933, r10	; 0x803933 <mState>
    1f1e:	40 c0       	rjmp	.+128    	; 0x1fa0 <main+0x35a>
				else mState=NO_INITIAL_GPS_LONGTERM;
    1f20:	90 92 33 39 	sts	0x3933, r9	; 0x803933 <mState>
    1f24:	3d c0       	rjmp	.+122    	; 0x1fa0 <main+0x35a>
		break;
		case NO_INITIAL_GPS_LONGTERM://6
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1f26:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <getGPS>
    1f2a:	89 2b       	or	r24, r25
    1f2c:	19 f4       	brne	.+6      	; 0x1f34 <main+0x2ee>
    1f2e:	a0 92 33 39 	sts	0x3933, r10	; 0x803933 <mState>
    1f32:	36 c0       	rjmp	.+108    	; 0x1fa0 <main+0x35a>
				else mState=NO_INITIAL_GPS_LONGTERM;
    1f34:	90 92 33 39 	sts	0x3933, r9	; 0x803933 <mState>
    1f38:	33 c0       	rjmp	.+102    	; 0x1fa0 <main+0x35a>
		break;
		case IDLE://7
			WDT.CTRLA = 0;//disable watchdog
    1f3a:	f6 01       	movw	r30, r12
    1f3c:	10 82       	st	Z, r1
			closeGPS();
    1f3e:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <closeGPS>
			if(g_gotMotion)g_motionMinTotal++;
    1f42:	80 91 03 38 	lds	r24, 0x3803	; 0x803803 <g_gotMotion>
    1f46:	88 23       	and	r24, r24
    1f48:	29 f0       	breq	.+10     	; 0x1f54 <main+0x30e>
    1f4a:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    1f4e:	8f 5f       	subi	r24, 0xFF	; 255
    1f50:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <_edata>
			clearPIRinterrupt();
    1f54:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <clearPIRinterrupt>
			if((rcvdCmd&0x10)==0x10){
    1f58:	80 91 2d 39 	lds	r24, 0x392D	; 0x80392d <rcvdCmd>
    1f5c:	84 ff       	sbrs	r24, 4
    1f5e:	04 c0       	rjmp	.+8      	; 0x1f68 <main+0x322>
				rcvdCmd=0;
    1f60:	10 92 2d 39 	sts	0x392D, r1	; 0x80392d <rcvdCmd>
				mState=GET_GPS;
    1f64:	60 92 33 39 	sts	0x3933, r6	; 0x803933 <mState>
				}
			#ifdef DO_DIAGS
				USART_0_initialization();
    1f68:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>
				if(g_gotMotion) usart_put_string("X",1);
    1f6c:	80 91 03 38 	lds	r24, 0x3803	; 0x803803 <g_gotMotion>
    1f70:	88 23       	and	r24, r24
    1f72:	31 f0       	breq	.+12     	; 0x1f80 <main+0x33a>
    1f74:	61 e0       	ldi	r22, 0x01	; 1
    1f76:	8d e1       	ldi	r24, 0x1D	; 29
    1f78:	93 ea       	ldi	r25, 0xA3	; 163
    1f7a:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
    1f7e:	05 c0       	rjmp	.+10     	; 0x1f8a <main+0x344>
				else usart_put_string(".",1);
    1f80:	61 e0       	ldi	r22, 0x01	; 1
    1f82:	8f e1       	ldi	r24, 0x1F	; 31
    1f84:	93 ea       	ldi	r25, 0xA3	; 163
    1f86:	0e 94 af 02 	call	0x55e	; 0x55e <usart_put_string>
				delay_ms(15);
    1f8a:	6f e0       	ldi	r22, 0x0F	; 15
    1f8c:	70 e0       	ldi	r23, 0x00	; 0
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	90 e0       	ldi	r25, 0x00	; 0
    1f92:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
			#endif
		g_gotMotion=0;
    1f96:	10 92 03 38 	sts	0x3803, r1	; 0x803803 <g_gotMotion>
		break;
    1f9a:	02 c0       	rjmp	.+4      	; 0x1fa0 <main+0x35a>
		default: mState=IDLE;
    1f9c:	a0 92 33 39 	sts	0x3933, r10	; 0x803933 <mState>
		break;
	}

	sleepPins(1);
    1fa0:	81 e0       	ldi	r24, 0x01	; 1
    1fa2:	0e 94 cf 0c 	call	0x199e	; 0x199e <sleepPins>
	ENABLE_INTERRUPTS();//might not have to do this every time.
    1fa6:	78 94       	sei
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1fa8:	f8 01       	movw	r30, r16
    1faa:	80 81       	ld	r24, Z
    1fac:	88 7f       	andi	r24, 0xF8	; 248
    1fae:	85 60       	ori	r24, 0x05	; 5
    1fb0:	80 83       	st	Z, r24
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1fb2:	88 81       	ld	r24, Y
    1fb4:	88 7f       	andi	r24, 0xF8	; 248
    1fb6:	82 60       	ori	r24, 0x02	; 2
    1fb8:	88 83       	st	Y, r24
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1fba:	f7 01       	movw	r30, r14
    1fbc:	b0 82       	st	Z, r11
	NOP();
    1fbe:	00 00       	nop
	SLEEP();
    1fc0:	88 95       	sleep
}
    1fc2:	5e cf       	rjmp	.-324    	; 0x1e80 <main+0x23a>

00001fc4 <__vector_5>:
***********************************************************************
***********************************************************************/
/***********************************************************************
*  ISR WAKEUP FROM BIG
***********************************************************************/
ISR(PORTC_PORT_vect){
    1fc4:	1f 92       	push	r1
    1fc6:	0f 92       	push	r0
    1fc8:	0f b6       	in	r0, 0x3f	; 63
    1fca:	0f 92       	push	r0
    1fcc:	11 24       	eor	r1, r1
    1fce:	2f 93       	push	r18
    1fd0:	3f 93       	push	r19
    1fd2:	4f 93       	push	r20
    1fd4:	5f 93       	push	r21
    1fd6:	6f 93       	push	r22
    1fd8:	7f 93       	push	r23
    1fda:	8f 93       	push	r24
    1fdc:	9f 93       	push	r25
    1fde:	af 93       	push	r26
    1fe0:	bf 93       	push	r27
    1fe2:	ef 93       	push	r30
    1fe4:	ff 93       	push	r31
	DISABLE_INTERRUPTS();
    1fe6:	f8 94       	cli
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1fe8:	e1 e5       	ldi	r30, 0x51	; 81
    1fea:	f4 e0       	ldi	r31, 0x04	; 4
    1fec:	80 81       	ld	r24, Z
    1fee:	88 7f       	andi	r24, 0xF8	; 248
    1ff0:	80 83       	st	Z, r24
	TPC1_set_isc(PORT_ISC_INTDISABLE_gc);//C1=WAKEUP FROM BIG
	PORTC.INTFLAGS |= (1 << 1);
    1ff2:	e0 e4       	ldi	r30, 0x40	; 64
    1ff4:	f4 e0       	ldi	r31, 0x04	; 4
    1ff6:	81 85       	ldd	r24, Z+9	; 0x09
    1ff8:	82 60       	ori	r24, 0x02	; 2
    1ffa:	81 87       	std	Z+9, r24	; 0x09
	char gotCmd;
	char iters;
	if(mState!=SOLAR_WAIT)gotCmd=getPacketFromBig();
    1ffc:	80 91 33 39 	lds	r24, 0x3933	; 0x803933 <mState>
    2000:	88 30       	cpi	r24, 0x08	; 8
    2002:	11 f0       	breq	.+4      	; 0x2008 <__vector_5+0x44>
    2004:	0e 94 a8 0a 	call	0x1550	; 0x1550 <getPacketFromBig>
	PORTC.INTFLAGS |= (1 << 1);
    2008:	e0 e4       	ldi	r30, 0x40	; 64
    200a:	f4 e0       	ldi	r31, 0x04	; 4
    200c:	81 85       	ldd	r24, Z+9	; 0x09
    200e:	82 60       	ori	r24, 0x02	; 2
    2010:	81 87       	std	Z+9, r24	; 0x09
	if(mState==IDLE){
    2012:	80 91 33 39 	lds	r24, 0x3933	; 0x803933 <mState>
    2016:	87 30       	cpi	r24, 0x07	; 7
    2018:	31 f4       	brne	.+12     	; 0x2026 <__vector_5+0x62>
		sleepPins(1);//
    201a:	81 e0       	ldi	r24, 0x01	; 1
    201c:	0e 94 cf 0c 	call	0x199e	; 0x199e <sleepPins>
		sleepPins(1);//
    2020:	81 e0       	ldi	r24, 0x01	; 1
    2022:	0e 94 cf 0c 	call	0x199e	; 0x199e <sleepPins>
    2026:	e1 e5       	ldi	r30, 0x51	; 81
    2028:	f4 e0       	ldi	r31, 0x04	; 4
    202a:	80 81       	ld	r24, Z
    202c:	88 7f       	andi	r24, 0xF8	; 248
    202e:	85 60       	ori	r24, 0x05	; 5
    2030:	80 83       	st	Z, r24
	}
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	ENABLE_INTERRUPTS();
    2032:	78 94       	sei
}
    2034:	ff 91       	pop	r31
    2036:	ef 91       	pop	r30
    2038:	bf 91       	pop	r27
    203a:	af 91       	pop	r26
    203c:	9f 91       	pop	r25
    203e:	8f 91       	pop	r24
    2040:	7f 91       	pop	r23
    2042:	6f 91       	pop	r22
    2044:	5f 91       	pop	r21
    2046:	4f 91       	pop	r20
    2048:	3f 91       	pop	r19
    204a:	2f 91       	pop	r18
    204c:	0f 90       	pop	r0
    204e:	0f be       	out	0x3f, r0	; 63
    2050:	0f 90       	pop	r0
    2052:	1f 90       	pop	r1
    2054:	18 95       	reti

00002056 <__vector_27>:
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
    2056:	1f 92       	push	r1
    2058:	0f 92       	push	r0
    205a:	0f b6       	in	r0, 0x3f	; 63
    205c:	0f 92       	push	r0
    205e:	11 24       	eor	r1, r1
    2060:	8f 93       	push	r24
    2062:	9f 93       	push	r25
    2064:	ef 93       	push	r30
    2066:	ff 93       	push	r31
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
    2068:	e0 91 34 39 	lds	r30, 0x3934	; 0x803934 <p_GPSrcvData>
    206c:	f0 91 35 39 	lds	r31, 0x3935	; 0x803935 <p_GPSrcvData+0x1>
    2070:	88 e3       	ldi	r24, 0x38	; 56
    2072:	ea 3b       	cpi	r30, 0xBA	; 186
    2074:	f8 07       	cpc	r31, r24
    2076:	d8 f0       	brcs	.+54     	; 0x20ae <__vector_27+0x58>
    2078:	89 eb       	ldi	r24, 0xB9	; 185
    207a:	98 e3       	ldi	r25, 0x38	; 56
    207c:	80 93 34 39 	sts	0x3934, r24	; 0x803934 <p_GPSrcvData>
    2080:	90 93 35 39 	sts	0x3935, r25	; 0x803935 <p_GPSrcvData+0x1>
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    2084:	fc 01       	movw	r30, r24
		*p_GPSrcvData=USART0.RXDATAL;
    2086:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    208a:	80 83       	st	Z, r24
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
    208c:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    2090:	8a 30       	cpi	r24, 0x0A	; 10
    2092:	19 f4       	brne	.+6      	; 0x209a <__vector_27+0x44>
    2094:	81 e0       	ldi	r24, 0x01	; 1
    2096:	80 93 2c 39 	sts	0x392C, r24	; 0x80392c <endOfLineFlag>
	p_GPSrcvData++;
    209a:	80 91 34 39 	lds	r24, 0x3934	; 0x803934 <p_GPSrcvData>
    209e:	90 91 35 39 	lds	r25, 0x3935	; 0x803935 <p_GPSrcvData+0x1>
    20a2:	01 96       	adiw	r24, 0x01	; 1
    20a4:	80 93 34 39 	sts	0x3934, r24	; 0x803934 <p_GPSrcvData>
    20a8:	90 93 35 39 	sts	0x3935, r25	; 0x803935 <p_GPSrcvData+0x1>
}
    20ac:	05 c0       	rjmp	.+10     	; 0x20b8 <__vector_27+0x62>
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    20ae:	88 e3       	ldi	r24, 0x38	; 56
    20b0:	e4 30       	cpi	r30, 0x04	; 4
    20b2:	f8 07       	cpc	r31, r24
    20b4:	58 f3       	brcs	.-42     	; 0x208c <__vector_27+0x36>
    20b6:	e7 cf       	rjmp	.-50     	; 0x2086 <__vector_27+0x30>
		*p_GPSrcvData=USART0.RXDATAL;
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
	p_GPSrcvData++;
}
    20b8:	ff 91       	pop	r31
    20ba:	ef 91       	pop	r30
    20bc:	9f 91       	pop	r25
    20be:	8f 91       	pop	r24
    20c0:	0f 90       	pop	r0
    20c2:	0f be       	out	0x3f, r0	; 63
    20c4:	0f 90       	pop	r0
    20c6:	1f 90       	pop	r1
    20c8:	18 95       	reti

000020ca <__vector_4>:
/***********************************************************************
*  ISR MOTION
***********************************************************************/
ISR(PORTB_PORT_vect){
    20ca:	1f 92       	push	r1
    20cc:	0f 92       	push	r0
    20ce:	0f b6       	in	r0, 0x3f	; 63
    20d0:	0f 92       	push	r0
    20d2:	11 24       	eor	r1, r1
    20d4:	8f 93       	push	r24
    20d6:	ef 93       	push	r30
    20d8:	ff 93       	push	r31
	// B6 is Motion
	g_gotMotion=1;
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <g_gotMotion>
	PORTB.INTFLAGS |= (1 << 6);
    20e0:	e0 e2       	ldi	r30, 0x20	; 32
    20e2:	f4 e0       	ldi	r31, 0x04	; 4
    20e4:	81 85       	ldd	r24, Z+9	; 0x09
    20e6:	80 64       	ori	r24, 0x40	; 64
    20e8:	81 87       	std	Z+9, r24	; 0x09
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    20ea:	e6 e3       	ldi	r30, 0x36	; 54
    20ec:	f4 e0       	ldi	r31, 0x04	; 4
    20ee:	80 81       	ld	r24, Z
    20f0:	88 7f       	andi	r24, 0xF8	; 248
    20f2:	80 83       	st	Z, r24
	TPB6_set_isc(PORT_ISC_INTDISABLE_gc);
}
    20f4:	ff 91       	pop	r31
    20f6:	ef 91       	pop	r30
    20f8:	8f 91       	pop	r24
    20fa:	0f 90       	pop	r0
    20fc:	0f be       	out	0x3f, r0	; 63
    20fe:	0f 90       	pop	r0
    2100:	1f 90       	pop	r1
    2102:	18 95       	reti

00002104 <__vector_6>:
/***********************************************************************
*  ISR RTC 
***********************************************************************/
ISR(RTC_CNT_vect)
{
    2104:	1f 92       	push	r1
    2106:	0f 92       	push	r0
    2108:	0f b6       	in	r0, 0x3f	; 63
    210a:	0f 92       	push	r0
    210c:	11 24       	eor	r1, r1
    210e:	8f 93       	push	r24
    2110:	ef 93       	push	r30
    2112:	ff 93       	push	r31
	/* Overflow interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_OVF_bm;
    2114:	81 e0       	ldi	r24, 0x01	; 1
    2116:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x700143>
    211a:	e6 e3       	ldi	r30, 0x36	; 54
    211c:	f4 e0       	ldi	r31, 0x04	; 4
    211e:	80 81       	ld	r24, Z
    2120:	88 7f       	andi	r24, 0xF8	; 248
    2122:	82 60       	ori	r24, 0x02	; 2
    2124:	80 83       	st	Z, r24
	TPB6_set_isc(PORT_ISC_RISING_gc);
}
    2126:	ff 91       	pop	r31
    2128:	ef 91       	pop	r30
    212a:	8f 91       	pop	r24
    212c:	0f 90       	pop	r0
    212e:	0f be       	out	0x3f, r0	; 63
    2130:	0f 90       	pop	r0
    2132:	1f 90       	pop	r1
    2134:	18 95       	reti

00002136 <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    2136:	80 e0       	ldi	r24, 0x00	; 0
    2138:	08 95       	ret

0000213a <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    213a:	42 e0       	ldi	r20, 0x02	; 2
    213c:	68 ed       	ldi	r22, 0xD8	; 216
    213e:	88 e7       	ldi	r24, 0x78	; 120
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	0e 94 e0 10 	call	0x21c0	; 0x21c0 <protected_write_io>
    2146:	40 e0       	ldi	r20, 0x00	; 0
    2148:	68 ed       	ldi	r22, 0xD8	; 216
    214a:	80 e7       	ldi	r24, 0x70	; 112
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	0e 94 e0 10 	call	0x21c0	; 0x21c0 <protected_write_io>
    2152:	40 e0       	ldi	r20, 0x00	; 0
    2154:	68 ed       	ldi	r22, 0xD8	; 216
    2156:	80 e6       	ldi	r24, 0x60	; 96
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	0e 94 e0 10 	call	0x21c0	; 0x21c0 <protected_write_io>
	 //ccp_write_io((void*)&(CLKCTRL.OSC20MCTRLA),1 << CLKCTRL_RUNSTDBY_bp /* Run standby: ENabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    215e:	80 e0       	ldi	r24, 0x00	; 0
    2160:	08 95       	ret

00002162 <CPUINT_init>:
	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

//	ENABLE_INTERRUPTS();

	return 0;
}
    2162:	80 e0       	ldi	r24, 0x00	; 0
    2164:	08 95       	ret

00002166 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    2166:	e0 e1       	ldi	r30, 0x10	; 16
    2168:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    216a:	80 81       	ld	r24, Z
    216c:	88 60       	ori	r24, 0x08	; 8
    216e:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    2170:	e8 31       	cpi	r30, 0x18	; 24
    2172:	84 e0       	ldi	r24, 0x04	; 4
    2174:	f8 07       	cpc	r31, r24
    2176:	c9 f7       	brne	.-14     	; 0x216a <mcu_init+0x4>
    2178:	e0 e3       	ldi	r30, 0x30	; 48
    217a:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    217c:	80 81       	ld	r24, Z
    217e:	88 60       	ori	r24, 0x08	; 8
    2180:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    2182:	e8 33       	cpi	r30, 0x38	; 56
    2184:	84 e0       	ldi	r24, 0x04	; 4
    2186:	f8 07       	cpc	r31, r24
    2188:	c9 f7       	brne	.-14     	; 0x217c <mcu_init+0x16>
	}

//	for (uint8_t i = 0; i < 8; i++) {
//		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
//	}
}
    218a:	08 95       	ret

0000218c <USART_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    218c:	23 98       	cbi	0x04, 3	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    218e:	e3 e3       	ldi	r30, 0x33	; 51
    2190:	f4 e0       	ldi	r31, 0x04	; 4
    2192:	80 81       	ld	r24, Z
    2194:	87 7f       	andi	r24, 0xF7	; 247
    2196:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    2198:	22 9a       	sbi	0x04, 2	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    219a:	2a 98       	cbi	0x05, 2	; 5
	// <id> pad_initial_level
	// <false"> Low
	// <true"> High
	0);

	USART_0_init();
    219c:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <USART_0_init>
    21a0:	08 95       	ret

000021a2 <system_init>:
}
void system_init()
{
	mcu_init();
    21a2:	0e 94 b3 10 	call	0x2166	; 0x2166 <mcu_init>

	/* PORT setting on PB4 */

	CLKCTRL_init();
    21a6:	0e 94 9d 10 	call	0x213a	; 0x213a <CLKCTRL_init>

	RTC_0_init();
    21aa:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <RTC_0_init>

//	ADC_0_initialization();

	USART_0_initialization();
    21ae:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_0_initialization>

	CPUINT_init();
    21b2:	0e 94 b1 10 	call	0x2162	; 0x2162 <CPUINT_init>

	SLPCTRL_init();
    21b6:	0e 94 f7 10 	call	0x21ee	; 0x21ee <SLPCTRL_init>

	BOD_init();
    21ba:	0e 94 9b 10 	call	0x2136	; 0x2136 <BOD_init>
    21be:	08 95       	ret

000021c0 <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
    21c0:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    21c2:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    21c4:	40 83       	st	Z, r20
	ret                             // Return to caller
    21c6:	08 95       	ret

000021c8 <RTC_0_init>:
 * \brief Initialize RTC interface
 */
int8_t RTC_0_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
    21c8:	e0 e4       	ldi	r30, 0x40	; 64
    21ca:	f1 e0       	ldi	r31, 0x01	; 1
    21cc:	81 81       	ldd	r24, Z+1	; 0x01
    21ce:	81 11       	cpse	r24, r1
    21d0:	fd cf       	rjmp	.-6      	; 0x21cc <RTC_0_init+0x4>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV32_gc  /* 32 */
    21d2:	e0 e4       	ldi	r30, 0x40	; 64
    21d4:	f1 e0       	ldi	r31, 0x01	; 1
    21d6:	89 ea       	ldi	r24, 0xA9	; 169
    21d8:	80 83       	st	Z, r24
	            | 1 << RTC_RTCEN_bp     /* Enable: enabled */
	            | 1 << RTC_RUNSTDBY_bp; /* Run In Standby: disabled */

	RTC.PER = 0x3e8; /* Period: 0x1f4 */
    21da:	88 ee       	ldi	r24, 0xE8	; 232
    21dc:	93 e0       	ldi	r25, 0x03	; 3
    21de:	82 87       	std	Z+10, r24	; 0x0a
    21e0:	93 87       	std	Z+11, r25	; 0x0b

	// RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 0 << RTC_CMP_bp    /* Compare Match Interrupt enable: disabled */
    21e2:	81 e0       	ldi	r24, 0x01	; 1
    21e4:	82 83       	std	Z+2, r24	; 0x02
	              | 1 << RTC_OVF_bp; /* Overflow Interrupt enable: enabled */

	RTC.PITCTRLA = RTC_PERIOD_OFF_gc /* Off */
    21e6:	10 8a       	std	Z+16, r1	; 0x10
			 | 0 << RTC_PITEN_bp; /* Enable: disabled */

	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */
    21e8:	12 8a       	std	Z+18, r1	; 0x12

	return 0;
}
    21ea:	80 e0       	ldi	r24, 0x00	; 0
    21ec:	08 95       	ret

000021ee <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    21ee:	80 e0       	ldi	r24, 0x00	; 0
    21f0:	08 95       	ret

000021f2 <USART_0_init>:
 * \brief Initialize usart interface
 */
int8_t USART_0_init()
{

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600); /* set baud rate register */
    21f2:	e0 e0       	ldi	r30, 0x00	; 0
    21f4:	f8 e0       	ldi	r31, 0x08	; 8
    21f6:	8c e6       	ldi	r24, 0x6C	; 108
    21f8:	95 e0       	ldi	r25, 0x05	; 5
    21fa:	80 87       	std	Z+8, r24	; 0x08
    21fc:	91 87       	std	Z+9, r25	; 0x09

	 USART0.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    21fe:	80 e8       	ldi	r24, 0x80	; 128
    2200:	85 83       	std	Z+5, r24	; 0x05
			 | USART_RS485_OFF_gc /* RS485 Mode disabled */
			 | 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: enabled */
			 | 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			 | 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */
		
	USART0.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    2202:	80 ec       	ldi	r24, 0xC0	; 192
    2204:	86 83       	std	Z+6, r24	; 0x06
	// USART0.RXPLCTRL = 0x0 << USART_RXPL_gp; /* Receiver Pulse Lenght: 0x0 */

	// USART0.TXPLCTRL = 0x0 << USART_TXPL_gp; /* Transmit pulse length: 0x0 */

	return 0;
}
    2206:	80 e0       	ldi	r24, 0x00	; 0
    2208:	08 95       	ret

0000220a <__tablejump2__>:
    220a:	ee 0f       	add	r30, r30
    220c:	ff 1f       	adc	r31, r31
    220e:	05 90       	lpm	r0, Z+
    2210:	f4 91       	lpm	r31, Z
    2212:	e0 2d       	mov	r30, r0
    2214:	09 94       	ijmp

00002216 <ccp_write_io>:
    2216:	dc 01       	movw	r26, r24
    2218:	28 ed       	ldi	r18, 0xD8	; 216
    221a:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x700034>
    221e:	6c 93       	st	X, r22
    2220:	08 95       	ret

00002222 <_exit>:
    2222:	f8 94       	cli

00002224 <__stop_program>:
    2224:	ff cf       	rjmp	.-2      	; 0x2224 <__stop_program>
