
ADSCAM_TINY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  00002407  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002276  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000fd  0000a276  00002276  0000230a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000155  00803800  00803800  00002407  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00002407  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002438  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000320  00000000  00000000  00002478  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00008991  00000000  00000000  00002798  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002294  00000000  00000000  0000b129  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00003219  00000000  00000000  0000d3bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000007d4  00000000  00000000  000105d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002385  00000000  00000000  00010dac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00004498  00000000  00000000  00013131  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002e0  00000000  00000000  000175c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 96 00 	jmp	0x12c	; 0x12c <__ctors_end>
       4:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       8:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      10:	0c 94 de 0f 	jmp	0x1fbc	; 0x1fbc <__vector_4>
      14:	0c 94 5b 0f 	jmp	0x1eb6	; 0x1eb6 <__vector_5>
      18:	0c 94 fb 0f 	jmp	0x1ff6	; 0x1ff6 <__vector_6>
      1c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      20:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      24:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      28:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      2c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      30:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      34:	0c 94 49 0f 	jmp	0x1e92	; 0x1e92 <__vector_13>
      38:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      3c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      40:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      44:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      48:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      4c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      50:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      54:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      58:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      5c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      60:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      64:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      68:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      6c:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__vector_27>
      70:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      74:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      78:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      7c:	97 01       	movw	r18, r14
      7e:	9a 01       	movw	r18, r20
      80:	9d 01       	movw	r18, r26
      82:	a0 01       	movw	r20, r0
      84:	a3 01       	movw	r20, r6
      86:	a6 01       	movw	r20, r12
      88:	a9 01       	movw	r20, r18
      8a:	ac 01       	movw	r20, r24
      8c:	af 01       	movw	r20, r30
      8e:	d5 01       	movw	r26, r10
      90:	be 01       	movw	r22, r28
      92:	c0 01       	movw	r24, r0
      94:	c2 01       	movw	r24, r4
      96:	c4 01       	movw	r24, r8
      98:	c6 01       	movw	r24, r12
      9a:	c8 01       	movw	r24, r16
      9c:	ca 01       	movw	r24, r20
      9e:	cd 01       	movw	r24, r26
      a0:	d0 01       	movw	r26, r0
      a2:	e2 01       	movw	r28, r4
      a4:	e5 01       	movw	r28, r10
      a6:	e8 01       	movw	r28, r16
      a8:	eb 01       	movw	r28, r22
      aa:	ee 01       	movw	r28, r28
      ac:	f1 01       	movw	r30, r2
      ae:	f4 01       	movw	r30, r8
      b0:	f7 01       	movw	r30, r14
      b2:	fa 01       	movw	r30, r20
      b4:	0f 02       	muls	r16, r31
      b6:	0f 02       	muls	r16, r31
      b8:	0f 02       	muls	r16, r31
      ba:	0f 02       	muls	r16, r31
      bc:	0f 02       	muls	r16, r31
      be:	0f 02       	muls	r16, r31
      c0:	0f 02       	muls	r16, r31
      c2:	fd 01       	movw	r30, r26
      c4:	00 02       	muls	r16, r16
      c6:	03 02       	muls	r16, r19
      c8:	06 02       	muls	r16, r22
      ca:	09 02       	muls	r16, r25
      cc:	0c 02       	muls	r16, r28
      ce:	47 02       	muls	r20, r23
      d0:	1b 02       	muls	r17, r27
      d2:	1d 02       	muls	r17, r29
      d4:	1f 02       	muls	r17, r31
      d6:	21 02       	muls	r18, r17
      d8:	24 02       	muls	r18, r20
      da:	27 02       	muls	r18, r23
      dc:	2a 02       	muls	r18, r26
      de:	2d 02       	muls	r18, r29
      e0:	30 02       	muls	r19, r16
      e2:	42 02       	muls	r20, r18
      e4:	42 02       	muls	r20, r18
      e6:	42 02       	muls	r20, r18
      e8:	42 02       	muls	r20, r18
      ea:	42 02       	muls	r20, r18
      ec:	42 02       	muls	r20, r18
      ee:	42 02       	muls	r20, r18
      f0:	45 02       	muls	r20, r21
      f2:	33 02       	muls	r19, r19
      f4:	36 02       	muls	r19, r22
      f6:	39 02       	muls	r19, r25
      f8:	3c 02       	muls	r19, r28
      fa:	3f 02       	muls	r19, r31
      fc:	68 03       	fmul	r22, r16
      fe:	6a 03       	fmul	r22, r18
     100:	6c 03       	fmul	r22, r20
     102:	6e 03       	fmul	r22, r22
     104:	70 03       	mulsu	r23, r16
     106:	72 03       	mulsu	r23, r18
     108:	74 03       	mulsu	r23, r20
     10a:	76 03       	mulsu	r23, r22
     10c:	78 03       	fmul	r23, r16
     10e:	7a 03       	fmul	r23, r18
     110:	7c 03       	fmul	r23, r20
     112:	7e 03       	fmul	r23, r22
     114:	80 03       	fmuls	r16, r16
     116:	82 03       	fmuls	r16, r18
     118:	84 03       	fmuls	r16, r20
     11a:	86 03       	fmuls	r16, r22
     11c:	dc 0e       	add	r13, r28
     11e:	e2 0e       	add	r14, r18
     120:	f5 0e       	add	r15, r21
     122:	03 0f       	add	r16, r19
     124:	0d 0f       	add	r16, r29
     126:	17 0f       	add	r17, r23
     128:	21 0f       	add	r18, r17
     12a:	2b 0f       	add	r18, r27

0000012c <__ctors_end>:
     12c:	11 24       	eor	r1, r1
     12e:	1f be       	out	0x3f, r1	; 63
     130:	cf ef       	ldi	r28, 0xFF	; 255
     132:	cd bf       	out	0x3d, r28	; 61
     134:	df e3       	ldi	r29, 0x3F	; 63
     136:	de bf       	out	0x3e, r29	; 62

00000138 <__do_clear_bss>:
     138:	29 e3       	ldi	r18, 0x39	; 57
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	b8 e3       	ldi	r27, 0x38	; 56
     13e:	01 c0       	rjmp	.+2      	; 0x142 <.do_clear_bss_start>

00000140 <.do_clear_bss_loop>:
     140:	1d 92       	st	X+, r1

00000142 <.do_clear_bss_start>:
     142:	a5 35       	cpi	r26, 0x55	; 85
     144:	b2 07       	cpc	r27, r18
     146:	e1 f7       	brne	.-8      	; 0x140 <.do_clear_bss_loop>
     148:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <main>
     14c:	0c 94 39 11 	jmp	0x2272	; 0x2272 <_exit>

00000150 <__bad_interrupt>:
     150:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000154 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
**/
void atmel_start_init(void)
{
	system_init();
     154:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <system_init>
     158:	08 95       	ret

0000015a <getBatt>:
	for(iters=7;iters>0;iters--){
		if(getPIRbit()==1)ret+=(1<<iters);
	}
	if(getPIRbit()==1)ret+=1;
	return ret;
}
     15a:	06 98       	cbi	0x00, 6	; 0
     15c:	e6 e1       	ldi	r30, 0x16	; 22
     15e:	f4 e0       	ldi	r31, 0x04	; 4
     160:	80 81       	ld	r24, Z
     162:	87 7f       	andi	r24, 0xF7	; 247
     164:	80 83       	st	Z, r24
     166:	80 e2       	ldi	r24, 0x20	; 32
     168:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     16c:	82 e0       	ldi	r24, 0x02	; 2
     16e:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     172:	e0 e0       	ldi	r30, 0x00	; 0
     174:	f6 e0       	ldi	r31, 0x06	; 6
     176:	80 81       	ld	r24, Z
     178:	84 60       	ori	r24, 0x04	; 4
     17a:	80 83       	st	Z, r24
     17c:	a1 e0       	ldi	r26, 0x01	; 1
     17e:	b6 e0       	ldi	r27, 0x06	; 6
     180:	8c 91       	ld	r24, X
     182:	86 60       	ori	r24, 0x06	; 6
     184:	8c 93       	st	X, r24
     186:	87 e2       	ldi	r24, 0x27	; 39
     188:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
     18c:	88 ed       	ldi	r24, 0xD8	; 216
     18e:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
     192:	10 92 04 06 	sts	0x0604, r1	; 0x800604 <__TEXT_REGION_LENGTH__+0x700604>
     196:	10 92 09 06 	sts	0x0609, r1	; 0x800609 <__TEXT_REGION_LENGTH__+0x700609>
     19a:	10 92 0a 06 	sts	0x060A, r1	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
     19e:	86 e0       	ldi	r24, 0x06	; 6
     1a0:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
     1a4:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     1a8:	ab e0       	ldi	r26, 0x0B	; 11
     1aa:	b6 e0       	ldi	r27, 0x06	; 6
     1ac:	8c 91       	ld	r24, X
     1ae:	81 60       	ori	r24, 0x01	; 1
     1b0:	8c 93       	st	X, r24
     1b2:	80 81       	ld	r24, Z
     1b4:	81 60       	ori	r24, 0x01	; 1
     1b6:	80 83       	st	Z, r24
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     1be:	eb e0       	ldi	r30, 0x0B	; 11
     1c0:	f6 e0       	ldi	r31, 0x06	; 6
     1c2:	80 81       	ld	r24, Z
     1c4:	80 ff       	sbrs	r24, 0
     1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <getBatt+0x68>
     1c8:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     1cc:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     1d6:	eb e0       	ldi	r30, 0x0B	; 11
     1d8:	f6 e0       	ldi	r31, 0x06	; 6
     1da:	80 81       	ld	r24, Z
     1dc:	80 ff       	sbrs	r24, 0
     1de:	fd cf       	rjmp	.-6      	; 0x1da <getBatt+0x80>
     1e0:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     1e4:	20 91 10 06 	lds	r18, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	98 2f       	mov	r25, r24
     1ec:	88 27       	eor	r24, r24
     1ee:	82 0f       	add	r24, r18
     1f0:	91 1d       	adc	r25, r1
     1f2:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     1f6:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
     1fa:	08 2e       	mov	r0, r24
     1fc:	89 2f       	mov	r24, r25
     1fe:	00 0c       	add	r0, r0
     200:	88 1f       	adc	r24, r24
     202:	99 0b       	sbc	r25, r25
     204:	00 0c       	add	r0, r0
     206:	88 1f       	adc	r24, r24
     208:	99 1f       	adc	r25, r25
     20a:	08 95       	ret

0000020c <getLight>:
     20c:	06 98       	cbi	0x00, 6	; 0
     20e:	e6 e1       	ldi	r30, 0x16	; 22
     210:	f4 e0       	ldi	r31, 0x04	; 4
     212:	80 81       	ld	r24, Z
     214:	87 7f       	andi	r24, 0xF7	; 247
     216:	80 83       	st	Z, r24
     218:	05 9a       	sbi	0x00, 5	; 0
     21a:	0d 9a       	sbi	0x01, 5	; 1
     21c:	00 00       	nop
     21e:	80 e3       	ldi	r24, 0x30	; 48
     220:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     224:	82 e0       	ldi	r24, 0x02	; 2
     226:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     22a:	e0 e0       	ldi	r30, 0x00	; 0
     22c:	f6 e0       	ldi	r31, 0x06	; 6
     22e:	80 81       	ld	r24, Z
     230:	85 60       	ori	r24, 0x05	; 5
     232:	80 83       	st	Z, r24
     234:	a1 e0       	ldi	r26, 0x01	; 1
     236:	b6 e0       	ldi	r27, 0x06	; 6
     238:	8c 91       	ld	r24, X
     23a:	86 60       	ori	r24, 0x06	; 6
     23c:	8c 93       	st	X, r24
     23e:	87 e2       	ldi	r24, 0x27	; 39
     240:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
     244:	88 ed       	ldi	r24, 0xD8	; 216
     246:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
     24a:	10 92 04 06 	sts	0x0604, r1	; 0x800604 <__TEXT_REGION_LENGTH__+0x700604>
     24e:	10 92 09 06 	sts	0x0609, r1	; 0x800609 <__TEXT_REGION_LENGTH__+0x700609>
     252:	10 92 0a 06 	sts	0x060A, r1	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
     256:	86 e0       	ldi	r24, 0x06	; 6
     258:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
     25c:	87 e0       	ldi	r24, 0x07	; 7
     25e:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     262:	ab e0       	ldi	r26, 0x0B	; 11
     264:	b6 e0       	ldi	r27, 0x06	; 6
     266:	8c 91       	ld	r24, X
     268:	81 60       	ori	r24, 0x01	; 1
     26a:	8c 93       	st	X, r24
     26c:	80 81       	ld	r24, Z
     26e:	85 60       	ori	r24, 0x05	; 5
     270:	80 83       	st	Z, r24
     272:	81 e0       	ldi	r24, 0x01	; 1
     274:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     278:	eb e0       	ldi	r30, 0x0B	; 11
     27a:	f6 e0       	ldi	r31, 0x06	; 6
     27c:	80 81       	ld	r24, Z
     27e:	80 ff       	sbrs	r24, 0
     280:	fd cf       	rjmp	.-6      	; 0x27c <getLight+0x70>
     282:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     286:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     290:	eb e0       	ldi	r30, 0x0B	; 11
     292:	f6 e0       	ldi	r31, 0x06	; 6
     294:	80 81       	ld	r24, Z
     296:	80 ff       	sbrs	r24, 0
     298:	fd cf       	rjmp	.-6      	; 0x294 <getLight+0x88>
     29a:	80 91 11 06 	lds	r24, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     29e:	20 91 10 06 	lds	r18, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	98 2f       	mov	r25, r24
     2a6:	88 27       	eor	r24, r24
     2a8:	82 0f       	add	r24, r18
     2aa:	91 1d       	adc	r25, r1
     2ac:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     2b0:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
     2b4:	08 2e       	mov	r0, r24
     2b6:	89 2f       	mov	r24, r25
     2b8:	00 0c       	add	r0, r0
     2ba:	88 1f       	adc	r24, r24
     2bc:	99 0b       	sbc	r25, r25
     2be:	00 0c       	add	r0, r0
     2c0:	88 1f       	adc	r24, r24
     2c2:	99 1f       	adc	r25, r25
     2c4:	08 95       	ret

000002c6 <searchRcvBuffuBlox>:
     2c6:	2e e1       	ldi	r18, 0x1E	; 30
     2c8:	38 e3       	ldi	r19, 0x38	; 56
     2ca:	20 93 53 39 	sts	0x3953, r18	; 0x803953 <GPSSearchPtr>
     2ce:	30 93 54 39 	sts	0x3954, r19	; 0x803954 <GPSSearchPtr+0x1>
     2d2:	a0 91 4f 39 	lds	r26, 0x394F	; 0x80394f <p_GPSrcvData>
     2d6:	b0 91 50 39 	lds	r27, 0x3950	; 0x803950 <p_GPSrcvData+0x1>
     2da:	15 97       	sbiw	r26, 0x05	; 5
     2dc:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     2e0:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     2e4:	9f 01       	movw	r18, r30
     2e6:	2f 5f       	subi	r18, 0xFF	; 255
     2e8:	3f 4f       	sbci	r19, 0xFF	; 255
     2ea:	20 93 53 39 	sts	0x3953, r18	; 0x803953 <GPSSearchPtr>
     2ee:	30 93 54 39 	sts	0x3954, r19	; 0x803954 <GPSSearchPtr+0x1>
     2f2:	91 81       	ldd	r25, Z+1	; 0x01
     2f4:	98 13       	cpse	r25, r24
     2f6:	06 c0       	rjmp	.+12     	; 0x304 <searchRcvBuffuBlox+0x3e>
     2f8:	92 81       	ldd	r25, Z+2	; 0x02
     2fa:	96 13       	cpse	r25, r22
     2fc:	03 c0       	rjmp	.+6      	; 0x304 <searchRcvBuffuBlox+0x3e>
     2fe:	93 81       	ldd	r25, Z+3	; 0x03
     300:	94 17       	cp	r25, r20
     302:	31 f0       	breq	.+12     	; 0x310 <searchRcvBuffuBlox+0x4a>
     304:	2a 17       	cp	r18, r26
     306:	3b 07       	cpc	r19, r27
     308:	48 f3       	brcs	.-46     	; 0x2dc <searchRcvBuffuBlox+0x16>
     30a:	8a e9       	ldi	r24, 0x9A	; 154
     30c:	92 e0       	ldi	r25, 0x02	; 2
     30e:	08 95       	ret
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	08 95       	ret

00000316 <asciiToHex>:
     316:	48 2f       	mov	r20, r24
     318:	86 2f       	mov	r24, r22
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	fc 01       	movw	r30, r24
     31e:	f1 97       	sbiw	r30, 0x31	; 49
     320:	e9 30       	cpi	r30, 0x09	; 9
     322:	f1 05       	cpc	r31, r1
     324:	f8 f4       	brcc	.+62     	; 0x364 <asciiToHex+0x4e>
     326:	e2 5c       	subi	r30, 0xC2	; 194
     328:	ff 4f       	sbci	r31, 0xFF	; 255
     32a:	0c 94 2d 11 	jmp	0x225a	; 0x225a <__tablejump2__>
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	1a c0       	rjmp	.+52     	; 0x368 <asciiToHex+0x52>
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	17 c0       	rjmp	.+46     	; 0x368 <asciiToHex+0x52>
     33a:	83 e0       	ldi	r24, 0x03	; 3
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	14 c0       	rjmp	.+40     	; 0x368 <asciiToHex+0x52>
     340:	84 e0       	ldi	r24, 0x04	; 4
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	11 c0       	rjmp	.+34     	; 0x368 <asciiToHex+0x52>
     346:	85 e0       	ldi	r24, 0x05	; 5
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	0e c0       	rjmp	.+28     	; 0x368 <asciiToHex+0x52>
     34c:	86 e0       	ldi	r24, 0x06	; 6
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0b c0       	rjmp	.+22     	; 0x368 <asciiToHex+0x52>
     352:	87 e0       	ldi	r24, 0x07	; 7
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	08 c0       	rjmp	.+16     	; 0x368 <asciiToHex+0x52>
     358:	88 e0       	ldi	r24, 0x08	; 8
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	05 c0       	rjmp	.+10     	; 0x368 <asciiToHex+0x52>
     35e:	89 e0       	ldi	r24, 0x09	; 9
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	02 c0       	rjmp	.+4      	; 0x368 <asciiToHex+0x52>
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	50 e0       	ldi	r21, 0x00	; 0
     36a:	fa 01       	movw	r30, r20
     36c:	f0 97       	sbiw	r30, 0x30	; 48
     36e:	ea 30       	cpi	r30, 0x0A	; 10
     370:	f1 05       	cpc	r31, r1
     372:	c8 f4       	brcc	.+50     	; 0x3a6 <asciiToHex+0x90>
     374:	e9 5b       	subi	r30, 0xB9	; 185
     376:	ff 4f       	sbci	r31, 0xFF	; 255
     378:	0c 94 2d 11 	jmp	0x225a	; 0x225a <__tablejump2__>
     37c:	0a 96       	adiw	r24, 0x0a	; 10
     37e:	08 95       	ret
     380:	44 96       	adiw	r24, 0x14	; 20
     382:	08 95       	ret
     384:	4e 96       	adiw	r24, 0x1e	; 30
     386:	08 95       	ret
     388:	88 96       	adiw	r24, 0x28	; 40
     38a:	08 95       	ret
     38c:	c2 96       	adiw	r24, 0x32	; 50
     38e:	08 95       	ret
     390:	cc 96       	adiw	r24, 0x3c	; 60
     392:	08 95       	ret
     394:	8a 5b       	subi	r24, 0xBA	; 186
     396:	9f 4f       	sbci	r25, 0xFF	; 255
     398:	08 95       	ret
     39a:	80 5b       	subi	r24, 0xB0	; 176
     39c:	9f 4f       	sbci	r25, 0xFF	; 255
     39e:	08 95       	ret
     3a0:	86 5a       	subi	r24, 0xA6	; 166
     3a2:	9f 4f       	sbci	r25, 0xFF	; 255
     3a4:	08 95       	ret
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	08 95       	ret

000003ac <asciiHexToHex>:
     3ac:	48 2f       	mov	r20, r24
     3ae:	86 2f       	mov	r24, r22
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	fc 01       	movw	r30, r24
     3b4:	f1 97       	sbiw	r30, 0x31	; 49
     3b6:	e6 31       	cpi	r30, 0x16	; 22
     3b8:	f1 05       	cpc	r31, r1
     3ba:	88 f5       	brcc	.+98     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     3bc:	ef 5a       	subi	r30, 0xAF	; 175
     3be:	ff 4f       	sbci	r31, 0xFF	; 255
     3c0:	0c 94 2d 11 	jmp	0x225a	; 0x225a <__tablejump2__>
     3c4:	81 e0       	ldi	r24, 0x01	; 1
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	2c c0       	rjmp	.+88     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3ca:	82 e0       	ldi	r24, 0x02	; 2
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	29 c0       	rjmp	.+82     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3d0:	83 e0       	ldi	r24, 0x03	; 3
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	26 c0       	rjmp	.+76     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3d6:	84 e0       	ldi	r24, 0x04	; 4
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	23 c0       	rjmp	.+70     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3dc:	85 e0       	ldi	r24, 0x05	; 5
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	20 c0       	rjmp	.+64     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3e2:	86 e0       	ldi	r24, 0x06	; 6
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	1d c0       	rjmp	.+58     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3e8:	87 e0       	ldi	r24, 0x07	; 7
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	1a c0       	rjmp	.+52     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3ee:	88 e0       	ldi	r24, 0x08	; 8
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	17 c0       	rjmp	.+46     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3f4:	89 e0       	ldi	r24, 0x09	; 9
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	14 c0       	rjmp	.+40     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3fa:	8a e0       	ldi	r24, 0x0A	; 10
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	11 c0       	rjmp	.+34     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     400:	8b e0       	ldi	r24, 0x0B	; 11
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	0e c0       	rjmp	.+28     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     406:	8c e0       	ldi	r24, 0x0C	; 12
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0b c0       	rjmp	.+22     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     40c:	8d e0       	ldi	r24, 0x0D	; 13
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	08 c0       	rjmp	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     412:	8e e0       	ldi	r24, 0x0E	; 14
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	05 c0       	rjmp	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     418:	8f e0       	ldi	r24, 0x0F	; 15
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	02 c0       	rjmp	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	50 e0       	ldi	r21, 0x00	; 0
     424:	fa 01       	movw	r30, r20
     426:	f0 97       	sbiw	r30, 0x30	; 48
     428:	e7 31       	cpi	r30, 0x17	; 23
     42a:	f1 05       	cpc	r31, r1
     42c:	58 f5       	brcc	.+86     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     42e:	e9 59       	subi	r30, 0x99	; 153
     430:	ff 4f       	sbci	r31, 0xFF	; 255
     432:	0c 94 2d 11 	jmp	0x225a	; 0x225a <__tablejump2__>
     436:	40 96       	adiw	r24, 0x10	; 16
     438:	08 95       	ret
     43a:	80 96       	adiw	r24, 0x20	; 32
     43c:	08 95       	ret
     43e:	c0 96       	adiw	r24, 0x30	; 48
     440:	08 95       	ret
     442:	80 5c       	subi	r24, 0xC0	; 192
     444:	9f 4f       	sbci	r25, 0xFF	; 255
     446:	08 95       	ret
     448:	80 5b       	subi	r24, 0xB0	; 176
     44a:	9f 4f       	sbci	r25, 0xFF	; 255
     44c:	08 95       	ret
     44e:	80 5a       	subi	r24, 0xA0	; 160
     450:	9f 4f       	sbci	r25, 0xFF	; 255
     452:	08 95       	ret
     454:	80 59       	subi	r24, 0x90	; 144
     456:	9f 4f       	sbci	r25, 0xFF	; 255
     458:	08 95       	ret
     45a:	80 58       	subi	r24, 0x80	; 128
     45c:	9f 4f       	sbci	r25, 0xFF	; 255
     45e:	08 95       	ret
     460:	80 57       	subi	r24, 0x70	; 112
     462:	9f 4f       	sbci	r25, 0xFF	; 255
     464:	08 95       	ret
     466:	80 eb       	ldi	r24, 0xB0	; 176
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	08 95       	ret
     46c:	80 ec       	ldi	r24, 0xC0	; 192
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	08 95       	ret
     472:	80 ed       	ldi	r24, 0xD0	; 208
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	08 95       	ret
     478:	80 ee       	ldi	r24, 0xE0	; 224
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	08 95       	ret
     47e:	80 ef       	ldi	r24, 0xF0	; 240
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	08 95       	ret
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	08 95       	ret
     48a:	80 ea       	ldi	r24, 0xA0	; 160
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	08 95       	ret

00000490 <delay_ms>:
     490:	ab 01       	movw	r20, r22
     492:	bc 01       	movw	r22, r24
     494:	41 15       	cp	r20, r1
     496:	51 05       	cpc	r21, r1
     498:	61 05       	cpc	r22, r1
     49a:	71 05       	cpc	r23, r1
     49c:	61 f4       	brne	.+24     	; 0x4b6 <delay_ms+0x26>
     49e:	08 95       	ret
     4a0:	00 00       	nop
     4a2:	01 96       	adiw	r24, 0x01	; 1
     4a4:	8a 39       	cpi	r24, 0x9A	; 154
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	92 07       	cpc	r25, r18
     4aa:	d1 f7       	brne	.-12     	; 0x4a0 <delay_ms+0x10>
     4ac:	41 50       	subi	r20, 0x01	; 1
     4ae:	51 09       	sbc	r21, r1
     4b0:	61 09       	sbc	r22, r1
     4b2:	71 09       	sbc	r23, r1
     4b4:	19 f0       	breq	.+6      	; 0x4bc <delay_ms+0x2c>
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	f2 cf       	rjmp	.-28     	; 0x4a0 <delay_ms+0x10>
     4bc:	08 95       	ret

000004be <getProx>:
     4be:	1f 93       	push	r17
     4c0:	cf 93       	push	r28
     4c2:	df 93       	push	r29
     4c4:	85 e0       	ldi	r24, 0x05	; 5
     4c6:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__TEXT_REGION_LENGTH__+0x700192>
     4ca:	8e e0       	ldi	r24, 0x0E	; 14
     4cc:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <__TEXT_REGION_LENGTH__+0x700184>
     4d0:	11 e0       	ldi	r17, 0x01	; 1
     4d2:	10 93 40 0a 	sts	0x0A40, r17	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
     4d6:	84 e0       	ldi	r24, 0x04	; 4
     4d8:	80 93 41 0a 	sts	0x0A41, r24	; 0x800a41 <__TEXT_REGION_LENGTH__+0x700a41>
     4dc:	c4 e4       	ldi	r28, 0x44	; 68
     4de:	da e0       	ldi	r29, 0x0A	; 10
     4e0:	80 e1       	ldi	r24, 0x10	; 16
     4e2:	88 83       	st	Y, r24
     4e4:	a8 95       	wdr
     4e6:	25 9a       	sbi	0x04, 5	; 4
     4e8:	21 9a       	sbi	0x04, 1	; 4
     4ea:	02 9a       	sbi	0x00, 2	; 0
     4ec:	44 98       	cbi	0x08, 4	; 8
     4ee:	2d 9a       	sbi	0x05, 5	; 5
     4f0:	29 98       	cbi	0x05, 1	; 5
     4f2:	0a 9a       	sbi	0x01, 2	; 1
	...
     4fc:	2d 98       	cbi	0x05, 5	; 5
	...
     506:	0a 98       	cbi	0x01, 2	; 1
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     514:	29 98       	cbi	0x05, 1	; 5
     516:	10 93 45 0a 	sts	0x0A45, r17	; 0x800a45 <__TEXT_REGION_LENGTH__+0x700a45>
     51a:	81 e1       	ldi	r24, 0x11	; 17
     51c:	88 83       	st	Y, r24
	...
     526:	29 9a       	sbi	0x05, 1	; 5
     528:	29 9a       	sbi	0x05, 1	; 5
     52a:	80 91 4c 0a 	lds	r24, 0x0A4C	; 0x800a4c <__TEXT_REGION_LENGTH__+0x700a4c>
     52e:	90 91 4d 0a 	lds	r25, 0x0A4D	; 0x800a4d <__TEXT_REGION_LENGTH__+0x700a4d>
     532:	a8 95       	wdr
     534:	80 91 46 0a 	lds	r24, 0x0A46	; 0x800a46 <__TEXT_REGION_LENGTH__+0x700a46>
     538:	81 11       	cpse	r24, r1
     53a:	09 c0       	rjmp	.+18     	; 0x54e <getProx+0x90>
     53c:	88 e2       	ldi	r24, 0x28	; 40
     53e:	93 e2       	ldi	r25, 0x23	; 35
     540:	e6 e4       	ldi	r30, 0x46	; 70
     542:	fa e0       	ldi	r31, 0x0A	; 10
     544:	20 81       	ld	r18, Z
     546:	21 11       	cpse	r18, r1
     548:	02 c0       	rjmp	.+4      	; 0x54e <getProx+0x90>
     54a:	01 97       	sbiw	r24, 0x01	; 1
     54c:	d9 f7       	brne	.-10     	; 0x544 <getProx+0x86>
     54e:	80 91 4c 0a 	lds	r24, 0x0A4C	; 0x800a4c <__TEXT_REGION_LENGTH__+0x700a4c>
     552:	90 91 4d 0a 	lds	r25, 0x0A4D	; 0x800a4d <__TEXT_REGION_LENGTH__+0x700a4d>
     556:	2d 9a       	sbi	0x05, 5	; 5
     558:	e5 e4       	ldi	r30, 0x45	; 69
     55a:	fa e0       	ldi	r31, 0x0A	; 10
     55c:	10 82       	st	Z, r1
     55e:	20 e1       	ldi	r18, 0x10	; 16
     560:	20 93 44 0a 	sts	0x0A44, r18	; 0x800a44 <__TEXT_REGION_LENGTH__+0x700a44>
     564:	10 82       	st	Z, r1
     566:	df 91       	pop	r29
     568:	cf 91       	pop	r28
     56a:	1f 91       	pop	r17
     56c:	08 95       	ret

0000056e <redBlink>:
     56e:	cf 93       	push	r28
     570:	c8 2f       	mov	r28, r24
     572:	42 9a       	sbi	0x08, 2	; 8
     574:	88 23       	and	r24, r24
     576:	81 f0       	breq	.+32     	; 0x598 <redBlink+0x2a>
     578:	4a 98       	cbi	0x09, 2	; 9
     57a:	6a e0       	ldi	r22, 0x0A	; 10
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     586:	4a 9a       	sbi	0x09, 2	; 9
     588:	62 e3       	ldi	r22, 0x32	; 50
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     594:	c1 50       	subi	r28, 0x01	; 1
     596:	81 f7       	brne	.-32     	; 0x578 <redBlink+0xa>
     598:	42 98       	cbi	0x08, 2	; 8
     59a:	e2 e5       	ldi	r30, 0x52	; 82
     59c:	f4 e0       	ldi	r31, 0x04	; 4
     59e:	80 81       	ld	r24, Z
     5a0:	88 60       	ori	r24, 0x08	; 8
     5a2:	80 83       	st	Z, r24
     5a4:	cf 91       	pop	r28
     5a6:	08 95       	ret

000005a8 <redBlinkLong>:
     5a8:	cf 93       	push	r28
     5aa:	c8 2f       	mov	r28, r24
     5ac:	42 9a       	sbi	0x08, 2	; 8
     5ae:	88 23       	and	r24, r24
     5b0:	81 f0       	breq	.+32     	; 0x5d2 <redBlinkLong+0x2a>
     5b2:	4a 98       	cbi	0x09, 2	; 9
     5b4:	6c e2       	ldi	r22, 0x2C	; 44
     5b6:	71 e0       	ldi	r23, 0x01	; 1
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     5c0:	4a 9a       	sbi	0x09, 2	; 9
     5c2:	62 e3       	ldi	r22, 0x32	; 50
     5c4:	70 e0       	ldi	r23, 0x00	; 0
     5c6:	80 e0       	ldi	r24, 0x00	; 0
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     5ce:	c1 50       	subi	r28, 0x01	; 1
     5d0:	81 f7       	brne	.-32     	; 0x5b2 <redBlinkLong+0xa>
     5d2:	42 98       	cbi	0x08, 2	; 8
     5d4:	e2 e5       	ldi	r30, 0x52	; 82
     5d6:	f4 e0       	ldi	r31, 0x04	; 4
     5d8:	80 81       	ld	r24, Z
     5da:	88 60       	ori	r24, 0x08	; 8
     5dc:	80 83       	st	Z, r24
     5de:	cf 91       	pop	r28
     5e0:	08 95       	ret

000005e2 <usart_put_string>:
     5e2:	66 23       	and	r22, r22
     5e4:	71 f0       	breq	.+28     	; 0x602 <usart_put_string+0x20>
     5e6:	dc 01       	movw	r26, r24
     5e8:	9c 01       	movw	r18, r24
     5ea:	26 0f       	add	r18, r22
     5ec:	31 1d       	adc	r19, r1
     5ee:	e0 e0       	ldi	r30, 0x00	; 0
     5f0:	f8 e0       	ldi	r31, 0x08	; 8
     5f2:	94 81       	ldd	r25, Z+4	; 0x04
     5f4:	95 ff       	sbrs	r25, 5
     5f6:	fd cf       	rjmp	.-6      	; 0x5f2 <usart_put_string+0x10>
     5f8:	9d 91       	ld	r25, X+
     5fa:	92 83       	std	Z+2, r25	; 0x02
     5fc:	a2 17       	cp	r26, r18
     5fe:	b3 07       	cpc	r27, r19
     600:	c1 f7       	brne	.-16     	; 0x5f2 <usart_put_string+0x10>
     602:	08 95       	ret

00000604 <initGPSuBlox>:
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	cd b7       	in	r28, 0x3d	; 61
     60a:	de b7       	in	r29, 0x3e	; 62
     60c:	c1 59       	subi	r28, 0x91	; 145
     60e:	d1 09       	sbc	r29, r1
     610:	cd bf       	out	0x3d, r28	; 61
     612:	de bf       	out	0x3e, r29	; 62
     614:	68 ee       	ldi	r22, 0xE8	; 232
     616:	73 e0       	ldi	r23, 0x03	; 3
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     620:	8d e1       	ldi	r24, 0x1D	; 29
     622:	e6 e7       	ldi	r30, 0x76	; 118
     624:	f2 ea       	ldi	r31, 0xA2	; 162
     626:	de 01       	movw	r26, r28
     628:	11 96       	adiw	r26, 0x01	; 1
     62a:	01 90       	ld	r0, Z+
     62c:	0d 92       	st	X+, r0
     62e:	8a 95       	dec	r24
     630:	e1 f7       	brne	.-8      	; 0x62a <initGPSuBlox+0x26>
     632:	6d e1       	ldi	r22, 0x1D	; 29
     634:	ce 01       	movw	r24, r28
     636:	01 96       	adiw	r24, 0x01	; 1
     638:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     63c:	8d e1       	ldi	r24, 0x1D	; 29
     63e:	e3 e9       	ldi	r30, 0x93	; 147
     640:	f2 ea       	ldi	r31, 0xA2	; 162
     642:	de 01       	movw	r26, r28
     644:	5e 96       	adiw	r26, 0x1e	; 30
     646:	01 90       	ld	r0, Z+
     648:	0d 92       	st	X+, r0
     64a:	8a 95       	dec	r24
     64c:	e1 f7       	brne	.-8      	; 0x646 <initGPSuBlox+0x42>
     64e:	6d e1       	ldi	r22, 0x1D	; 29
     650:	ce 01       	movw	r24, r28
     652:	4e 96       	adiw	r24, 0x1e	; 30
     654:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     658:	8d e1       	ldi	r24, 0x1D	; 29
     65a:	e0 eb       	ldi	r30, 0xB0	; 176
     65c:	f2 ea       	ldi	r31, 0xA2	; 162
     65e:	de 01       	movw	r26, r28
     660:	db 96       	adiw	r26, 0x3b	; 59
     662:	01 90       	ld	r0, Z+
     664:	0d 92       	st	X+, r0
     666:	8a 95       	dec	r24
     668:	e1 f7       	brne	.-8      	; 0x662 <initGPSuBlox+0x5e>
     66a:	6d e1       	ldi	r22, 0x1D	; 29
     66c:	ce 01       	movw	r24, r28
     66e:	cb 96       	adiw	r24, 0x3b	; 59
     670:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     674:	8d e1       	ldi	r24, 0x1D	; 29
     676:	ed ec       	ldi	r30, 0xCD	; 205
     678:	f2 ea       	ldi	r31, 0xA2	; 162
     67a:	de 01       	movw	r26, r28
     67c:	a8 5a       	subi	r26, 0xA8	; 168
     67e:	bf 4f       	sbci	r27, 0xFF	; 255
     680:	01 90       	ld	r0, Z+
     682:	0d 92       	st	X+, r0
     684:	8a 95       	dec	r24
     686:	e1 f7       	brne	.-8      	; 0x680 <initGPSuBlox+0x7c>
     688:	6d e1       	ldi	r22, 0x1D	; 29
     68a:	ce 01       	movw	r24, r28
     68c:	88 5a       	subi	r24, 0xA8	; 168
     68e:	9f 4f       	sbci	r25, 0xFF	; 255
     690:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     694:	8d e1       	ldi	r24, 0x1D	; 29
     696:	ea ee       	ldi	r30, 0xEA	; 234
     698:	f2 ea       	ldi	r31, 0xA2	; 162
     69a:	de 01       	movw	r26, r28
     69c:	ab 58       	subi	r26, 0x8B	; 139
     69e:	bf 4f       	sbci	r27, 0xFF	; 255
     6a0:	01 90       	ld	r0, Z+
     6a2:	0d 92       	st	X+, r0
     6a4:	8a 95       	dec	r24
     6a6:	e1 f7       	brne	.-8      	; 0x6a0 <initGPSuBlox+0x9c>
     6a8:	6d e1       	ldi	r22, 0x1D	; 29
     6aa:	ce 01       	movw	r24, r28
     6ac:	8b 58       	subi	r24, 0x8B	; 139
     6ae:	9f 4f       	sbci	r25, 0xFF	; 255
     6b0:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     6b4:	cf 56       	subi	r28, 0x6F	; 111
     6b6:	df 4f       	sbci	r29, 0xFF	; 255
     6b8:	cd bf       	out	0x3d, r28	; 61
     6ba:	de bf       	out	0x3e, r29	; 62
     6bc:	df 91       	pop	r29
     6be:	cf 91       	pop	r28
     6c0:	08 95       	ret

000006c2 <hex1ToAscii>:
     6c2:	8f 70       	andi	r24, 0x0F	; 15
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	fc 01       	movw	r30, r24
     6c8:	e2 58       	subi	r30, 0x82	; 130
     6ca:	ff 4f       	sbci	r31, 0xFF	; 255
     6cc:	0c 94 2d 11 	jmp	0x225a	; 0x225a <__tablejump2__>
     6d0:	80 e3       	ldi	r24, 0x30	; 48
     6d2:	08 95       	ret
     6d4:	81 e3       	ldi	r24, 0x31	; 49
     6d6:	08 95       	ret
     6d8:	82 e3       	ldi	r24, 0x32	; 50
     6da:	08 95       	ret
     6dc:	83 e3       	ldi	r24, 0x33	; 51
     6de:	08 95       	ret
     6e0:	84 e3       	ldi	r24, 0x34	; 52
     6e2:	08 95       	ret
     6e4:	85 e3       	ldi	r24, 0x35	; 53
     6e6:	08 95       	ret
     6e8:	86 e3       	ldi	r24, 0x36	; 54
     6ea:	08 95       	ret
     6ec:	87 e3       	ldi	r24, 0x37	; 55
     6ee:	08 95       	ret
     6f0:	88 e3       	ldi	r24, 0x38	; 56
     6f2:	08 95       	ret
     6f4:	89 e3       	ldi	r24, 0x39	; 57
     6f6:	08 95       	ret
     6f8:	81 e4       	ldi	r24, 0x41	; 65
     6fa:	08 95       	ret
     6fc:	82 e4       	ldi	r24, 0x42	; 66
     6fe:	08 95       	ret
     700:	83 e4       	ldi	r24, 0x43	; 67
     702:	08 95       	ret
     704:	84 e4       	ldi	r24, 0x44	; 68
     706:	08 95       	ret
     708:	85 e4       	ldi	r24, 0x45	; 69
     70a:	08 95       	ret
     70c:	86 e4       	ldi	r24, 0x46	; 70
     70e:	08 95       	ret

00000710 <hex2ToAscii>:
     710:	1f 93       	push	r17
     712:	cf 93       	push	r28
     714:	df 93       	push	r29
     716:	ec 01       	movw	r28, r24
     718:	0e 94 61 03 	call	0x6c2	; 0x6c2 <hex1ToAscii>
     71c:	18 2f       	mov	r17, r24
     71e:	ce 01       	movw	r24, r28
     720:	95 95       	asr	r25
     722:	87 95       	ror	r24
     724:	95 95       	asr	r25
     726:	87 95       	ror	r24
     728:	95 95       	asr	r25
     72a:	87 95       	ror	r24
     72c:	95 95       	asr	r25
     72e:	87 95       	ror	r24
     730:	0e 94 61 03 	call	0x6c2	; 0x6c2 <hex1ToAscii>
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	98 2f       	mov	r25, r24
     738:	88 27       	eor	r24, r24
     73a:	81 0f       	add	r24, r17
     73c:	91 1d       	adc	r25, r1
     73e:	df 91       	pop	r29
     740:	cf 91       	pop	r28
     742:	1f 91       	pop	r17
     744:	08 95       	ret

00000746 <LCDshort>:
     746:	df 92       	push	r13
     748:	ef 92       	push	r14
     74a:	ff 92       	push	r15
     74c:	0f 93       	push	r16
     74e:	1f 93       	push	r17
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	00 d0       	rcall	.+0      	; 0x756 <LCDshort+0x10>
     756:	00 d0       	rcall	.+0      	; 0x758 <LCDshort+0x12>
     758:	cd b7       	in	r28, 0x3d	; 61
     75a:	de b7       	in	r29, 0x3e	; 62
     75c:	7c 01       	movw	r14, r24
     75e:	16 2f       	mov	r17, r22
     760:	8f 2d       	mov	r24, r15
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	0e 94 88 03 	call	0x710	; 0x710 <hex2ToAscii>
     768:	08 2f       	mov	r16, r24
     76a:	d9 2e       	mov	r13, r25
     76c:	c7 01       	movw	r24, r14
     76e:	99 27       	eor	r25, r25
     770:	0e 94 88 03 	call	0x710	; 0x710 <hex2ToAscii>
     774:	d9 82       	std	Y+1, r13	; 0x01
     776:	0a 83       	std	Y+2, r16	; 0x02
     778:	9b 83       	std	Y+3, r25	; 0x03
     77a:	8c 83       	std	Y+4, r24	; 0x04
     77c:	12 30       	cpi	r17, 0x02	; 2
     77e:	51 f0       	breq	.+20     	; 0x794 <LCDshort+0x4e>
     780:	13 30       	cpi	r17, 0x03	; 3
     782:	71 f0       	breq	.+28     	; 0x7a0 <LCDshort+0x5a>
     784:	11 30       	cpi	r17, 0x01	; 1
     786:	91 f4       	brne	.+36     	; 0x7ac <LCDshort+0x66>
     788:	61 e0       	ldi	r22, 0x01	; 1
     78a:	ce 01       	movw	r24, r28
     78c:	04 96       	adiw	r24, 0x04	; 4
     78e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     792:	11 c0       	rjmp	.+34     	; 0x7b6 <LCDshort+0x70>
     794:	62 e0       	ldi	r22, 0x02	; 2
     796:	ce 01       	movw	r24, r28
     798:	03 96       	adiw	r24, 0x03	; 3
     79a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     79e:	0b c0       	rjmp	.+22     	; 0x7b6 <LCDshort+0x70>
     7a0:	63 e0       	ldi	r22, 0x03	; 3
     7a2:	ce 01       	movw	r24, r28
     7a4:	02 96       	adiw	r24, 0x02	; 2
     7a6:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     7aa:	05 c0       	rjmp	.+10     	; 0x7b6 <LCDshort+0x70>
     7ac:	64 e0       	ldi	r22, 0x04	; 4
     7ae:	ce 01       	movw	r24, r28
     7b0:	01 96       	adiw	r24, 0x01	; 1
     7b2:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     7b6:	24 96       	adiw	r28, 0x04	; 4
     7b8:	cd bf       	out	0x3d, r28	; 61
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	ff 90       	pop	r15
     7c6:	ef 90       	pop	r14
     7c8:	df 90       	pop	r13
     7ca:	08 95       	ret

000007cc <LCDclear>:
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	cd b7       	in	r28, 0x3d	; 61
     7d2:	de b7       	in	r29, 0x3e	; 62
     7d4:	28 97       	sbiw	r28, 0x08	; 8
     7d6:	cd bf       	out	0x3d, r28	; 61
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
     7de:	88 e0       	ldi	r24, 0x08	; 8
     7e0:	e7 e0       	ldi	r30, 0x07	; 7
     7e2:	f3 ea       	ldi	r31, 0xA3	; 163
     7e4:	de 01       	movw	r26, r28
     7e6:	11 96       	adiw	r26, 0x01	; 1
     7e8:	01 90       	ld	r0, Z+
     7ea:	0d 92       	st	X+, r0
     7ec:	8a 95       	dec	r24
     7ee:	e1 f7       	brne	.-8      	; 0x7e8 <LCDclear+0x1c>
     7f0:	68 e0       	ldi	r22, 0x08	; 8
     7f2:	ce 01       	movw	r24, r28
     7f4:	01 96       	adiw	r24, 0x01	; 1
     7f6:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     7fa:	6a e0       	ldi	r22, 0x0A	; 10
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     806:	28 96       	adiw	r28, 0x08	; 8
     808:	cd bf       	out	0x3d, r28	; 61
     80a:	de bf       	out	0x3e, r29	; 62
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	08 95       	ret

00000812 <clrRx>:
     812:	8f e1       	ldi	r24, 0x1F	; 31
     814:	98 e3       	ldi	r25, 0x38	; 56
     816:	80 93 4f 39 	sts	0x394F, r24	; 0x80394f <p_GPSrcvData>
     81a:	90 93 50 39 	sts	0x3950, r25	; 0x803950 <p_GPSrcvData+0x1>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	28 e5       	ldi	r18, 0x58	; 88
     824:	e0 91 4f 39 	lds	r30, 0x394F	; 0x80394f <p_GPSrcvData>
     828:	f0 91 50 39 	lds	r31, 0x3950	; 0x803950 <p_GPSrcvData+0x1>
     82c:	e8 0f       	add	r30, r24
     82e:	f9 1f       	adc	r31, r25
     830:	20 83       	st	Z, r18
     832:	01 96       	adiw	r24, 0x01	; 1
     834:	86 3b       	cpi	r24, 0xB6	; 182
     836:	91 05       	cpc	r25, r1
     838:	a9 f7       	brne	.-22     	; 0x824 <clrRx+0x12>
     83a:	8f e1       	ldi	r24, 0x1F	; 31
     83c:	98 e3       	ldi	r25, 0x38	; 56
     83e:	80 93 4f 39 	sts	0x394F, r24	; 0x80394f <p_GPSrcvData>
     842:	90 93 50 39 	sts	0x3950, r25	; 0x803950 <p_GPSrcvData+0x1>
     846:	08 95       	ret

00000848 <gpsReqDateUblox>:
     848:	bf 92       	push	r11
     84a:	cf 92       	push	r12
     84c:	df 92       	push	r13
     84e:	ef 92       	push	r14
     850:	ff 92       	push	r15
     852:	0f 93       	push	r16
     854:	1f 93       	push	r17
     856:	cf 93       	push	r28
     858:	df 93       	push	r29
     85a:	cd b7       	in	r28, 0x3d	; 61
     85c:	de b7       	in	r29, 0x3e	; 62
     85e:	6f 97       	sbiw	r28, 0x1f	; 31
     860:	cd bf       	out	0x3d, r28	; 61
     862:	de bf       	out	0x3e, r29	; 62
     864:	8f e0       	ldi	r24, 0x0F	; 15
     866:	ef e0       	ldi	r30, 0x0F	; 15
     868:	f3 ea       	ldi	r31, 0xA3	; 163
     86a:	de 01       	movw	r26, r28
     86c:	11 96       	adiw	r26, 0x01	; 1
     86e:	01 90       	ld	r0, Z+
     870:	0d 92       	st	X+, r0
     872:	8a 95       	dec	r24
     874:	e1 f7       	brne	.-8      	; 0x86e <gpsReqDateUblox+0x26>
     876:	04 e0       	ldi	r16, 0x04	; 4
     878:	b1 2c       	mov	r11, r1
     87a:	c1 2c       	mov	r12, r1
     87c:	68 94       	set
     87e:	dd 24       	eor	r13, r13
     880:	d3 f8       	bld	r13, 3
     882:	0f 2e       	mov	r0, r31
     884:	f6 ed       	ldi	r31, 0xD6	; 214
     886:	ef 2e       	mov	r14, r31
     888:	f8 e3       	ldi	r31, 0x38	; 56
     88a:	ff 2e       	mov	r15, r31
     88c:	f0 2d       	mov	r31, r0
     88e:	a8 95       	wdr
     890:	6f e0       	ldi	r22, 0x0F	; 15
     892:	ce 01       	movw	r24, r28
     894:	01 96       	adiw	r24, 0x01	; 1
     896:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     89a:	0e 94 09 04 	call	0x812	; 0x812 <clrRx>
     89e:	f6 01       	movw	r30, r12
     8a0:	85 81       	ldd	r24, Z+5	; 0x05
     8a2:	80 68       	ori	r24, 0x80	; 128
     8a4:	85 83       	std	Z+5, r24	; 0x05
     8a6:	10 92 47 39 	sts	0x3947, r1	; 0x803947 <endOfLineFlag>
     8aa:	78 94       	sei
     8ac:	80 91 47 39 	lds	r24, 0x3947	; 0x803947 <endOfLineFlag>
     8b0:	81 11       	cpse	r24, r1
     8b2:	0a c0       	rjmp	.+20     	; 0x8c8 <gpsReqDateUblox+0x80>
     8b4:	64 e6       	ldi	r22, 0x64	; 100
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	80 e0       	ldi	r24, 0x00	; 0
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     8c0:	1f e0       	ldi	r17, 0x0F	; 15
     8c2:	11 50       	subi	r17, 0x01	; 1
     8c4:	09 f0       	breq	.+2      	; 0x8c8 <gpsReqDateUblox+0x80>
     8c6:	0e c1       	rjmp	.+540    	; 0xae4 <gpsReqDateUblox+0x29c>
     8c8:	80 91 45 39 	lds	r24, 0x3945	; 0x803945 <timeToFix>
     8cc:	90 91 46 39 	lds	r25, 0x3946	; 0x803946 <timeToFix+0x1>
     8d0:	01 96       	adiw	r24, 0x01	; 1
     8d2:	80 93 45 39 	sts	0x3945, r24	; 0x803945 <timeToFix>
     8d6:	90 93 46 39 	sts	0x3946, r25	; 0x803946 <timeToFix+0x1>
     8da:	81 3d       	cpi	r24, 0xD1	; 209
     8dc:	f2 e0       	ldi	r31, 0x02	; 2
     8de:	9f 07       	cpc	r25, r31
     8e0:	24 f0       	brlt	.+8      	; 0x8ea <gpsReqDateUblox+0xa2>
     8e2:	20 91 4e 39 	lds	r18, 0x394E	; 0x80394e <mState>
     8e6:	21 30       	cpi	r18, 0x01	; 1
     8e8:	19 f4       	brne	.+6      	; 0x8f0 <gpsReqDateUblox+0xa8>
     8ea:	8d 3a       	cpi	r24, 0xAD	; 173
     8ec:	93 40       	sbci	r25, 0x03	; 3
     8ee:	34 f0       	brlt	.+12     	; 0x8fc <gpsReqDateUblox+0xb4>
     8f0:	8a e9       	ldi	r24, 0x9A	; 154
     8f2:	80 93 52 39 	sts	0x3952, r24	; 0x803952 <uBloxStatus>
     8f6:	8a e9       	ldi	r24, 0x9A	; 154
     8f8:	92 e0       	ldi	r25, 0x02	; 2
     8fa:	fb c0       	rjmp	.+502    	; 0xaf2 <gpsReqDateUblox+0x2aa>
     8fc:	f6 01       	movw	r30, r12
     8fe:	85 81       	ldd	r24, Z+5	; 0x05
     900:	8f 77       	andi	r24, 0x7F	; 127
     902:	85 83       	std	Z+5, r24	; 0x05
     904:	41 e4       	ldi	r20, 0x41	; 65
     906:	64 e4       	ldi	r22, 0x44	; 68
     908:	8a e5       	ldi	r24, 0x5A	; 90
     90a:	0e 94 63 01 	call	0x2c6	; 0x2c6 <searchRcvBuffuBlox>
     90e:	89 2b       	or	r24, r25
     910:	09 f0       	breq	.+2      	; 0x914 <gpsReqDateUblox+0xcc>
     912:	67 c0       	rjmp	.+206    	; 0x9e2 <gpsReqDateUblox+0x19a>
     914:	20 91 53 39 	lds	r18, 0x3953	; 0x803953 <GPSSearchPtr>
     918:	30 91 54 39 	lds	r19, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     91c:	d9 01       	movw	r26, r18
     91e:	12 97       	sbiw	r26, 0x02	; 2
     920:	f8 e3       	ldi	r31, 0x38	; 56
     922:	a5 3d       	cpi	r26, 0xD5	; 213
     924:	bf 07       	cpc	r27, r31
     926:	09 f0       	breq	.+2      	; 0x92a <gpsReqDateUblox+0xe2>
     928:	78 f4       	brcc	.+30     	; 0x948 <gpsReqDateUblox+0x100>
     92a:	fd 01       	movw	r30, r26
     92c:	80 81       	ld	r24, Z
     92e:	8a 32       	cpi	r24, 0x2A	; 42
     930:	69 f0       	breq	.+26     	; 0x94c <gpsReqDateUblox+0x104>
     932:	31 96       	adiw	r30, 0x01	; 1
     934:	10 e0       	ldi	r17, 0x00	; 0
     936:	df 01       	movw	r26, r30
     938:	18 27       	eor	r17, r24
     93a:	ee 16       	cp	r14, r30
     93c:	ff 06       	cpc	r15, r31
     93e:	39 f0       	breq	.+14     	; 0x94e <gpsReqDateUblox+0x106>
     940:	81 91       	ld	r24, Z+
     942:	8a 32       	cpi	r24, 0x2A	; 42
     944:	c1 f7       	brne	.-16     	; 0x936 <gpsReqDateUblox+0xee>
     946:	03 c0       	rjmp	.+6      	; 0x94e <gpsReqDateUblox+0x106>
     948:	10 e0       	ldi	r17, 0x00	; 0
     94a:	01 c0       	rjmp	.+2      	; 0x94e <gpsReqDateUblox+0x106>
     94c:	10 e0       	ldi	r17, 0x00	; 0
     94e:	12 96       	adiw	r26, 0x02	; 2
     950:	6c 91       	ld	r22, X
     952:	12 97       	sbiw	r26, 0x02	; 2
     954:	11 96       	adiw	r26, 0x01	; 1
     956:	8c 91       	ld	r24, X
     958:	0e 94 d6 01 	call	0x3ac	; 0x3ac <asciiHexToHex>
     95c:	21 2f       	mov	r18, r17
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	28 17       	cp	r18, r24
     962:	39 07       	cpc	r19, r25
     964:	f1 f5       	brne	.+124    	; 0x9e2 <gpsReqDateUblox+0x19a>
     966:	34 c0       	rjmp	.+104    	; 0x9d0 <gpsReqDateUblox+0x188>
     968:	cf 01       	movw	r24, r30
     96a:	01 96       	adiw	r24, 0x01	; 1
     96c:	80 93 53 39 	sts	0x3953, r24	; 0x803953 <GPSSearchPtr>
     970:	90 93 54 39 	sts	0x3954, r25	; 0x803954 <GPSSearchPtr+0x1>
     974:	81 81       	ldd	r24, Z+1	; 0x01
     976:	8c 32       	cpi	r24, 0x2C	; 44
     978:	61 f5       	brne	.+88     	; 0x9d2 <gpsReqDateUblox+0x18a>
     97a:	2f 5f       	subi	r18, 0xFF	; 255
     97c:	22 30       	cpi	r18, 0x02	; 2
     97e:	49 f5       	brne	.+82     	; 0x9d2 <gpsReqDateUblox+0x18a>
     980:	22 81       	ldd	r18, Z+2	; 0x02
     982:	2c 32       	cpi	r18, 0x2C	; 44
     984:	71 f1       	breq	.+92     	; 0x9e2 <gpsReqDateUblox+0x19a>
     986:	36 81       	ldd	r19, Z+6	; 0x06
     988:	38 35       	cpi	r19, 0x58	; 88
     98a:	59 f1       	breq	.+86     	; 0x9e2 <gpsReqDateUblox+0x19a>
     98c:	8b 2d       	mov	r24, r11
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	a4 e1       	ldi	r26, 0x14	; 20
     992:	b0 e0       	ldi	r27, 0x00	; 0
     994:	ac 0f       	add	r26, r28
     996:	bd 1f       	adc	r27, r29
     998:	a8 0f       	add	r26, r24
     99a:	b9 1f       	adc	r27, r25
     99c:	3c 93       	st	X, r19
     99e:	a0 e1       	ldi	r26, 0x10	; 16
     9a0:	b0 e0       	ldi	r27, 0x00	; 0
     9a2:	ac 0f       	add	r26, r28
     9a4:	bd 1f       	adc	r27, r29
     9a6:	a8 0f       	add	r26, r24
     9a8:	b9 1f       	adc	r27, r25
     9aa:	35 81       	ldd	r19, Z+5	; 0x05
     9ac:	3c 93       	st	X, r19
     9ae:	a8 e1       	ldi	r26, 0x18	; 24
     9b0:	b0 e0       	ldi	r27, 0x00	; 0
     9b2:	ac 0f       	add	r26, r28
     9b4:	bd 1f       	adc	r27, r29
     9b6:	a8 0f       	add	r26, r24
     9b8:	b9 1f       	adc	r27, r25
     9ba:	33 81       	ldd	r19, Z+3	; 0x03
     9bc:	3c 93       	st	X, r19
     9be:	ec e1       	ldi	r30, 0x1C	; 28
     9c0:	f0 e0       	ldi	r31, 0x00	; 0
     9c2:	ec 0f       	add	r30, r28
     9c4:	fd 1f       	adc	r31, r29
     9c6:	e8 0f       	add	r30, r24
     9c8:	f9 1f       	adc	r31, r25
     9ca:	20 83       	st	Z, r18
     9cc:	b3 94       	inc	r11
     9ce:	09 c0       	rjmp	.+18     	; 0x9e2 <gpsReqDateUblox+0x19a>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     9d6:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     9da:	88 e3       	ldi	r24, 0x38	; 56
     9dc:	e5 3d       	cpi	r30, 0xD5	; 213
     9de:	f8 07       	cpc	r31, r24
     9e0:	18 f2       	brcs	.-122    	; 0x968 <gpsReqDateUblox+0x120>
     9e2:	01 50       	subi	r16, 0x01	; 1
     9e4:	09 f0       	breq	.+2      	; 0x9e8 <gpsReqDateUblox+0x1a0>
     9e6:	53 cf       	rjmp	.-346    	; 0x88e <gpsReqDateUblox+0x46>
     9e8:	1f 89       	ldd	r17, Y+23	; 0x17
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	9e 89       	ldd	r25, Y+22	; 0x16
     9ee:	91 13       	cpse	r25, r17
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	9d 89       	ldd	r25, Y+21	; 0x15
     9f4:	19 13       	cpse	r17, r25
     9f6:	01 c0       	rjmp	.+2      	; 0x9fa <gpsReqDateUblox+0x1b2>
     9f8:	8f 5f       	subi	r24, 0xFF	; 255
     9fa:	9c 89       	ldd	r25, Y+20	; 0x14
     9fc:	19 13       	cpse	r17, r25
     9fe:	01 c0       	rjmp	.+2      	; 0xa02 <gpsReqDateUblox+0x1ba>
     a00:	8f 5f       	subi	r24, 0xFF	; 255
     a02:	83 30       	cpi	r24, 0x03	; 3
     a04:	08 f4       	brcc	.+2      	; 0xa08 <gpsReqDateUblox+0x1c0>
     a06:	5f c0       	rjmp	.+190    	; 0xac6 <gpsReqDateUblox+0x27e>
     a08:	0b 89       	ldd	r16, Y+19	; 0x13
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	9a 89       	ldd	r25, Y+18	; 0x12
     a0e:	90 13       	cpse	r25, r16
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	99 89       	ldd	r25, Y+17	; 0x11
     a14:	09 13       	cpse	r16, r25
     a16:	01 c0       	rjmp	.+2      	; 0xa1a <gpsReqDateUblox+0x1d2>
     a18:	8f 5f       	subi	r24, 0xFF	; 255
     a1a:	98 89       	ldd	r25, Y+16	; 0x10
     a1c:	09 13       	cpse	r16, r25
     a1e:	01 c0       	rjmp	.+2      	; 0xa22 <gpsReqDateUblox+0x1da>
     a20:	8f 5f       	subi	r24, 0xFF	; 255
     a22:	83 30       	cpi	r24, 0x03	; 3
     a24:	08 f4       	brcc	.+2      	; 0xa28 <gpsReqDateUblox+0x1e0>
     a26:	52 c0       	rjmp	.+164    	; 0xacc <gpsReqDateUblox+0x284>
     a28:	fb 8c       	ldd	r15, Y+27	; 0x1b
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     a2e:	9f 11       	cpse	r25, r15
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	99 8d       	ldd	r25, Y+25	; 0x19
     a34:	f9 12       	cpse	r15, r25
     a36:	01 c0       	rjmp	.+2      	; 0xa3a <gpsReqDateUblox+0x1f2>
     a38:	8f 5f       	subi	r24, 0xFF	; 255
     a3a:	98 8d       	ldd	r25, Y+24	; 0x18
     a3c:	f9 12       	cpse	r15, r25
     a3e:	01 c0       	rjmp	.+2      	; 0xa42 <gpsReqDateUblox+0x1fa>
     a40:	8f 5f       	subi	r24, 0xFF	; 255
     a42:	83 30       	cpi	r24, 0x03	; 3
     a44:	08 f4       	brcc	.+2      	; 0xa48 <gpsReqDateUblox+0x200>
     a46:	45 c0       	rjmp	.+138    	; 0xad2 <gpsReqDateUblox+0x28a>
     a48:	ef 8c       	ldd	r14, Y+31	; 0x1f
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     a4e:	9e 11       	cpse	r25, r14
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	9d 8d       	ldd	r25, Y+29	; 0x1d
     a54:	e9 12       	cpse	r14, r25
     a56:	01 c0       	rjmp	.+2      	; 0xa5a <gpsReqDateUblox+0x212>
     a58:	8f 5f       	subi	r24, 0xFF	; 255
     a5a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a5c:	e9 12       	cpse	r14, r25
     a5e:	01 c0       	rjmp	.+2      	; 0xa62 <gpsReqDateUblox+0x21a>
     a60:	8f 5f       	subi	r24, 0xFF	; 255
     a62:	83 30       	cpi	r24, 0x03	; 3
     a64:	c8 f1       	brcs	.+114    	; 0xad8 <gpsReqDateUblox+0x290>
     a66:	20 91 1d 39 	lds	r18, 0x391D	; 0x80391d <gpsParams+0x10>
     a6a:	ed e0       	ldi	r30, 0x0D	; 13
     a6c:	f9 e3       	ldi	r31, 0x39	; 57
     a6e:	85 e4       	ldi	r24, 0x45	; 69
     a70:	99 e3       	ldi	r25, 0x39	; 57
     a72:	11 92       	st	Z+, r1
     a74:	e8 17       	cp	r30, r24
     a76:	f9 07       	cpc	r31, r25
     a78:	e1 f7       	brne	.-8      	; 0xa72 <gpsReqDateUblox+0x22a>
     a7a:	20 93 1d 39 	sts	0x391D, r18	; 0x80391d <gpsParams+0x10>
     a7e:	9c e2       	ldi	r25, 0x2C	; 44
     a80:	f9 16       	cp	r15, r25
     a82:	69 f1       	breq	.+90     	; 0xade <gpsReqDateUblox+0x296>
     a84:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     a88:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     a8c:	62 85       	ldd	r22, Z+10	; 0x0a
     a8e:	80 e3       	ldi	r24, 0x30	; 48
     a90:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     a94:	d8 2e       	mov	r13, r24
     a96:	61 2f       	mov	r22, r17
     a98:	80 2f       	mov	r24, r16
     a9a:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     a9e:	0d e0       	ldi	r16, 0x0D	; 13
     aa0:	19 e3       	ldi	r17, 0x39	; 57
     aa2:	e0 e1       	ldi	r30, 0x10	; 16
     aa4:	de 9e       	mul	r13, r30
     aa6:	80 0d       	add	r24, r0
     aa8:	11 24       	eor	r1, r1
     aaa:	f8 01       	movw	r30, r16
     aac:	80 83       	st	Z, r24
     aae:	6f 2d       	mov	r22, r15
     ab0:	8e 2d       	mov	r24, r14
     ab2:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     ab6:	88 0f       	add	r24, r24
     ab8:	88 0f       	add	r24, r24
     aba:	88 0f       	add	r24, r24
     abc:	f8 01       	movw	r30, r16
     abe:	81 83       	std	Z+1, r24	; 0x01
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	16 c0       	rjmp	.+44     	; 0xaf2 <gpsReqDateUblox+0x2aa>
     ac6:	8a e9       	ldi	r24, 0x9A	; 154
     ac8:	92 e0       	ldi	r25, 0x02	; 2
     aca:	13 c0       	rjmp	.+38     	; 0xaf2 <gpsReqDateUblox+0x2aa>
     acc:	8a e9       	ldi	r24, 0x9A	; 154
     ace:	92 e0       	ldi	r25, 0x02	; 2
     ad0:	10 c0       	rjmp	.+32     	; 0xaf2 <gpsReqDateUblox+0x2aa>
     ad2:	8a e9       	ldi	r24, 0x9A	; 154
     ad4:	92 e0       	ldi	r25, 0x02	; 2
     ad6:	0d c0       	rjmp	.+26     	; 0xaf2 <gpsReqDateUblox+0x2aa>
     ad8:	8a e9       	ldi	r24, 0x9A	; 154
     ada:	92 e0       	ldi	r25, 0x02	; 2
     adc:	0a c0       	rjmp	.+20     	; 0xaf2 <gpsReqDateUblox+0x2aa>
     ade:	8a e9       	ldi	r24, 0x9A	; 154
     ae0:	92 e0       	ldi	r25, 0x02	; 2
     ae2:	07 c0       	rjmp	.+14     	; 0xaf2 <gpsReqDateUblox+0x2aa>
     ae4:	64 e6       	ldi	r22, 0x64	; 100
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     af0:	e8 ce       	rjmp	.-560    	; 0x8c2 <gpsReqDateUblox+0x7a>
     af2:	6f 96       	adiw	r28, 0x1f	; 31
     af4:	cd bf       	out	0x3d, r28	; 61
     af6:	de bf       	out	0x3e, r29	; 62
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	1f 91       	pop	r17
     afe:	0f 91       	pop	r16
     b00:	ff 90       	pop	r15
     b02:	ef 90       	pop	r14
     b04:	df 90       	pop	r13
     b06:	cf 90       	pop	r12
     b08:	bf 90       	pop	r11
     b0a:	08 95       	ret

00000b0c <GPSgetDate>:
     b0c:	0e 94 24 04 	call	0x848	; 0x848 <gpsReqDateUblox>
     b10:	00 97       	sbiw	r24, 0x00	; 0
     b12:	39 f4       	brne	.+14     	; 0xb22 <GPSgetDate+0x16>
     b14:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     b18:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     b1c:	22 85       	ldd	r18, Z+10	; 0x0a
     b1e:	28 35       	cpi	r18, 0x58	; 88
     b20:	39 f5       	brne	.+78     	; 0xb70 <GPSgetDate+0x64>
     b22:	0e 94 24 04 	call	0x848	; 0x848 <gpsReqDateUblox>
     b26:	00 97       	sbiw	r24, 0x00	; 0
     b28:	39 f4       	brne	.+14     	; 0xb38 <GPSgetDate+0x2c>
     b2a:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     b2e:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     b32:	22 85       	ldd	r18, Z+10	; 0x0a
     b34:	28 35       	cpi	r18, 0x58	; 88
     b36:	e1 f4       	brne	.+56     	; 0xb70 <GPSgetDate+0x64>
     b38:	0e 94 24 04 	call	0x848	; 0x848 <gpsReqDateUblox>
     b3c:	00 97       	sbiw	r24, 0x00	; 0
     b3e:	39 f4       	brne	.+14     	; 0xb4e <GPSgetDate+0x42>
     b40:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     b44:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     b48:	22 85       	ldd	r18, Z+10	; 0x0a
     b4a:	28 35       	cpi	r18, 0x58	; 88
     b4c:	89 f4       	brne	.+34     	; 0xb70 <GPSgetDate+0x64>
     b4e:	0e 94 24 04 	call	0x848	; 0x848 <gpsReqDateUblox>
     b52:	00 97       	sbiw	r24, 0x00	; 0
     b54:	41 f4       	brne	.+16     	; 0xb66 <GPSgetDate+0x5a>
     b56:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     b5a:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     b5e:	22 85       	ldd	r18, Z+10	; 0x0a
     b60:	28 35       	cpi	r18, 0x58	; 88
     b62:	31 f4       	brne	.+12     	; 0xb70 <GPSgetDate+0x64>
     b64:	03 c0       	rjmp	.+6      	; 0xb6c <GPSgetDate+0x60>
     b66:	8a e9       	ldi	r24, 0x9A	; 154
     b68:	92 e0       	ldi	r25, 0x02	; 2
     b6a:	08 95       	ret
     b6c:	8a e9       	ldi	r24, 0x9A	; 154
     b6e:	92 e0       	ldi	r25, 0x02	; 2
     b70:	08 95       	ret

00000b72 <gpsReqStatusUblox>:
     b72:	cf 92       	push	r12
     b74:	df 92       	push	r13
     b76:	ef 92       	push	r14
     b78:	ff 92       	push	r15
     b7a:	0f 93       	push	r16
     b7c:	1f 93       	push	r17
     b7e:	cf 93       	push	r28
     b80:	df 93       	push	r29
     b82:	10 92 52 39 	sts	0x3952, r1	; 0x803952 <uBloxStatus>
     b86:	68 94       	set
     b88:	cc 24       	eor	r12, r12
     b8a:	c2 f8       	bld	r12, 2
     b8c:	d1 2c       	mov	r13, r1
     b8e:	e1 2c       	mov	r14, r1
     b90:	68 94       	set
     b92:	ff 24       	eor	r15, r15
     b94:	f3 f8       	bld	r15, 3
     b96:	06 ed       	ldi	r16, 0xD6	; 214
     b98:	18 e3       	ldi	r17, 0x38	; 56
     b9a:	a8 95       	wdr
     b9c:	0e 94 09 04 	call	0x812	; 0x812 <clrRx>
     ba0:	e7 01       	movw	r28, r14
     ba2:	8d 81       	ldd	r24, Y+5	; 0x05
     ba4:	80 68       	ori	r24, 0x80	; 128
     ba6:	8d 83       	std	Y+5, r24	; 0x05
     ba8:	10 92 47 39 	sts	0x3947, r1	; 0x803947 <endOfLineFlag>
     bac:	78 94       	sei
     bae:	80 91 47 39 	lds	r24, 0x3947	; 0x803947 <endOfLineFlag>
     bb2:	81 11       	cpse	r24, r1
     bb4:	0a c0       	rjmp	.+20     	; 0xbca <gpsReqStatusUblox+0x58>
     bb6:	64 e6       	ldi	r22, 0x64	; 100
     bb8:	70 e0       	ldi	r23, 0x00	; 0
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     bc2:	cf e0       	ldi	r28, 0x0F	; 15
     bc4:	c1 50       	subi	r28, 0x01	; 1
     bc6:	09 f0       	breq	.+2      	; 0xbca <gpsReqStatusUblox+0x58>
     bc8:	83 c0       	rjmp	.+262    	; 0xcd0 <gpsReqStatusUblox+0x15e>
     bca:	80 91 45 39 	lds	r24, 0x3945	; 0x803945 <timeToFix>
     bce:	90 91 46 39 	lds	r25, 0x3946	; 0x803946 <timeToFix+0x1>
     bd2:	01 96       	adiw	r24, 0x01	; 1
     bd4:	80 93 45 39 	sts	0x3945, r24	; 0x803945 <timeToFix>
     bd8:	90 93 46 39 	sts	0x3946, r25	; 0x803946 <timeToFix+0x1>
     bdc:	81 3d       	cpi	r24, 0xD1	; 209
     bde:	d2 e0       	ldi	r29, 0x02	; 2
     be0:	9d 07       	cpc	r25, r29
     be2:	24 f0       	brlt	.+8      	; 0xbec <gpsReqStatusUblox+0x7a>
     be4:	20 91 4e 39 	lds	r18, 0x394E	; 0x80394e <mState>
     be8:	21 30       	cpi	r18, 0x01	; 1
     bea:	19 f4       	brne	.+6      	; 0xbf2 <gpsReqStatusUblox+0x80>
     bec:	8d 3a       	cpi	r24, 0xAD	; 173
     bee:	93 40       	sbci	r25, 0x03	; 3
     bf0:	34 f0       	brlt	.+12     	; 0xbfe <gpsReqStatusUblox+0x8c>
     bf2:	8a e9       	ldi	r24, 0x9A	; 154
     bf4:	80 93 52 39 	sts	0x3952, r24	; 0x803952 <uBloxStatus>
     bf8:	8a e9       	ldi	r24, 0x9A	; 154
     bfa:	92 e0       	ldi	r25, 0x02	; 2
     bfc:	70 c0       	rjmp	.+224    	; 0xcde <gpsReqStatusUblox+0x16c>
     bfe:	e7 01       	movw	r28, r14
     c00:	8d 81       	ldd	r24, Y+5	; 0x05
     c02:	8f 77       	andi	r24, 0x7F	; 127
     c04:	8d 83       	std	Y+5, r24	; 0x05
     c06:	43 e4       	ldi	r20, 0x43	; 67
     c08:	6d e4       	ldi	r22, 0x4D	; 77
     c0a:	82 e5       	ldi	r24, 0x52	; 82
     c0c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <searchRcvBuffuBlox>
     c10:	89 2b       	or	r24, r25
     c12:	09 f0       	breq	.+2      	; 0xc16 <gpsReqStatusUblox+0xa4>
     c14:	44 c0       	rjmp	.+136    	; 0xc9e <gpsReqStatusUblox+0x12c>
     c16:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     c1a:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     c1e:	df 01       	movw	r26, r30
     c20:	12 97       	sbiw	r26, 0x02	; 2
     c22:	d8 e3       	ldi	r29, 0x38	; 56
     c24:	a5 3d       	cpi	r26, 0xD5	; 213
     c26:	bd 07       	cpc	r27, r29
     c28:	09 f0       	breq	.+2      	; 0xc2c <gpsReqStatusUblox+0xba>
     c2a:	78 f4       	brcc	.+30     	; 0xc4a <gpsReqStatusUblox+0xd8>
     c2c:	ed 01       	movw	r28, r26
     c2e:	88 81       	ld	r24, Y
     c30:	8a 32       	cpi	r24, 0x2A	; 42
     c32:	69 f0       	breq	.+26     	; 0xc4e <gpsReqStatusUblox+0xdc>
     c34:	31 97       	sbiw	r30, 0x01	; 1
     c36:	c0 e0       	ldi	r28, 0x00	; 0
     c38:	df 01       	movw	r26, r30
     c3a:	c8 27       	eor	r28, r24
     c3c:	e0 17       	cp	r30, r16
     c3e:	f1 07       	cpc	r31, r17
     c40:	39 f0       	breq	.+14     	; 0xc50 <gpsReqStatusUblox+0xde>
     c42:	81 91       	ld	r24, Z+
     c44:	8a 32       	cpi	r24, 0x2A	; 42
     c46:	c1 f7       	brne	.-16     	; 0xc38 <gpsReqStatusUblox+0xc6>
     c48:	03 c0       	rjmp	.+6      	; 0xc50 <gpsReqStatusUblox+0xde>
     c4a:	c0 e0       	ldi	r28, 0x00	; 0
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <gpsReqStatusUblox+0xde>
     c4e:	c0 e0       	ldi	r28, 0x00	; 0
     c50:	12 96       	adiw	r26, 0x02	; 2
     c52:	6c 91       	ld	r22, X
     c54:	12 97       	sbiw	r26, 0x02	; 2
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	8c 91       	ld	r24, X
     c5a:	0e 94 d6 01 	call	0x3ac	; 0x3ac <asciiHexToHex>
     c5e:	2c 2f       	mov	r18, r28
     c60:	30 e0       	ldi	r19, 0x00	; 0
     c62:	28 17       	cp	r18, r24
     c64:	39 07       	cpc	r19, r25
     c66:	d9 f4       	brne	.+54     	; 0xc9e <gpsReqStatusUblox+0x12c>
     c68:	11 c0       	rjmp	.+34     	; 0xc8c <gpsReqStatusUblox+0x11a>
     c6a:	cf 01       	movw	r24, r30
     c6c:	01 96       	adiw	r24, 0x01	; 1
     c6e:	80 93 53 39 	sts	0x3953, r24	; 0x803953 <GPSSearchPtr>
     c72:	90 93 54 39 	sts	0x3954, r25	; 0x803954 <GPSSearchPtr+0x1>
     c76:	81 81       	ldd	r24, Z+1	; 0x01
     c78:	8c 32       	cpi	r24, 0x2C	; 44
     c7a:	49 f4       	brne	.+18     	; 0xc8e <gpsReqStatusUblox+0x11c>
     c7c:	2f 5f       	subi	r18, 0xFF	; 255
     c7e:	22 30       	cpi	r18, 0x02	; 2
     c80:	31 f4       	brne	.+12     	; 0xc8e <gpsReqStatusUblox+0x11c>
     c82:	82 81       	ldd	r24, Z+2	; 0x02
     c84:	81 34       	cpi	r24, 0x41	; 65
     c86:	59 f4       	brne	.+22     	; 0xc9e <gpsReqStatusUblox+0x12c>
     c88:	d3 94       	inc	r13
     c8a:	09 c0       	rjmp	.+18     	; 0xc9e <gpsReqStatusUblox+0x12c>
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     c92:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     c96:	d8 e3       	ldi	r29, 0x38	; 56
     c98:	e5 3d       	cpi	r30, 0xD5	; 213
     c9a:	fd 07       	cpc	r31, r29
     c9c:	30 f3       	brcs	.-52     	; 0xc6a <gpsReqStatusUblox+0xf8>
     c9e:	ca 94       	dec	r12
     ca0:	c1 10       	cpse	r12, r1
     ca2:	7b cf       	rjmp	.-266    	; 0xb9a <gpsReqStatusUblox+0x28>
     ca4:	e1 e0       	ldi	r30, 0x01	; 1
     ca6:	ed 15       	cp	r30, r13
     ca8:	68 f4       	brcc	.+26     	; 0xcc4 <gpsReqStatusUblox+0x152>
     caa:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     cae:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     cb2:	81 81       	ldd	r24, Z+1	; 0x01
     cb4:	81 34       	cpi	r24, 0x41	; 65
     cb6:	31 f4       	brne	.+12     	; 0xcc4 <gpsReqStatusUblox+0x152>
     cb8:	89 e2       	ldi	r24, 0x29	; 41
     cba:	80 93 52 39 	sts	0x3952, r24	; 0x803952 <uBloxStatus>
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	0d c0       	rjmp	.+26     	; 0xcde <gpsReqStatusUblox+0x16c>
     cc4:	8a e9       	ldi	r24, 0x9A	; 154
     cc6:	80 93 52 39 	sts	0x3952, r24	; 0x803952 <uBloxStatus>
     cca:	8a e9       	ldi	r24, 0x9A	; 154
     ccc:	92 e0       	ldi	r25, 0x02	; 2
     cce:	07 c0       	rjmp	.+14     	; 0xcde <gpsReqStatusUblox+0x16c>
     cd0:	64 e6       	ldi	r22, 0x64	; 100
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     cdc:	73 cf       	rjmp	.-282    	; 0xbc4 <gpsReqStatusUblox+0x52>
     cde:	df 91       	pop	r29
     ce0:	cf 91       	pop	r28
     ce2:	1f 91       	pop	r17
     ce4:	0f 91       	pop	r16
     ce6:	ff 90       	pop	r15
     ce8:	ef 90       	pop	r14
     cea:	df 90       	pop	r13
     cec:	cf 90       	pop	r12
     cee:	08 95       	ret

00000cf0 <gpsReqLocUblox>:
     cf0:	7f 92       	push	r7
     cf2:	8f 92       	push	r8
     cf4:	9f 92       	push	r9
     cf6:	af 92       	push	r10
     cf8:	bf 92       	push	r11
     cfa:	cf 92       	push	r12
     cfc:	df 92       	push	r13
     cfe:	ef 92       	push	r14
     d00:	ff 92       	push	r15
     d02:	0f 93       	push	r16
     d04:	1f 93       	push	r17
     d06:	cf 93       	push	r28
     d08:	df 93       	push	r29
     d0a:	cd b7       	in	r28, 0x3d	; 61
     d0c:	de b7       	in	r29, 0x3e	; 62
     d0e:	af 97       	sbiw	r28, 0x2f	; 47
     d10:	cd bf       	out	0x3d, r28	; 61
     d12:	de bf       	out	0x3e, r29	; 62
     d14:	8f e0       	ldi	r24, 0x0F	; 15
     d16:	ee e1       	ldi	r30, 0x1E	; 30
     d18:	f3 ea       	ldi	r31, 0xA3	; 163
     d1a:	de 01       	movw	r26, r28
     d1c:	11 96       	adiw	r26, 0x01	; 1
     d1e:	01 90       	ld	r0, Z+
     d20:	0d 92       	st	X+, r0
     d22:	8a 95       	dec	r24
     d24:	e1 f7       	brne	.-8      	; 0xd1e <gpsReqLocUblox+0x2e>
     d26:	21 e0       	ldi	r18, 0x01	; 1
     d28:	2f 8f       	std	Y+31, r18	; 0x1f
     d2a:	92 e0       	ldi	r25, 0x02	; 2
     d2c:	9a 8f       	std	Y+26, r25	; 0x1a
     d2e:	83 e0       	ldi	r24, 0x03	; 3
     d30:	89 8f       	std	Y+25, r24	; 0x19
     d32:	2f 8b       	std	Y+23, r18	; 0x17
     d34:	9a 8b       	std	Y+18, r25	; 0x12
     d36:	89 8b       	std	Y+17, r24	; 0x11
     d38:	2f a3       	std	Y+39, r18	; 0x27
     d3a:	9a a3       	std	Y+34, r25	; 0x22
     d3c:	89 a3       	std	Y+33, r24	; 0x21
     d3e:	68 94       	set
     d40:	bb 24       	eor	r11, r11
     d42:	b3 f8       	bld	r11, 3
     d44:	a1 2c       	mov	r10, r1
     d46:	c1 2c       	mov	r12, r1
     d48:	68 94       	set
     d4a:	dd 24       	eor	r13, r13
     d4c:	d3 f8       	bld	r13, 3
     d4e:	0f 2e       	mov	r0, r31
     d50:	f6 ed       	ldi	r31, 0xD6	; 214
     d52:	ef 2e       	mov	r14, r31
     d54:	f8 e3       	ldi	r31, 0x38	; 56
     d56:	ff 2e       	mov	r15, r31
     d58:	f0 2d       	mov	r31, r0
     d5a:	a8 95       	wdr
     d5c:	6f e0       	ldi	r22, 0x0F	; 15
     d5e:	ce 01       	movw	r24, r28
     d60:	01 96       	adiw	r24, 0x01	; 1
     d62:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
     d66:	0e 94 09 04 	call	0x812	; 0x812 <clrRx>
     d6a:	d6 01       	movw	r26, r12
     d6c:	15 96       	adiw	r26, 0x05	; 5
     d6e:	8c 91       	ld	r24, X
     d70:	15 97       	sbiw	r26, 0x05	; 5
     d72:	80 68       	ori	r24, 0x80	; 128
     d74:	15 96       	adiw	r26, 0x05	; 5
     d76:	8c 93       	st	X, r24
     d78:	10 92 47 39 	sts	0x3947, r1	; 0x803947 <endOfLineFlag>
     d7c:	78 94       	sei
     d7e:	80 91 47 39 	lds	r24, 0x3947	; 0x803947 <endOfLineFlag>
     d82:	81 11       	cpse	r24, r1
     d84:	0a c0       	rjmp	.+20     	; 0xd9a <gpsReqLocUblox+0xaa>
     d86:	64 e6       	ldi	r22, 0x64	; 100
     d88:	70 e0       	ldi	r23, 0x00	; 0
     d8a:	80 e0       	ldi	r24, 0x00	; 0
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
     d92:	1f e0       	ldi	r17, 0x0F	; 15
     d94:	11 50       	subi	r17, 0x01	; 1
     d96:	09 f0       	breq	.+2      	; 0xd9a <gpsReqLocUblox+0xaa>
     d98:	e9 c1       	rjmp	.+978    	; 0x116c <gpsReqLocUblox+0x47c>
     d9a:	00 91 45 39 	lds	r16, 0x3945	; 0x803945 <timeToFix>
     d9e:	10 91 46 39 	lds	r17, 0x3946	; 0x803946 <timeToFix+0x1>
     da2:	01 3d       	cpi	r16, 0xD1	; 209
     da4:	b2 e0       	ldi	r27, 0x02	; 2
     da6:	1b 07       	cpc	r17, r27
     da8:	24 f0       	brlt	.+8      	; 0xdb2 <gpsReqLocUblox+0xc2>
     daa:	80 91 4e 39 	lds	r24, 0x394E	; 0x80394e <mState>
     dae:	81 30       	cpi	r24, 0x01	; 1
     db0:	21 f4       	brne	.+8      	; 0xdba <gpsReqLocUblox+0xca>
     db2:	0d 3a       	cpi	r16, 0xAD	; 173
     db4:	e3 e0       	ldi	r30, 0x03	; 3
     db6:	1e 07       	cpc	r17, r30
     db8:	34 f0       	brlt	.+12     	; 0xdc6 <gpsReqLocUblox+0xd6>
     dba:	8a e9       	ldi	r24, 0x9A	; 154
     dbc:	80 93 52 39 	sts	0x3952, r24	; 0x803952 <uBloxStatus>
     dc0:	8a e9       	ldi	r24, 0x9A	; 154
     dc2:	92 e0       	ldi	r25, 0x02	; 2
     dc4:	da c1       	rjmp	.+948    	; 0x117a <gpsReqLocUblox+0x48a>
     dc6:	0f 5f       	subi	r16, 0xFF	; 255
     dc8:	1f 4f       	sbci	r17, 0xFF	; 255
     dca:	91 2e       	mov	r9, r17
     dcc:	00 93 45 39 	sts	0x3945, r16	; 0x803945 <timeToFix>
     dd0:	10 93 46 39 	sts	0x3946, r17	; 0x803946 <timeToFix+0x1>
     dd4:	d6 01       	movw	r26, r12
     dd6:	15 96       	adiw	r26, 0x05	; 5
     dd8:	8c 91       	ld	r24, X
     dda:	15 97       	sbiw	r26, 0x05	; 5
     ddc:	8f 77       	andi	r24, 0x7F	; 127
     dde:	15 96       	adiw	r26, 0x05	; 5
     de0:	8c 93       	st	X, r24
     de2:	43 e5       	ldi	r20, 0x53	; 83
     de4:	6e e4       	ldi	r22, 0x4E	; 78
     de6:	87 e4       	ldi	r24, 0x47	; 71
     de8:	0e 94 63 01 	call	0x2c6	; 0x2c6 <searchRcvBuffuBlox>
     dec:	89 2b       	or	r24, r25
     dee:	09 f0       	breq	.+2      	; 0xdf2 <gpsReqLocUblox+0x102>
     df0:	7b c0       	rjmp	.+246    	; 0xee8 <gpsReqLocUblox+0x1f8>
     df2:	20 91 53 39 	lds	r18, 0x3953	; 0x803953 <GPSSearchPtr>
     df6:	30 91 54 39 	lds	r19, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     dfa:	d9 01       	movw	r26, r18
     dfc:	12 97       	sbiw	r26, 0x02	; 2
     dfe:	e8 e3       	ldi	r30, 0x38	; 56
     e00:	a5 3d       	cpi	r26, 0xD5	; 213
     e02:	be 07       	cpc	r27, r30
     e04:	09 f0       	breq	.+2      	; 0xe08 <gpsReqLocUblox+0x118>
     e06:	78 f4       	brcc	.+30     	; 0xe26 <gpsReqLocUblox+0x136>
     e08:	fd 01       	movw	r30, r26
     e0a:	80 81       	ld	r24, Z
     e0c:	8a 32       	cpi	r24, 0x2A	; 42
     e0e:	69 f0       	breq	.+26     	; 0xe2a <gpsReqLocUblox+0x13a>
     e10:	31 96       	adiw	r30, 0x01	; 1
     e12:	81 2c       	mov	r8, r1
     e14:	df 01       	movw	r26, r30
     e16:	88 26       	eor	r8, r24
     e18:	ee 15       	cp	r30, r14
     e1a:	ff 05       	cpc	r31, r15
     e1c:	39 f0       	breq	.+14     	; 0xe2c <gpsReqLocUblox+0x13c>
     e1e:	81 91       	ld	r24, Z+
     e20:	8a 32       	cpi	r24, 0x2A	; 42
     e22:	c1 f7       	brne	.-16     	; 0xe14 <gpsReqLocUblox+0x124>
     e24:	03 c0       	rjmp	.+6      	; 0xe2c <gpsReqLocUblox+0x13c>
     e26:	81 2c       	mov	r8, r1
     e28:	01 c0       	rjmp	.+2      	; 0xe2c <gpsReqLocUblox+0x13c>
     e2a:	81 2c       	mov	r8, r1
     e2c:	12 96       	adiw	r26, 0x02	; 2
     e2e:	6c 91       	ld	r22, X
     e30:	12 97       	sbiw	r26, 0x02	; 2
     e32:	11 96       	adiw	r26, 0x01	; 1
     e34:	8c 91       	ld	r24, X
     e36:	0e 94 d6 01 	call	0x3ac	; 0x3ac <asciiHexToHex>
     e3a:	28 2d       	mov	r18, r8
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	28 17       	cp	r18, r24
     e40:	39 07       	cpc	r19, r25
     e42:	09 f0       	breq	.+2      	; 0xe46 <gpsReqLocUblox+0x156>
     e44:	51 c0       	rjmp	.+162    	; 0xee8 <gpsReqLocUblox+0x1f8>
     e46:	46 c0       	rjmp	.+140    	; 0xed4 <gpsReqLocUblox+0x1e4>
     e48:	cf 01       	movw	r24, r30
     e4a:	01 96       	adiw	r24, 0x01	; 1
     e4c:	80 93 53 39 	sts	0x3953, r24	; 0x803953 <GPSSearchPtr>
     e50:	90 93 54 39 	sts	0x3954, r25	; 0x803954 <GPSSearchPtr+0x1>
     e54:	81 81       	ldd	r24, Z+1	; 0x01
     e56:	8c 32       	cpi	r24, 0x2C	; 44
     e58:	f1 f5       	brne	.+124    	; 0xed6 <gpsReqLocUblox+0x1e6>
     e5a:	2f 5f       	subi	r18, 0xFF	; 255
     e5c:	22 30       	cpi	r18, 0x02	; 2
     e5e:	d9 f5       	brne	.+118    	; 0xed6 <gpsReqLocUblox+0x1e6>
     e60:	82 81       	ldd	r24, Z+2	; 0x02
     e62:	8c 32       	cpi	r24, 0x2C	; 44
     e64:	09 f4       	brne	.+2      	; 0xe68 <gpsReqLocUblox+0x178>
     e66:	40 c0       	rjmp	.+128    	; 0xee8 <gpsReqLocUblox+0x1f8>
     e68:	88 35       	cpi	r24, 0x58	; 88
     e6a:	f1 f1       	breq	.+124    	; 0xee8 <gpsReqLocUblox+0x1f8>
     e6c:	8a 2d       	mov	r24, r10
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	48 e1       	ldi	r20, 0x18	; 24
     e72:	50 e0       	ldi	r21, 0x00	; 0
     e74:	4c 0f       	add	r20, r28
     e76:	5d 1f       	adc	r21, r29
     e78:	48 0f       	add	r20, r24
     e7a:	59 1f       	adc	r21, r25
     e7c:	9f 01       	movw	r18, r30
     e7e:	27 50       	subi	r18, 0x07	; 7
     e80:	31 09       	sbc	r19, r1
     e82:	d9 01       	movw	r26, r18
     e84:	2c 91       	ld	r18, X
     e86:	da 01       	movw	r26, r20
     e88:	2c 93       	st	X, r18
     e8a:	40 e1       	ldi	r20, 0x10	; 16
     e8c:	50 e0       	ldi	r21, 0x00	; 0
     e8e:	4c 0f       	add	r20, r28
     e90:	5d 1f       	adc	r21, r29
     e92:	48 0f       	add	r20, r24
     e94:	59 1f       	adc	r21, r25
     e96:	9f 01       	movw	r18, r30
     e98:	28 50       	subi	r18, 0x08	; 8
     e9a:	31 09       	sbc	r19, r1
     e9c:	d9 01       	movw	r26, r18
     e9e:	2c 91       	ld	r18, X
     ea0:	da 01       	movw	r26, r20
     ea2:	2c 93       	st	X, r18
     ea4:	40 e2       	ldi	r20, 0x20	; 32
     ea6:	50 e0       	ldi	r21, 0x00	; 0
     ea8:	4c 0f       	add	r20, r28
     eaa:	5d 1f       	adc	r21, r29
     eac:	48 0f       	add	r20, r24
     eae:	59 1f       	adc	r21, r25
     eb0:	9f 01       	movw	r18, r30
     eb2:	25 50       	subi	r18, 0x05	; 5
     eb4:	31 09       	sbc	r19, r1
     eb6:	d9 01       	movw	r26, r18
     eb8:	2c 91       	ld	r18, X
     eba:	da 01       	movw	r26, r20
     ebc:	2c 93       	st	X, r18
     ebe:	a8 e2       	ldi	r26, 0x28	; 40
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	ac 0f       	add	r26, r28
     ec4:	bd 1f       	adc	r27, r29
     ec6:	a8 0f       	add	r26, r24
     ec8:	b9 1f       	adc	r27, r25
     eca:	36 97       	sbiw	r30, 0x06	; 6
     ecc:	20 81       	ld	r18, Z
     ece:	2c 93       	st	X, r18
     ed0:	a3 94       	inc	r10
     ed2:	0a c0       	rjmp	.+20     	; 0xee8 <gpsReqLocUblox+0x1f8>
     ed4:	20 e0       	ldi	r18, 0x00	; 0
     ed6:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
     eda:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
     ede:	b8 e3       	ldi	r27, 0x38	; 56
     ee0:	e5 3d       	cpi	r30, 0xD5	; 213
     ee2:	fb 07       	cpc	r31, r27
     ee4:	08 f4       	brcc	.+2      	; 0xee8 <gpsReqLocUblox+0x1f8>
     ee6:	b0 cf       	rjmp	.-160    	; 0xe48 <gpsReqLocUblox+0x158>
     ee8:	ba 94       	dec	r11
     eea:	b1 10       	cpse	r11, r1
     eec:	36 cf       	rjmp	.-404    	; 0xd5a <gpsReqLocUblox+0x6a>
     eee:	6f 8d       	ldd	r22, Y+31	; 0x1f
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ef4:	96 13       	cpse	r25, r22
     ef6:	80 e0       	ldi	r24, 0x00	; 0
     ef8:	9d 8d       	ldd	r25, Y+29	; 0x1d
     efa:	69 13       	cpse	r22, r25
     efc:	01 c0       	rjmp	.+2      	; 0xf00 <gpsReqLocUblox+0x210>
     efe:	8f 5f       	subi	r24, 0xFF	; 255
     f00:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f02:	69 13       	cpse	r22, r25
     f04:	01 c0       	rjmp	.+2      	; 0xf08 <gpsReqLocUblox+0x218>
     f06:	8f 5f       	subi	r24, 0xFF	; 255
     f08:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f0a:	69 13       	cpse	r22, r25
     f0c:	01 c0       	rjmp	.+2      	; 0xf10 <gpsReqLocUblox+0x220>
     f0e:	8f 5f       	subi	r24, 0xFF	; 255
     f10:	9a 8d       	ldd	r25, Y+26	; 0x1a
     f12:	69 13       	cpse	r22, r25
     f14:	01 c0       	rjmp	.+2      	; 0xf18 <gpsReqLocUblox+0x228>
     f16:	8f 5f       	subi	r24, 0xFF	; 255
     f18:	99 8d       	ldd	r25, Y+25	; 0x19
     f1a:	69 13       	cpse	r22, r25
     f1c:	01 c0       	rjmp	.+2      	; 0xf20 <gpsReqLocUblox+0x230>
     f1e:	8f 5f       	subi	r24, 0xFF	; 255
     f20:	98 8d       	ldd	r25, Y+24	; 0x18
     f22:	69 13       	cpse	r22, r25
     f24:	01 c0       	rjmp	.+2      	; 0xf28 <gpsReqLocUblox+0x238>
     f26:	8f 5f       	subi	r24, 0xFF	; 255
     f28:	86 30       	cpi	r24, 0x06	; 6
     f2a:	08 f4       	brcc	.+2      	; 0xf2e <gpsReqLocUblox+0x23e>
     f2c:	10 c1       	rjmp	.+544    	; 0x114e <gpsReqLocUblox+0x45e>
     f2e:	8f 89       	ldd	r24, Y+23	; 0x17
     f30:	91 e0       	ldi	r25, 0x01	; 1
     f32:	2e 89       	ldd	r18, Y+22	; 0x16
     f34:	28 13       	cpse	r18, r24
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	2d 89       	ldd	r18, Y+21	; 0x15
     f3a:	82 13       	cpse	r24, r18
     f3c:	01 c0       	rjmp	.+2      	; 0xf40 <gpsReqLocUblox+0x250>
     f3e:	9f 5f       	subi	r25, 0xFF	; 255
     f40:	2c 89       	ldd	r18, Y+20	; 0x14
     f42:	82 13       	cpse	r24, r18
     f44:	01 c0       	rjmp	.+2      	; 0xf48 <gpsReqLocUblox+0x258>
     f46:	9f 5f       	subi	r25, 0xFF	; 255
     f48:	2b 89       	ldd	r18, Y+19	; 0x13
     f4a:	82 13       	cpse	r24, r18
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <gpsReqLocUblox+0x260>
     f4e:	9f 5f       	subi	r25, 0xFF	; 255
     f50:	2a 89       	ldd	r18, Y+18	; 0x12
     f52:	82 13       	cpse	r24, r18
     f54:	01 c0       	rjmp	.+2      	; 0xf58 <gpsReqLocUblox+0x268>
     f56:	9f 5f       	subi	r25, 0xFF	; 255
     f58:	29 89       	ldd	r18, Y+17	; 0x11
     f5a:	82 13       	cpse	r24, r18
     f5c:	01 c0       	rjmp	.+2      	; 0xf60 <gpsReqLocUblox+0x270>
     f5e:	9f 5f       	subi	r25, 0xFF	; 255
     f60:	28 89       	ldd	r18, Y+16	; 0x10
     f62:	82 13       	cpse	r24, r18
     f64:	01 c0       	rjmp	.+2      	; 0xf68 <gpsReqLocUblox+0x278>
     f66:	9f 5f       	subi	r25, 0xFF	; 255
     f68:	96 30       	cpi	r25, 0x06	; 6
     f6a:	08 f4       	brcc	.+2      	; 0xf6e <gpsReqLocUblox+0x27e>
     f6c:	f3 c0       	rjmp	.+486    	; 0x1154 <gpsReqLocUblox+0x464>
     f6e:	cf a4       	ldd	r12, Y+47	; 0x2f
     f70:	91 e0       	ldi	r25, 0x01	; 1
     f72:	2e a5       	ldd	r18, Y+46	; 0x2e
     f74:	2c 11       	cpse	r18, r12
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	2d a5       	ldd	r18, Y+45	; 0x2d
     f7a:	c2 12       	cpse	r12, r18
     f7c:	01 c0       	rjmp	.+2      	; 0xf80 <gpsReqLocUblox+0x290>
     f7e:	9f 5f       	subi	r25, 0xFF	; 255
     f80:	2c a5       	ldd	r18, Y+44	; 0x2c
     f82:	c2 12       	cpse	r12, r18
     f84:	01 c0       	rjmp	.+2      	; 0xf88 <gpsReqLocUblox+0x298>
     f86:	9f 5f       	subi	r25, 0xFF	; 255
     f88:	2b a5       	ldd	r18, Y+43	; 0x2b
     f8a:	c2 12       	cpse	r12, r18
     f8c:	01 c0       	rjmp	.+2      	; 0xf90 <gpsReqLocUblox+0x2a0>
     f8e:	9f 5f       	subi	r25, 0xFF	; 255
     f90:	2a a5       	ldd	r18, Y+42	; 0x2a
     f92:	c2 12       	cpse	r12, r18
     f94:	01 c0       	rjmp	.+2      	; 0xf98 <gpsReqLocUblox+0x2a8>
     f96:	9f 5f       	subi	r25, 0xFF	; 255
     f98:	29 a5       	ldd	r18, Y+41	; 0x29
     f9a:	c2 12       	cpse	r12, r18
     f9c:	01 c0       	rjmp	.+2      	; 0xfa0 <gpsReqLocUblox+0x2b0>
     f9e:	9f 5f       	subi	r25, 0xFF	; 255
     fa0:	28 a5       	ldd	r18, Y+40	; 0x28
     fa2:	c2 12       	cpse	r12, r18
     fa4:	01 c0       	rjmp	.+2      	; 0xfa8 <gpsReqLocUblox+0x2b8>
     fa6:	9f 5f       	subi	r25, 0xFF	; 255
     fa8:	96 30       	cpi	r25, 0x06	; 6
     faa:	08 f4       	brcc	.+2      	; 0xfae <gpsReqLocUblox+0x2be>
     fac:	d6 c0       	rjmp	.+428    	; 0x115a <gpsReqLocUblox+0x46a>
     fae:	df a0       	ldd	r13, Y+39	; 0x27
     fb0:	91 e0       	ldi	r25, 0x01	; 1
     fb2:	2e a1       	ldd	r18, Y+38	; 0x26
     fb4:	2d 11       	cpse	r18, r13
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	2d a1       	ldd	r18, Y+37	; 0x25
     fba:	d2 12       	cpse	r13, r18
     fbc:	01 c0       	rjmp	.+2      	; 0xfc0 <gpsReqLocUblox+0x2d0>
     fbe:	9f 5f       	subi	r25, 0xFF	; 255
     fc0:	2c a1       	ldd	r18, Y+36	; 0x24
     fc2:	d2 12       	cpse	r13, r18
     fc4:	01 c0       	rjmp	.+2      	; 0xfc8 <gpsReqLocUblox+0x2d8>
     fc6:	9f 5f       	subi	r25, 0xFF	; 255
     fc8:	2b a1       	ldd	r18, Y+35	; 0x23
     fca:	d2 12       	cpse	r13, r18
     fcc:	01 c0       	rjmp	.+2      	; 0xfd0 <gpsReqLocUblox+0x2e0>
     fce:	9f 5f       	subi	r25, 0xFF	; 255
     fd0:	2a a1       	ldd	r18, Y+34	; 0x22
     fd2:	d2 12       	cpse	r13, r18
     fd4:	01 c0       	rjmp	.+2      	; 0xfd8 <gpsReqLocUblox+0x2e8>
     fd6:	9f 5f       	subi	r25, 0xFF	; 255
     fd8:	29 a1       	ldd	r18, Y+33	; 0x21
     fda:	d2 12       	cpse	r13, r18
     fdc:	01 c0       	rjmp	.+2      	; 0xfe0 <gpsReqLocUblox+0x2f0>
     fde:	9f 5f       	subi	r25, 0xFF	; 255
     fe0:	28 a1       	ldd	r18, Y+32	; 0x20
     fe2:	d2 12       	cpse	r13, r18
     fe4:	01 c0       	rjmp	.+2      	; 0xfe8 <gpsReqLocUblox+0x2f8>
     fe6:	9f 5f       	subi	r25, 0xFF	; 255
     fe8:	96 30       	cpi	r25, 0x06	; 6
     fea:	08 f4       	brcc	.+2      	; 0xfee <gpsReqLocUblox+0x2fe>
     fec:	b9 c0       	rjmp	.+370    	; 0x1160 <gpsReqLocUblox+0x470>
     fee:	ec e2       	ldi	r30, 0x2C	; 44
     ff0:	de 16       	cp	r13, r30
     ff2:	09 f4       	brne	.+2      	; 0xff6 <gpsReqLocUblox+0x306>
     ff4:	b8 c0       	rjmp	.+368    	; 0x1166 <gpsReqLocUblox+0x476>
     ff6:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
     ffa:	78 2e       	mov	r7, r24
     ffc:	e0 90 53 39 	lds	r14, 0x3953	; 0x803953 <GPSSearchPtr>
    1000:	f0 90 54 39 	lds	r15, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
    1004:	d7 01       	movw	r26, r14
    1006:	90 96       	adiw	r26, 0x20	; 32
    1008:	6c 91       	ld	r22, X
    100a:	90 97       	sbiw	r26, 0x20	; 32
    100c:	5f 96       	adiw	r26, 0x1f	; 31
    100e:	8c 91       	ld	r24, X
    1010:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1014:	88 2e       	mov	r8, r24
    1016:	0f 2e       	mov	r0, r31
    1018:	fd e0       	ldi	r31, 0x0D	; 13
    101a:	af 2e       	mov	r10, r31
    101c:	f9 e3       	ldi	r31, 0x39	; 57
    101e:	bf 2e       	mov	r11, r31
    1020:	f0 2d       	mov	r31, r0
    1022:	87 2d       	mov	r24, r7
    1024:	86 95       	lsr	r24
    1026:	86 95       	lsr	r24
    1028:	f5 01       	movw	r30, r10
    102a:	91 81       	ldd	r25, Z+1	; 0x01
    102c:	89 0f       	add	r24, r25
    102e:	81 83       	std	Z+1, r24	; 0x01
    1030:	6d 2d       	mov	r22, r13
    1032:	8c 2d       	mov	r24, r12
    1034:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1038:	f0 e4       	ldi	r31, 0x40	; 64
    103a:	7f 9e       	mul	r7, r31
    103c:	80 0d       	add	r24, r0
    103e:	11 24       	eor	r1, r1
    1040:	d5 01       	movw	r26, r10
    1042:	12 96       	adiw	r26, 0x02	; 2
    1044:	8c 93       	st	X, r24
    1046:	d7 01       	movw	r26, r14
    1048:	14 97       	sbiw	r26, 0x04	; 4
    104a:	f7 01       	movw	r30, r14
    104c:	35 97       	sbiw	r30, 0x05	; 5
    104e:	6c 91       	ld	r22, X
    1050:	80 81       	ld	r24, Z
    1052:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1056:	f5 01       	movw	r30, r10
    1058:	93 81       	ldd	r25, Z+3	; 0x03
    105a:	89 0f       	add	r24, r25
    105c:	83 83       	std	Z+3, r24	; 0x03
    105e:	d7 01       	movw	r26, r14
    1060:	1c 96       	adiw	r26, 0x0c	; 12
    1062:	8c 91       	ld	r24, X
    1064:	8e 34       	cpi	r24, 0x4E	; 78
    1066:	19 f4       	brne	.+6      	; 0x106e <gpsReqLocUblox+0x37e>
    1068:	84 81       	ldd	r24, Z+4	; 0x04
    106a:	80 68       	ori	r24, 0x80	; 128
    106c:	84 83       	std	Z+4, r24	; 0x04
    106e:	f7 01       	movw	r30, r14
    1070:	62 81       	ldd	r22, Z+2	; 0x02
    1072:	81 81       	ldd	r24, Z+1	; 0x01
    1074:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1078:	0f 2e       	mov	r0, r31
    107a:	fd e0       	ldi	r31, 0x0D	; 13
    107c:	cf 2e       	mov	r12, r31
    107e:	f9 e3       	ldi	r31, 0x39	; 57
    1080:	df 2e       	mov	r13, r31
    1082:	f0 2d       	mov	r31, r0
    1084:	d6 01       	movw	r26, r12
    1086:	14 96       	adiw	r26, 0x04	; 4
    1088:	9c 91       	ld	r25, X
    108a:	14 97       	sbiw	r26, 0x04	; 4
    108c:	89 0f       	add	r24, r25
    108e:	14 96       	adiw	r26, 0x04	; 4
    1090:	8c 93       	st	X, r24
    1092:	f7 01       	movw	r30, r14
    1094:	64 81       	ldd	r22, Z+4	; 0x04
    1096:	83 81       	ldd	r24, Z+3	; 0x03
    1098:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    109c:	d6 01       	movw	r26, r12
    109e:	15 96       	adiw	r26, 0x05	; 5
    10a0:	8c 93       	st	X, r24
    10a2:	f7 01       	movw	r30, r14
    10a4:	67 81       	ldd	r22, Z+7	; 0x07
    10a6:	86 81       	ldd	r24, Z+6	; 0x06
    10a8:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    10ac:	d6 01       	movw	r26, r12
    10ae:	16 96       	adiw	r26, 0x06	; 6
    10b0:	8c 93       	st	X, r24
    10b2:	f7 01       	movw	r30, r14
    10b4:	61 85       	ldd	r22, Z+9	; 0x09
    10b6:	80 85       	ldd	r24, Z+8	; 0x08
    10b8:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    10bc:	d6 01       	movw	r26, r12
    10be:	17 96       	adiw	r26, 0x07	; 7
    10c0:	8c 93       	st	X, r24
    10c2:	f7 01       	movw	r30, r14
    10c4:	82 8d       	ldd	r24, Z+26	; 0x1a
    10c6:	85 34       	cpi	r24, 0x45	; 69
    10c8:	21 f4       	brne	.+8      	; 0x10d2 <gpsReqLocUblox+0x3e2>
    10ca:	f6 01       	movw	r30, r12
    10cc:	80 85       	ldd	r24, Z+8	; 0x08
    10ce:	80 64       	ori	r24, 0x40	; 64
    10d0:	80 87       	std	Z+8, r24	; 0x08
    10d2:	d7 01       	movw	r26, r14
    10d4:	1e 96       	adiw	r26, 0x0e	; 14
    10d6:	8c 91       	ld	r24, X
    10d8:	81 33       	cpi	r24, 0x31	; 49
    10da:	19 f4       	brne	.+6      	; 0x10e2 <gpsReqLocUblox+0x3f2>
    10dc:	84 e6       	ldi	r24, 0x64	; 100
    10de:	80 93 16 39 	sts	0x3916, r24	; 0x803916 <gpsParams+0x9>
    10e2:	f7 01       	movw	r30, r14
    10e4:	60 89       	ldd	r22, Z+16	; 0x10
    10e6:	87 85       	ldd	r24, Z+15	; 0x0f
    10e8:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    10ec:	0f 2e       	mov	r0, r31
    10ee:	fd e0       	ldi	r31, 0x0D	; 13
    10f0:	cf 2e       	mov	r12, r31
    10f2:	f9 e3       	ldi	r31, 0x39	; 57
    10f4:	df 2e       	mov	r13, r31
    10f6:	f0 2d       	mov	r31, r0
    10f8:	d6 01       	movw	r26, r12
    10fa:	19 96       	adiw	r26, 0x09	; 9
    10fc:	9c 91       	ld	r25, X
    10fe:	19 97       	sbiw	r26, 0x09	; 9
    1100:	89 0f       	add	r24, r25
    1102:	19 96       	adiw	r26, 0x09	; 9
    1104:	8c 93       	st	X, r24
    1106:	f7 01       	movw	r30, r14
    1108:	62 89       	ldd	r22, Z+18	; 0x12
    110a:	81 89       	ldd	r24, Z+17	; 0x11
    110c:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1110:	d6 01       	movw	r26, r12
    1112:	1a 96       	adiw	r26, 0x0a	; 10
    1114:	8c 93       	st	X, r24
    1116:	f7 01       	movw	r30, r14
    1118:	65 89       	ldd	r22, Z+21	; 0x15
    111a:	84 89       	ldd	r24, Z+20	; 0x14
    111c:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1120:	d6 01       	movw	r26, r12
    1122:	1b 96       	adiw	r26, 0x0b	; 11
    1124:	8c 93       	st	X, r24
    1126:	f7 01       	movw	r30, r14
    1128:	67 89       	ldd	r22, Z+23	; 0x17
    112a:	86 89       	ldd	r24, Z+22	; 0x16
    112c:	0e 94 8b 01 	call	0x316	; 0x316 <asciiToHex>
    1130:	d6 01       	movw	r26, r12
    1132:	1c 96       	adiw	r26, 0x0c	; 12
    1134:	8c 93       	st	X, r24
    1136:	1c 97       	sbiw	r26, 0x0c	; 12
    1138:	1d 96       	adiw	r26, 0x0d	; 13
    113a:	9c 92       	st	X, r9
    113c:	1d 97       	sbiw	r26, 0x0d	; 13
    113e:	1e 96       	adiw	r26, 0x0e	; 14
    1140:	0c 93       	st	X, r16
    1142:	1e 97       	sbiw	r26, 0x0e	; 14
    1144:	1f 96       	adiw	r26, 0x0f	; 15
    1146:	8c 92       	st	X, r8
    1148:	80 e0       	ldi	r24, 0x00	; 0
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	16 c0       	rjmp	.+44     	; 0x117a <gpsReqLocUblox+0x48a>
    114e:	8a e9       	ldi	r24, 0x9A	; 154
    1150:	92 e0       	ldi	r25, 0x02	; 2
    1152:	13 c0       	rjmp	.+38     	; 0x117a <gpsReqLocUblox+0x48a>
    1154:	8a e9       	ldi	r24, 0x9A	; 154
    1156:	92 e0       	ldi	r25, 0x02	; 2
    1158:	10 c0       	rjmp	.+32     	; 0x117a <gpsReqLocUblox+0x48a>
    115a:	8a e9       	ldi	r24, 0x9A	; 154
    115c:	92 e0       	ldi	r25, 0x02	; 2
    115e:	0d c0       	rjmp	.+26     	; 0x117a <gpsReqLocUblox+0x48a>
    1160:	8a e9       	ldi	r24, 0x9A	; 154
    1162:	92 e0       	ldi	r25, 0x02	; 2
    1164:	0a c0       	rjmp	.+20     	; 0x117a <gpsReqLocUblox+0x48a>
    1166:	8a e9       	ldi	r24, 0x9A	; 154
    1168:	92 e0       	ldi	r25, 0x02	; 2
    116a:	07 c0       	rjmp	.+14     	; 0x117a <gpsReqLocUblox+0x48a>
    116c:	64 e6       	ldi	r22, 0x64	; 100
    116e:	70 e0       	ldi	r23, 0x00	; 0
    1170:	80 e0       	ldi	r24, 0x00	; 0
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1178:	0d ce       	rjmp	.-998    	; 0xd94 <gpsReqLocUblox+0xa4>
    117a:	af 96       	adiw	r28, 0x2f	; 47
    117c:	cd bf       	out	0x3d, r28	; 61
    117e:	de bf       	out	0x3e, r29	; 62
    1180:	df 91       	pop	r29
    1182:	cf 91       	pop	r28
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	ff 90       	pop	r15
    118a:	ef 90       	pop	r14
    118c:	df 90       	pop	r13
    118e:	cf 90       	pop	r12
    1190:	bf 90       	pop	r11
    1192:	af 90       	pop	r10
    1194:	9f 90       	pop	r9
    1196:	8f 90       	pop	r8
    1198:	7f 90       	pop	r7
    119a:	08 95       	ret

0000119c <GPSgetTime>:
    119c:	0e 94 78 06 	call	0xcf0	; 0xcf0 <gpsReqLocUblox>
    11a0:	00 97       	sbiw	r24, 0x00	; 0
    11a2:	61 f4       	brne	.+24     	; 0x11bc <GPSgetTime+0x20>
    11a4:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
    11a8:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
    11ac:	23 a5       	ldd	r18, Z+43	; 0x2b
    11ae:	28 35       	cpi	r18, 0x58	; 88
    11b0:	29 f0       	breq	.+10     	; 0x11bc <GPSgetTime+0x20>
    11b2:	20 91 1c 39 	lds	r18, 0x391C	; 0x80391c <gpsParams+0xf>
    11b6:	24 30       	cpi	r18, 0x04	; 4
    11b8:	08 f0       	brcs	.+2      	; 0x11bc <GPSgetTime+0x20>
    11ba:	45 c0       	rjmp	.+138    	; 0x1246 <GPSgetTime+0xaa>
    11bc:	0e 94 78 06 	call	0xcf0	; 0xcf0 <gpsReqLocUblox>
    11c0:	00 97       	sbiw	r24, 0x00	; 0
    11c2:	59 f4       	brne	.+22     	; 0x11da <GPSgetTime+0x3e>
    11c4:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
    11c8:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
    11cc:	23 a5       	ldd	r18, Z+43	; 0x2b
    11ce:	28 35       	cpi	r18, 0x58	; 88
    11d0:	21 f0       	breq	.+8      	; 0x11da <GPSgetTime+0x3e>
    11d2:	20 91 1c 39 	lds	r18, 0x391C	; 0x80391c <gpsParams+0xf>
    11d6:	24 30       	cpi	r18, 0x04	; 4
    11d8:	b0 f5       	brcc	.+108    	; 0x1246 <GPSgetTime+0xaa>
    11da:	0e 94 78 06 	call	0xcf0	; 0xcf0 <gpsReqLocUblox>
    11de:	00 97       	sbiw	r24, 0x00	; 0
    11e0:	59 f4       	brne	.+22     	; 0x11f8 <GPSgetTime+0x5c>
    11e2:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
    11e6:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
    11ea:	23 a5       	ldd	r18, Z+43	; 0x2b
    11ec:	28 35       	cpi	r18, 0x58	; 88
    11ee:	21 f0       	breq	.+8      	; 0x11f8 <GPSgetTime+0x5c>
    11f0:	20 91 1c 39 	lds	r18, 0x391C	; 0x80391c <gpsParams+0xf>
    11f4:	24 30       	cpi	r18, 0x04	; 4
    11f6:	38 f5       	brcc	.+78     	; 0x1246 <GPSgetTime+0xaa>
    11f8:	0e 94 78 06 	call	0xcf0	; 0xcf0 <gpsReqLocUblox>
    11fc:	00 97       	sbiw	r24, 0x00	; 0
    11fe:	59 f4       	brne	.+22     	; 0x1216 <GPSgetTime+0x7a>
    1200:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
    1204:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
    1208:	23 a5       	ldd	r18, Z+43	; 0x2b
    120a:	28 35       	cpi	r18, 0x58	; 88
    120c:	21 f0       	breq	.+8      	; 0x1216 <GPSgetTime+0x7a>
    120e:	20 91 1c 39 	lds	r18, 0x391C	; 0x80391c <gpsParams+0xf>
    1212:	24 30       	cpi	r18, 0x04	; 4
    1214:	c0 f4       	brcc	.+48     	; 0x1246 <GPSgetTime+0xaa>
    1216:	0e 94 78 06 	call	0xcf0	; 0xcf0 <gpsReqLocUblox>
    121a:	00 97       	sbiw	r24, 0x00	; 0
    121c:	61 f4       	brne	.+24     	; 0x1236 <GPSgetTime+0x9a>
    121e:	e0 91 53 39 	lds	r30, 0x3953	; 0x803953 <GPSSearchPtr>
    1222:	f0 91 54 39 	lds	r31, 0x3954	; 0x803954 <GPSSearchPtr+0x1>
    1226:	23 a5       	ldd	r18, Z+43	; 0x2b
    1228:	28 35       	cpi	r18, 0x58	; 88
    122a:	41 f0       	breq	.+16     	; 0x123c <GPSgetTime+0xa0>
    122c:	20 91 1c 39 	lds	r18, 0x391C	; 0x80391c <gpsParams+0xf>
    1230:	24 30       	cpi	r18, 0x04	; 4
    1232:	38 f0       	brcs	.+14     	; 0x1242 <GPSgetTime+0xa6>
    1234:	08 95       	ret
    1236:	8a e9       	ldi	r24, 0x9A	; 154
    1238:	92 e0       	ldi	r25, 0x02	; 2
    123a:	08 95       	ret
    123c:	8a e9       	ldi	r24, 0x9A	; 154
    123e:	92 e0       	ldi	r25, 0x02	; 2
    1240:	08 95       	ret
    1242:	8a e9       	ldi	r24, 0x9A	; 154
    1244:	92 e0       	ldi	r25, 0x02	; 2
    1246:	08 95       	ret

00001248 <calcCRC>:
    1248:	0f 93       	push	r16
    124a:	1f 93       	push	r17
    124c:	cf 93       	push	r28
    124e:	df 93       	push	r29
    1250:	66 23       	and	r22, r22
    1252:	c1 f1       	breq	.+112    	; 0x12c4 <calcCRC+0x7c>
    1254:	ec 01       	movw	r28, r24
    1256:	8c 01       	movw	r16, r24
    1258:	06 0f       	add	r16, r22
    125a:	11 1d       	adc	r17, r1
    125c:	8f ef       	ldi	r24, 0xFF	; 255
    125e:	9f ef       	ldi	r25, 0xFF	; 255
    1260:	1b c0       	rjmp	.+54     	; 0x1298 <calcCRC+0x50>
    1262:	bc 01       	movw	r22, r24
    1264:	66 0f       	add	r22, r22
    1266:	77 1f       	adc	r23, r23
    1268:	fd 01       	movw	r30, r26
    126a:	e4 23       	and	r30, r20
    126c:	f5 23       	and	r31, r21
    126e:	ef 2b       	or	r30, r31
    1270:	11 f0       	breq	.+4      	; 0x1276 <calcCRC+0x2e>
    1272:	6f 5f       	subi	r22, 0xFF	; 255
    1274:	7f 4f       	sbci	r23, 0xFF	; 255
    1276:	56 95       	lsr	r21
    1278:	47 95       	ror	r20
    127a:	99 23       	and	r25, r25
    127c:	34 f4       	brge	.+12     	; 0x128a <calcCRC+0x42>
    127e:	cb 01       	movw	r24, r22
    1280:	e1 e2       	ldi	r30, 0x21	; 33
    1282:	8e 27       	eor	r24, r30
    1284:	e0 e1       	ldi	r30, 0x10	; 16
    1286:	9e 27       	eor	r25, r30
    1288:	01 c0       	rjmp	.+2      	; 0x128c <calcCRC+0x44>
    128a:	cb 01       	movw	r24, r22
    128c:	21 50       	subi	r18, 0x01	; 1
    128e:	31 09       	sbc	r19, r1
    1290:	41 f7       	brne	.-48     	; 0x1262 <calcCRC+0x1a>
    1292:	0c 17       	cp	r16, r28
    1294:	1d 07       	cpc	r17, r29
    1296:	c1 f0       	breq	.+48     	; 0x12c8 <calcCRC+0x80>
    1298:	a9 91       	ld	r26, Y+
    129a:	b0 e0       	ldi	r27, 0x00	; 0
    129c:	28 e0       	ldi	r18, 0x08	; 8
    129e:	30 e0       	ldi	r19, 0x00	; 0
    12a0:	40 e8       	ldi	r20, 0x80	; 128
    12a2:	50 e0       	ldi	r21, 0x00	; 0
    12a4:	de cf       	rjmp	.-68     	; 0x1262 <calcCRC+0x1a>
    12a6:	99 23       	and	r25, r25
    12a8:	3c f4       	brge	.+14     	; 0x12b8 <calcCRC+0x70>
    12aa:	88 0f       	add	r24, r24
    12ac:	99 1f       	adc	r25, r25
    12ae:	41 e2       	ldi	r20, 0x21	; 33
    12b0:	84 27       	eor	r24, r20
    12b2:	40 e1       	ldi	r20, 0x10	; 16
    12b4:	94 27       	eor	r25, r20
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <calcCRC+0x74>
    12b8:	88 0f       	add	r24, r24
    12ba:	99 1f       	adc	r25, r25
    12bc:	21 50       	subi	r18, 0x01	; 1
    12be:	31 09       	sbc	r19, r1
    12c0:	91 f7       	brne	.-28     	; 0x12a6 <calcCRC+0x5e>
    12c2:	05 c0       	rjmp	.+10     	; 0x12ce <calcCRC+0x86>
    12c4:	8f ef       	ldi	r24, 0xFF	; 255
    12c6:	9f ef       	ldi	r25, 0xFF	; 255
    12c8:	20 e1       	ldi	r18, 0x10	; 16
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	ec cf       	rjmp	.-40     	; 0x12a6 <calcCRC+0x5e>
    12ce:	df 91       	pop	r29
    12d0:	cf 91       	pop	r28
    12d2:	1f 91       	pop	r17
    12d4:	0f 91       	pop	r16
    12d6:	08 95       	ret

000012d8 <getByteFromBig>:
    12d8:	f8 94       	cli
    12da:	20 98       	cbi	0x04, 0	; 4
    12dc:	e0 e3       	ldi	r30, 0x30	; 48
    12de:	f4 e0       	ldi	r31, 0x04	; 4
    12e0:	80 81       	ld	r24, Z
    12e2:	87 7f       	andi	r24, 0xF7	; 247
    12e4:	80 83       	st	Z, r24
    12e6:	43 98       	cbi	0x08, 3	; 8
    12e8:	e3 e5       	ldi	r30, 0x53	; 83
    12ea:	f4 e0       	ldi	r31, 0x04	; 4
    12ec:	80 81       	ld	r24, Z
    12ee:	87 7f       	andi	r24, 0xF7	; 247
    12f0:	80 83       	st	Z, r24
    12f2:	53 9b       	sbis	0x0a, 3	; 10
    12f4:	06 c0       	rjmp	.+12     	; 0x1302 <getByteFromBig+0x2a>
    12f6:	87 e8       	ldi	r24, 0x87	; 135
    12f8:	93 e1       	ldi	r25, 0x13	; 19
    12fa:	53 9b       	sbis	0x0a, 3	; 10
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <getByteFromBig+0x2a>
    12fe:	01 97       	sbiw	r24, 0x01	; 1
    1300:	e1 f7       	brne	.-8      	; 0x12fa <getByteFromBig+0x22>
    1302:	30 9b       	sbis	0x06, 0	; 6
    1304:	02 c0       	rjmp	.+4      	; 0x130a <getByteFromBig+0x32>
    1306:	80 e8       	ldi	r24, 0x80	; 128
    1308:	01 c0       	rjmp	.+2      	; 0x130c <getByteFromBig+0x34>
    130a:	80 e0       	ldi	r24, 0x00	; 0
    130c:	53 99       	sbic	0x0a, 3	; 10
    130e:	68 c0       	rjmp	.+208    	; 0x13e0 <getByteFromBig+0x108>
    1310:	99 ef       	ldi	r25, 0xF9	; 249
    1312:	53 99       	sbic	0x0a, 3	; 10
    1314:	65 c0       	rjmp	.+202    	; 0x13e0 <getByteFromBig+0x108>
    1316:	91 50       	subi	r25, 0x01	; 1
    1318:	e1 f7       	brne	.-8      	; 0x1312 <getByteFromBig+0x3a>
    131a:	62 c0       	rjmp	.+196    	; 0x13e0 <getByteFromBig+0x108>
    131c:	53 9b       	sbis	0x0a, 3	; 10
    131e:	02 c0       	rjmp	.+4      	; 0x1324 <getByteFromBig+0x4c>
    1320:	91 50       	subi	r25, 0x01	; 1
    1322:	e1 f7       	brne	.-8      	; 0x131c <getByteFromBig+0x44>
    1324:	30 99       	sbic	0x06, 0	; 6
    1326:	80 64       	ori	r24, 0x40	; 64
    1328:	53 99       	sbic	0x0a, 3	; 10
    132a:	5e c0       	rjmp	.+188    	; 0x13e8 <getByteFromBig+0x110>
    132c:	99 ef       	ldi	r25, 0xF9	; 249
    132e:	53 99       	sbic	0x0a, 3	; 10
    1330:	5b c0       	rjmp	.+182    	; 0x13e8 <getByteFromBig+0x110>
    1332:	91 50       	subi	r25, 0x01	; 1
    1334:	e1 f7       	brne	.-8      	; 0x132e <getByteFromBig+0x56>
    1336:	58 c0       	rjmp	.+176    	; 0x13e8 <getByteFromBig+0x110>
    1338:	53 9b       	sbis	0x0a, 3	; 10
    133a:	02 c0       	rjmp	.+4      	; 0x1340 <getByteFromBig+0x68>
    133c:	91 50       	subi	r25, 0x01	; 1
    133e:	e1 f7       	brne	.-8      	; 0x1338 <getByteFromBig+0x60>
    1340:	30 99       	sbic	0x06, 0	; 6
    1342:	80 62       	ori	r24, 0x20	; 32
    1344:	53 99       	sbic	0x0a, 3	; 10
    1346:	54 c0       	rjmp	.+168    	; 0x13f0 <getByteFromBig+0x118>
    1348:	99 ef       	ldi	r25, 0xF9	; 249
    134a:	53 99       	sbic	0x0a, 3	; 10
    134c:	51 c0       	rjmp	.+162    	; 0x13f0 <getByteFromBig+0x118>
    134e:	91 50       	subi	r25, 0x01	; 1
    1350:	e1 f7       	brne	.-8      	; 0x134a <getByteFromBig+0x72>
    1352:	4e c0       	rjmp	.+156    	; 0x13f0 <getByteFromBig+0x118>
    1354:	53 9b       	sbis	0x0a, 3	; 10
    1356:	02 c0       	rjmp	.+4      	; 0x135c <getByteFromBig+0x84>
    1358:	91 50       	subi	r25, 0x01	; 1
    135a:	e1 f7       	brne	.-8      	; 0x1354 <getByteFromBig+0x7c>
    135c:	30 99       	sbic	0x06, 0	; 6
    135e:	80 61       	ori	r24, 0x10	; 16
    1360:	53 99       	sbic	0x0a, 3	; 10
    1362:	4a c0       	rjmp	.+148    	; 0x13f8 <getByteFromBig+0x120>
    1364:	99 ef       	ldi	r25, 0xF9	; 249
    1366:	53 99       	sbic	0x0a, 3	; 10
    1368:	47 c0       	rjmp	.+142    	; 0x13f8 <getByteFromBig+0x120>
    136a:	91 50       	subi	r25, 0x01	; 1
    136c:	e1 f7       	brne	.-8      	; 0x1366 <getByteFromBig+0x8e>
    136e:	44 c0       	rjmp	.+136    	; 0x13f8 <getByteFromBig+0x120>
    1370:	53 9b       	sbis	0x0a, 3	; 10
    1372:	02 c0       	rjmp	.+4      	; 0x1378 <getByteFromBig+0xa0>
    1374:	91 50       	subi	r25, 0x01	; 1
    1376:	e1 f7       	brne	.-8      	; 0x1370 <getByteFromBig+0x98>
    1378:	30 99       	sbic	0x06, 0	; 6
    137a:	88 60       	ori	r24, 0x08	; 8
    137c:	53 99       	sbic	0x0a, 3	; 10
    137e:	40 c0       	rjmp	.+128    	; 0x1400 <getByteFromBig+0x128>
    1380:	99 ef       	ldi	r25, 0xF9	; 249
    1382:	53 99       	sbic	0x0a, 3	; 10
    1384:	3d c0       	rjmp	.+122    	; 0x1400 <getByteFromBig+0x128>
    1386:	91 50       	subi	r25, 0x01	; 1
    1388:	e1 f7       	brne	.-8      	; 0x1382 <getByteFromBig+0xaa>
    138a:	3a c0       	rjmp	.+116    	; 0x1400 <getByteFromBig+0x128>
    138c:	53 9b       	sbis	0x0a, 3	; 10
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <getByteFromBig+0xbc>
    1390:	91 50       	subi	r25, 0x01	; 1
    1392:	e1 f7       	brne	.-8      	; 0x138c <getByteFromBig+0xb4>
    1394:	30 99       	sbic	0x06, 0	; 6
    1396:	84 60       	ori	r24, 0x04	; 4
    1398:	53 99       	sbic	0x0a, 3	; 10
    139a:	36 c0       	rjmp	.+108    	; 0x1408 <getByteFromBig+0x130>
    139c:	99 ef       	ldi	r25, 0xF9	; 249
    139e:	53 99       	sbic	0x0a, 3	; 10
    13a0:	33 c0       	rjmp	.+102    	; 0x1408 <getByteFromBig+0x130>
    13a2:	91 50       	subi	r25, 0x01	; 1
    13a4:	e1 f7       	brne	.-8      	; 0x139e <getByteFromBig+0xc6>
    13a6:	30 c0       	rjmp	.+96     	; 0x1408 <getByteFromBig+0x130>
    13a8:	53 9b       	sbis	0x0a, 3	; 10
    13aa:	02 c0       	rjmp	.+4      	; 0x13b0 <getByteFromBig+0xd8>
    13ac:	91 50       	subi	r25, 0x01	; 1
    13ae:	e1 f7       	brne	.-8      	; 0x13a8 <getByteFromBig+0xd0>
    13b0:	30 99       	sbic	0x06, 0	; 6
    13b2:	82 60       	ori	r24, 0x02	; 2
    13b4:	53 99       	sbic	0x0a, 3	; 10
    13b6:	2c c0       	rjmp	.+88     	; 0x1410 <getByteFromBig+0x138>
    13b8:	99 ef       	ldi	r25, 0xF9	; 249
    13ba:	53 99       	sbic	0x0a, 3	; 10
    13bc:	29 c0       	rjmp	.+82     	; 0x1410 <getByteFromBig+0x138>
    13be:	91 50       	subi	r25, 0x01	; 1
    13c0:	e1 f7       	brne	.-8      	; 0x13ba <getByteFromBig+0xe2>
    13c2:	26 c0       	rjmp	.+76     	; 0x1410 <getByteFromBig+0x138>
    13c4:	53 9b       	sbis	0x0a, 3	; 10
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <getByteFromBig+0xf4>
    13c8:	91 50       	subi	r25, 0x01	; 1
    13ca:	e1 f7       	brne	.-8      	; 0x13c4 <getByteFromBig+0xec>
    13cc:	30 99       	sbic	0x06, 0	; 6
    13ce:	81 60       	ori	r24, 0x01	; 1
    13d0:	53 99       	sbic	0x0a, 3	; 10
    13d2:	22 c0       	rjmp	.+68     	; 0x1418 <getByteFromBig+0x140>
    13d4:	99 ef       	ldi	r25, 0xF9	; 249
    13d6:	53 99       	sbic	0x0a, 3	; 10
    13d8:	1f c0       	rjmp	.+62     	; 0x1418 <getByteFromBig+0x140>
    13da:	91 50       	subi	r25, 0x01	; 1
    13dc:	e1 f7       	brne	.-8      	; 0x13d6 <getByteFromBig+0xfe>
    13de:	08 95       	ret
    13e0:	53 9b       	sbis	0x0a, 3	; 10
    13e2:	a0 cf       	rjmp	.-192    	; 0x1324 <getByteFromBig+0x4c>
    13e4:	99 ef       	ldi	r25, 0xF9	; 249
    13e6:	9a cf       	rjmp	.-204    	; 0x131c <getByteFromBig+0x44>
    13e8:	53 9b       	sbis	0x0a, 3	; 10
    13ea:	aa cf       	rjmp	.-172    	; 0x1340 <getByteFromBig+0x68>
    13ec:	99 ef       	ldi	r25, 0xF9	; 249
    13ee:	a4 cf       	rjmp	.-184    	; 0x1338 <getByteFromBig+0x60>
    13f0:	53 9b       	sbis	0x0a, 3	; 10
    13f2:	b4 cf       	rjmp	.-152    	; 0x135c <getByteFromBig+0x84>
    13f4:	99 ef       	ldi	r25, 0xF9	; 249
    13f6:	ae cf       	rjmp	.-164    	; 0x1354 <getByteFromBig+0x7c>
    13f8:	53 9b       	sbis	0x0a, 3	; 10
    13fa:	be cf       	rjmp	.-132    	; 0x1378 <getByteFromBig+0xa0>
    13fc:	99 ef       	ldi	r25, 0xF9	; 249
    13fe:	b8 cf       	rjmp	.-144    	; 0x1370 <getByteFromBig+0x98>
    1400:	53 9b       	sbis	0x0a, 3	; 10
    1402:	c8 cf       	rjmp	.-112    	; 0x1394 <getByteFromBig+0xbc>
    1404:	99 ef       	ldi	r25, 0xF9	; 249
    1406:	c2 cf       	rjmp	.-124    	; 0x138c <getByteFromBig+0xb4>
    1408:	53 9b       	sbis	0x0a, 3	; 10
    140a:	d2 cf       	rjmp	.-92     	; 0x13b0 <getByteFromBig+0xd8>
    140c:	99 ef       	ldi	r25, 0xF9	; 249
    140e:	cc cf       	rjmp	.-104    	; 0x13a8 <getByteFromBig+0xd0>
    1410:	53 9b       	sbis	0x0a, 3	; 10
    1412:	dc cf       	rjmp	.-72     	; 0x13cc <getByteFromBig+0xf4>
    1414:	99 ef       	ldi	r25, 0xF9	; 249
    1416:	d6 cf       	rjmp	.-84     	; 0x13c4 <getByteFromBig+0xec>
    1418:	08 95       	ret

0000141a <sendByteToBig>:
    141a:	20 9a       	sbi	0x04, 0	; 4
    141c:	88 23       	and	r24, r24
    141e:	14 f0       	brlt	.+4      	; 0x1424 <sendByteToBig+0xa>
    1420:	28 98       	cbi	0x05, 0	; 5
    1422:	93 c0       	rjmp	.+294    	; 0x154a <sendByteToBig+0x130>
    1424:	28 9a       	sbi	0x05, 0	; 5
    1426:	91 c0       	rjmp	.+290    	; 0x154a <sendByteToBig+0x130>
    1428:	29 ef       	ldi	r18, 0xF9	; 249
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	53 9b       	sbis	0x0a, 3	; 10
    142e:	8f c0       	rjmp	.+286    	; 0x154e <sendByteToBig+0x134>
    1430:	21 50       	subi	r18, 0x01	; 1
    1432:	31 09       	sbc	r19, r1
    1434:	d9 f7       	brne	.-10     	; 0x142c <sendByteToBig+0x12>
    1436:	8b c0       	rjmp	.+278    	; 0x154e <sendByteToBig+0x134>
    1438:	53 99       	sbic	0x0a, 3	; 10
    143a:	03 c0       	rjmp	.+6      	; 0x1442 <sendByteToBig+0x28>
    143c:	21 50       	subi	r18, 0x01	; 1
    143e:	31 09       	sbc	r19, r1
    1440:	d9 f7       	brne	.-10     	; 0x1438 <sendByteToBig+0x1e>
    1442:	86 fd       	sbrc	r24, 6
    1444:	02 c0       	rjmp	.+4      	; 0x144a <sendByteToBig+0x30>
    1446:	28 98       	cbi	0x05, 0	; 5
    1448:	87 c0       	rjmp	.+270    	; 0x1558 <sendByteToBig+0x13e>
    144a:	28 9a       	sbi	0x05, 0	; 5
    144c:	85 c0       	rjmp	.+266    	; 0x1558 <sendByteToBig+0x13e>
    144e:	29 ef       	ldi	r18, 0xF9	; 249
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	53 9b       	sbis	0x0a, 3	; 10
    1454:	83 c0       	rjmp	.+262    	; 0x155c <sendByteToBig+0x142>
    1456:	21 50       	subi	r18, 0x01	; 1
    1458:	31 09       	sbc	r19, r1
    145a:	d9 f7       	brne	.-10     	; 0x1452 <sendByteToBig+0x38>
    145c:	7f c0       	rjmp	.+254    	; 0x155c <sendByteToBig+0x142>
    145e:	53 99       	sbic	0x0a, 3	; 10
    1460:	03 c0       	rjmp	.+6      	; 0x1468 <sendByteToBig+0x4e>
    1462:	21 50       	subi	r18, 0x01	; 1
    1464:	31 09       	sbc	r19, r1
    1466:	d9 f7       	brne	.-10     	; 0x145e <sendByteToBig+0x44>
    1468:	85 fd       	sbrc	r24, 5
    146a:	02 c0       	rjmp	.+4      	; 0x1470 <sendByteToBig+0x56>
    146c:	28 98       	cbi	0x05, 0	; 5
    146e:	7b c0       	rjmp	.+246    	; 0x1566 <sendByteToBig+0x14c>
    1470:	28 9a       	sbi	0x05, 0	; 5
    1472:	79 c0       	rjmp	.+242    	; 0x1566 <sendByteToBig+0x14c>
    1474:	29 ef       	ldi	r18, 0xF9	; 249
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	53 9b       	sbis	0x0a, 3	; 10
    147a:	77 c0       	rjmp	.+238    	; 0x156a <sendByteToBig+0x150>
    147c:	21 50       	subi	r18, 0x01	; 1
    147e:	31 09       	sbc	r19, r1
    1480:	d9 f7       	brne	.-10     	; 0x1478 <sendByteToBig+0x5e>
    1482:	73 c0       	rjmp	.+230    	; 0x156a <sendByteToBig+0x150>
    1484:	53 99       	sbic	0x0a, 3	; 10
    1486:	03 c0       	rjmp	.+6      	; 0x148e <sendByteToBig+0x74>
    1488:	21 50       	subi	r18, 0x01	; 1
    148a:	31 09       	sbc	r19, r1
    148c:	d9 f7       	brne	.-10     	; 0x1484 <sendByteToBig+0x6a>
    148e:	84 fd       	sbrc	r24, 4
    1490:	02 c0       	rjmp	.+4      	; 0x1496 <sendByteToBig+0x7c>
    1492:	28 98       	cbi	0x05, 0	; 5
    1494:	6f c0       	rjmp	.+222    	; 0x1574 <sendByteToBig+0x15a>
    1496:	28 9a       	sbi	0x05, 0	; 5
    1498:	6d c0       	rjmp	.+218    	; 0x1574 <sendByteToBig+0x15a>
    149a:	29 ef       	ldi	r18, 0xF9	; 249
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	53 9b       	sbis	0x0a, 3	; 10
    14a0:	6b c0       	rjmp	.+214    	; 0x1578 <sendByteToBig+0x15e>
    14a2:	21 50       	subi	r18, 0x01	; 1
    14a4:	31 09       	sbc	r19, r1
    14a6:	d9 f7       	brne	.-10     	; 0x149e <sendByteToBig+0x84>
    14a8:	67 c0       	rjmp	.+206    	; 0x1578 <sendByteToBig+0x15e>
    14aa:	53 99       	sbic	0x0a, 3	; 10
    14ac:	03 c0       	rjmp	.+6      	; 0x14b4 <sendByteToBig+0x9a>
    14ae:	21 50       	subi	r18, 0x01	; 1
    14b0:	31 09       	sbc	r19, r1
    14b2:	d9 f7       	brne	.-10     	; 0x14aa <sendByteToBig+0x90>
    14b4:	83 fd       	sbrc	r24, 3
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <sendByteToBig+0xa2>
    14b8:	28 98       	cbi	0x05, 0	; 5
    14ba:	63 c0       	rjmp	.+198    	; 0x1582 <sendByteToBig+0x168>
    14bc:	28 9a       	sbi	0x05, 0	; 5
    14be:	61 c0       	rjmp	.+194    	; 0x1582 <sendByteToBig+0x168>
    14c0:	29 ef       	ldi	r18, 0xF9	; 249
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	53 9b       	sbis	0x0a, 3	; 10
    14c6:	5f c0       	rjmp	.+190    	; 0x1586 <sendByteToBig+0x16c>
    14c8:	21 50       	subi	r18, 0x01	; 1
    14ca:	31 09       	sbc	r19, r1
    14cc:	d9 f7       	brne	.-10     	; 0x14c4 <sendByteToBig+0xaa>
    14ce:	5b c0       	rjmp	.+182    	; 0x1586 <sendByteToBig+0x16c>
    14d0:	53 99       	sbic	0x0a, 3	; 10
    14d2:	03 c0       	rjmp	.+6      	; 0x14da <sendByteToBig+0xc0>
    14d4:	21 50       	subi	r18, 0x01	; 1
    14d6:	31 09       	sbc	r19, r1
    14d8:	d9 f7       	brne	.-10     	; 0x14d0 <sendByteToBig+0xb6>
    14da:	82 fd       	sbrc	r24, 2
    14dc:	02 c0       	rjmp	.+4      	; 0x14e2 <sendByteToBig+0xc8>
    14de:	28 98       	cbi	0x05, 0	; 5
    14e0:	57 c0       	rjmp	.+174    	; 0x1590 <sendByteToBig+0x176>
    14e2:	28 9a       	sbi	0x05, 0	; 5
    14e4:	55 c0       	rjmp	.+170    	; 0x1590 <sendByteToBig+0x176>
    14e6:	29 ef       	ldi	r18, 0xF9	; 249
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	53 9b       	sbis	0x0a, 3	; 10
    14ec:	53 c0       	rjmp	.+166    	; 0x1594 <sendByteToBig+0x17a>
    14ee:	21 50       	subi	r18, 0x01	; 1
    14f0:	31 09       	sbc	r19, r1
    14f2:	d9 f7       	brne	.-10     	; 0x14ea <sendByteToBig+0xd0>
    14f4:	4f c0       	rjmp	.+158    	; 0x1594 <sendByteToBig+0x17a>
    14f6:	53 99       	sbic	0x0a, 3	; 10
    14f8:	03 c0       	rjmp	.+6      	; 0x1500 <sendByteToBig+0xe6>
    14fa:	21 50       	subi	r18, 0x01	; 1
    14fc:	31 09       	sbc	r19, r1
    14fe:	d9 f7       	brne	.-10     	; 0x14f6 <sendByteToBig+0xdc>
    1500:	81 fd       	sbrc	r24, 1
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <sendByteToBig+0xee>
    1504:	28 98       	cbi	0x05, 0	; 5
    1506:	4b c0       	rjmp	.+150    	; 0x159e <sendByteToBig+0x184>
    1508:	28 9a       	sbi	0x05, 0	; 5
    150a:	49 c0       	rjmp	.+146    	; 0x159e <sendByteToBig+0x184>
    150c:	29 ef       	ldi	r18, 0xF9	; 249
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	53 9b       	sbis	0x0a, 3	; 10
    1512:	47 c0       	rjmp	.+142    	; 0x15a2 <sendByteToBig+0x188>
    1514:	21 50       	subi	r18, 0x01	; 1
    1516:	31 09       	sbc	r19, r1
    1518:	d9 f7       	brne	.-10     	; 0x1510 <sendByteToBig+0xf6>
    151a:	43 c0       	rjmp	.+134    	; 0x15a2 <sendByteToBig+0x188>
    151c:	53 99       	sbic	0x0a, 3	; 10
    151e:	03 c0       	rjmp	.+6      	; 0x1526 <sendByteToBig+0x10c>
    1520:	21 50       	subi	r18, 0x01	; 1
    1522:	31 09       	sbc	r19, r1
    1524:	d9 f7       	brne	.-10     	; 0x151c <sendByteToBig+0x102>
    1526:	80 fd       	sbrc	r24, 0
    1528:	02 c0       	rjmp	.+4      	; 0x152e <sendByteToBig+0x114>
    152a:	28 98       	cbi	0x05, 0	; 5
    152c:	3f c0       	rjmp	.+126    	; 0x15ac <sendByteToBig+0x192>
    152e:	28 9a       	sbi	0x05, 0	; 5
    1530:	3d c0       	rjmp	.+122    	; 0x15ac <sendByteToBig+0x192>
    1532:	89 ef       	ldi	r24, 0xF9	; 249
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	53 9b       	sbis	0x0a, 3	; 10
    1538:	3b c0       	rjmp	.+118    	; 0x15b0 <sendByteToBig+0x196>
    153a:	01 97       	sbiw	r24, 0x01	; 1
    153c:	e1 f7       	brne	.-8      	; 0x1536 <sendByteToBig+0x11c>
    153e:	38 c0       	rjmp	.+112    	; 0x15b0 <sendByteToBig+0x196>
    1540:	53 99       	sbic	0x0a, 3	; 10
    1542:	3b c0       	rjmp	.+118    	; 0x15ba <sendByteToBig+0x1a0>
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	e1 f7       	brne	.-8      	; 0x1540 <sendByteToBig+0x126>
    1548:	08 95       	ret
    154a:	53 99       	sbic	0x0a, 3	; 10
    154c:	6d cf       	rjmp	.-294    	; 0x1428 <sendByteToBig+0xe>
    154e:	53 99       	sbic	0x0a, 3	; 10
    1550:	78 cf       	rjmp	.-272    	; 0x1442 <sendByteToBig+0x28>
    1552:	29 ef       	ldi	r18, 0xF9	; 249
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	70 cf       	rjmp	.-288    	; 0x1438 <sendByteToBig+0x1e>
    1558:	53 99       	sbic	0x0a, 3	; 10
    155a:	79 cf       	rjmp	.-270    	; 0x144e <sendByteToBig+0x34>
    155c:	53 99       	sbic	0x0a, 3	; 10
    155e:	84 cf       	rjmp	.-248    	; 0x1468 <sendByteToBig+0x4e>
    1560:	29 ef       	ldi	r18, 0xF9	; 249
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	7c cf       	rjmp	.-264    	; 0x145e <sendByteToBig+0x44>
    1566:	53 99       	sbic	0x0a, 3	; 10
    1568:	85 cf       	rjmp	.-246    	; 0x1474 <sendByteToBig+0x5a>
    156a:	53 99       	sbic	0x0a, 3	; 10
    156c:	90 cf       	rjmp	.-224    	; 0x148e <sendByteToBig+0x74>
    156e:	29 ef       	ldi	r18, 0xF9	; 249
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	88 cf       	rjmp	.-240    	; 0x1484 <sendByteToBig+0x6a>
    1574:	53 99       	sbic	0x0a, 3	; 10
    1576:	91 cf       	rjmp	.-222    	; 0x149a <sendByteToBig+0x80>
    1578:	53 99       	sbic	0x0a, 3	; 10
    157a:	9c cf       	rjmp	.-200    	; 0x14b4 <sendByteToBig+0x9a>
    157c:	29 ef       	ldi	r18, 0xF9	; 249
    157e:	30 e0       	ldi	r19, 0x00	; 0
    1580:	94 cf       	rjmp	.-216    	; 0x14aa <sendByteToBig+0x90>
    1582:	53 99       	sbic	0x0a, 3	; 10
    1584:	9d cf       	rjmp	.-198    	; 0x14c0 <sendByteToBig+0xa6>
    1586:	53 99       	sbic	0x0a, 3	; 10
    1588:	a8 cf       	rjmp	.-176    	; 0x14da <sendByteToBig+0xc0>
    158a:	29 ef       	ldi	r18, 0xF9	; 249
    158c:	30 e0       	ldi	r19, 0x00	; 0
    158e:	a0 cf       	rjmp	.-192    	; 0x14d0 <sendByteToBig+0xb6>
    1590:	53 99       	sbic	0x0a, 3	; 10
    1592:	a9 cf       	rjmp	.-174    	; 0x14e6 <sendByteToBig+0xcc>
    1594:	53 99       	sbic	0x0a, 3	; 10
    1596:	b4 cf       	rjmp	.-152    	; 0x1500 <sendByteToBig+0xe6>
    1598:	29 ef       	ldi	r18, 0xF9	; 249
    159a:	30 e0       	ldi	r19, 0x00	; 0
    159c:	ac cf       	rjmp	.-168    	; 0x14f6 <sendByteToBig+0xdc>
    159e:	53 99       	sbic	0x0a, 3	; 10
    15a0:	b5 cf       	rjmp	.-150    	; 0x150c <sendByteToBig+0xf2>
    15a2:	53 99       	sbic	0x0a, 3	; 10
    15a4:	c0 cf       	rjmp	.-128    	; 0x1526 <sendByteToBig+0x10c>
    15a6:	29 ef       	ldi	r18, 0xF9	; 249
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	b8 cf       	rjmp	.-144    	; 0x151c <sendByteToBig+0x102>
    15ac:	53 99       	sbic	0x0a, 3	; 10
    15ae:	c1 cf       	rjmp	.-126    	; 0x1532 <sendByteToBig+0x118>
    15b0:	53 99       	sbic	0x0a, 3	; 10
    15b2:	03 c0       	rjmp	.+6      	; 0x15ba <sendByteToBig+0x1a0>
    15b4:	89 ef       	ldi	r24, 0xF9	; 249
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	c3 cf       	rjmp	.-122    	; 0x1540 <sendByteToBig+0x126>
    15ba:	08 95       	ret

000015bc <getPacketFromBig>:
    15bc:	8f 92       	push	r8
    15be:	9f 92       	push	r9
    15c0:	af 92       	push	r10
    15c2:	bf 92       	push	r11
    15c4:	cf 92       	push	r12
    15c6:	df 92       	push	r13
    15c8:	ef 92       	push	r14
    15ca:	ff 92       	push	r15
    15cc:	0f 93       	push	r16
    15ce:	1f 93       	push	r17
    15d0:	cf 93       	push	r28
    15d2:	df 93       	push	r29
    15d4:	cd b7       	in	r28, 0x3d	; 61
    15d6:	de b7       	in	r29, 0x3e	; 62
    15d8:	29 97       	sbiw	r28, 0x09	; 9
    15da:	cd bf       	out	0x3d, r28	; 61
    15dc:	de bf       	out	0x3e, r29	; 62
    15de:	f8 94       	cli
    15e0:	20 98       	cbi	0x04, 0	; 4
    15e2:	e0 e3       	ldi	r30, 0x30	; 48
    15e4:	f4 e0       	ldi	r31, 0x04	; 4
    15e6:	80 81       	ld	r24, Z
    15e8:	87 7f       	andi	r24, 0xF7	; 247
    15ea:	80 83       	st	Z, r24
    15ec:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    15f0:	f8 2e       	mov	r15, r24
    15f2:	89 83       	std	Y+1, r24	; 0x01
    15f4:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    15f8:	88 2e       	mov	r8, r24
    15fa:	8a 83       	std	Y+2, r24	; 0x02
    15fc:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    1600:	98 2e       	mov	r9, r24
    1602:	8b 83       	std	Y+3, r24	; 0x03
    1604:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    1608:	a8 2e       	mov	r10, r24
    160a:	8c 83       	std	Y+4, r24	; 0x04
    160c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    1610:	b8 2e       	mov	r11, r24
    1612:	8d 83       	std	Y+5, r24	; 0x05
    1614:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    1618:	c8 2e       	mov	r12, r24
    161a:	8e 83       	std	Y+6, r24	; 0x06
    161c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    1620:	e8 2e       	mov	r14, r24
    1622:	8f 83       	std	Y+7, r24	; 0x07
    1624:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    1628:	18 2f       	mov	r17, r24
    162a:	88 87       	std	Y+8, r24	; 0x08
    162c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <getByteFromBig>
    1630:	08 2f       	mov	r16, r24
    1632:	89 87       	std	Y+9, r24	; 0x09
    1634:	67 e0       	ldi	r22, 0x07	; 7
    1636:	ce 01       	movw	r24, r28
    1638:	01 96       	adiw	r24, 0x01	; 1
    163a:	0e 94 24 09 	call	0x1248	; 0x1248 <calcCRC>
    163e:	21 2f       	mov	r18, r17
    1640:	30 e0       	ldi	r19, 0x00	; 0
    1642:	32 2f       	mov	r19, r18
    1644:	22 27       	eor	r18, r18
    1646:	20 0f       	add	r18, r16
    1648:	31 1d       	adc	r19, r1
    164a:	82 17       	cp	r24, r18
    164c:	93 07       	cpc	r25, r19
    164e:	09 f0       	breq	.+2      	; 0x1652 <getPacketFromBig+0x96>
    1650:	be c0       	rjmp	.+380    	; 0x17ce <getPacketFromBig+0x212>
    1652:	f0 92 48 39 	sts	0x3948, r15	; 0x803948 <rcvdCmd>
    1656:	8f 2d       	mov	r24, r15
    1658:	87 70       	andi	r24, 0x07	; 7
    165a:	d8 2e       	mov	r13, r24
    165c:	e2 e0       	ldi	r30, 0x02	; 2
    165e:	8e 17       	cp	r24, r30
    1660:	a1 f1       	breq	.+104    	; 0x16ca <getPacketFromBig+0x10e>
    1662:	e8 17       	cp	r30, r24
    1664:	30 f0       	brcs	.+12     	; 0x1672 <getPacketFromBig+0xb6>
    1666:	88 23       	and	r24, r24
    1668:	61 f0       	breq	.+24     	; 0x1682 <getPacketFromBig+0xc6>
    166a:	f1 e0       	ldi	r31, 0x01	; 1
    166c:	8f 17       	cp	r24, r31
    166e:	d9 f0       	breq	.+54     	; 0x16a6 <getPacketFromBig+0xea>
    1670:	62 c0       	rjmp	.+196    	; 0x1736 <getPacketFromBig+0x17a>
    1672:	83 e0       	ldi	r24, 0x03	; 3
    1674:	d8 16       	cp	r13, r24
    1676:	d9 f1       	breq	.+118    	; 0x16ee <getPacketFromBig+0x132>
    1678:	e4 e0       	ldi	r30, 0x04	; 4
    167a:	de 16       	cp	r13, r30
    167c:	09 f4       	brne	.+2      	; 0x1680 <getPacketFromBig+0xc4>
    167e:	49 c0       	rjmp	.+146    	; 0x1712 <getPacketFromBig+0x156>
    1680:	5a c0       	rjmp	.+180    	; 0x1736 <getPacketFromBig+0x17a>
    1682:	e5 ed       	ldi	r30, 0xD5	; 213
    1684:	f8 e3       	ldi	r31, 0x38	; 56
    1686:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    168a:	85 83       	std	Z+5, r24	; 0x05
    168c:	80 8a       	std	Z+16, r8	; 0x10
    168e:	91 8a       	std	Z+17, r9	; 0x11
    1690:	a4 8e       	std	Z+28, r10	; 0x1c
    1692:	b5 8e       	std	Z+29, r11	; 0x1d
    1694:	c0 a6       	std	Z+40, r12	; 0x28
    1696:	e1 a6       	std	Z+41, r14	; 0x29
    1698:	80 91 1c 38 	lds	r24, 0x381C	; 0x80381c <g_light>
    169c:	90 91 1d 38 	lds	r25, 0x381D	; 0x80381d <g_light+0x1>
    16a0:	94 ab       	std	Z+52, r25	; 0x34
    16a2:	85 ab       	std	Z+53, r24	; 0x35
    16a4:	59 c0       	rjmp	.+178    	; 0x1758 <getPacketFromBig+0x19c>
    16a6:	e5 ed       	ldi	r30, 0xD5	; 213
    16a8:	f8 e3       	ldi	r31, 0x38	; 56
    16aa:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    16ae:	80 83       	st	Z, r24
    16b0:	86 82       	std	Z+6, r8	; 0x06
    16b2:	97 82       	std	Z+7, r9	; 0x07
    16b4:	a2 8a       	std	Z+18, r10	; 0x12
    16b6:	b3 8a       	std	Z+19, r11	; 0x13
    16b8:	c6 8e       	std	Z+30, r12	; 0x1e
    16ba:	e7 8e       	std	Z+31, r14	; 0x1f
    16bc:	80 91 1c 38 	lds	r24, 0x381C	; 0x80381c <g_light>
    16c0:	90 91 1d 38 	lds	r25, 0x381D	; 0x80381d <g_light+0x1>
    16c4:	92 a7       	std	Z+42, r25	; 0x2a
    16c6:	83 a7       	std	Z+43, r24	; 0x2b
    16c8:	47 c0       	rjmp	.+142    	; 0x1758 <getPacketFromBig+0x19c>
    16ca:	e5 ed       	ldi	r30, 0xD5	; 213
    16cc:	f8 e3       	ldi	r31, 0x38	; 56
    16ce:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    16d2:	81 83       	std	Z+1, r24	; 0x01
    16d4:	80 86       	std	Z+8, r8	; 0x08
    16d6:	91 86       	std	Z+9, r9	; 0x09
    16d8:	a4 8a       	std	Z+20, r10	; 0x14
    16da:	b5 8a       	std	Z+21, r11	; 0x15
    16dc:	c0 a2       	std	Z+32, r12	; 0x20
    16de:	e1 a2       	std	Z+33, r14	; 0x21
    16e0:	80 91 1c 38 	lds	r24, 0x381C	; 0x80381c <g_light>
    16e4:	90 91 1d 38 	lds	r25, 0x381D	; 0x80381d <g_light+0x1>
    16e8:	94 a7       	std	Z+44, r25	; 0x2c
    16ea:	85 a7       	std	Z+45, r24	; 0x2d
    16ec:	35 c0       	rjmp	.+106    	; 0x1758 <getPacketFromBig+0x19c>
    16ee:	e5 ed       	ldi	r30, 0xD5	; 213
    16f0:	f8 e3       	ldi	r31, 0x38	; 56
    16f2:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    16f6:	82 83       	std	Z+2, r24	; 0x02
    16f8:	82 86       	std	Z+10, r8	; 0x0a
    16fa:	93 86       	std	Z+11, r9	; 0x0b
    16fc:	a6 8a       	std	Z+22, r10	; 0x16
    16fe:	b7 8a       	std	Z+23, r11	; 0x17
    1700:	c2 a2       	std	Z+34, r12	; 0x22
    1702:	e3 a2       	std	Z+35, r14	; 0x23
    1704:	80 91 1c 38 	lds	r24, 0x381C	; 0x80381c <g_light>
    1708:	90 91 1d 38 	lds	r25, 0x381D	; 0x80381d <g_light+0x1>
    170c:	96 a7       	std	Z+46, r25	; 0x2e
    170e:	87 a7       	std	Z+47, r24	; 0x2f
    1710:	23 c0       	rjmp	.+70     	; 0x1758 <getPacketFromBig+0x19c>
    1712:	e5 ed       	ldi	r30, 0xD5	; 213
    1714:	f8 e3       	ldi	r31, 0x38	; 56
    1716:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    171a:	83 83       	std	Z+3, r24	; 0x03
    171c:	84 86       	std	Z+12, r8	; 0x0c
    171e:	95 86       	std	Z+13, r9	; 0x0d
    1720:	a0 8e       	std	Z+24, r10	; 0x18
    1722:	b1 8e       	std	Z+25, r11	; 0x19
    1724:	c4 a2       	std	Z+36, r12	; 0x24
    1726:	e5 a2       	std	Z+37, r14	; 0x25
    1728:	80 91 1c 38 	lds	r24, 0x381C	; 0x80381c <g_light>
    172c:	90 91 1d 38 	lds	r25, 0x381D	; 0x80381d <g_light+0x1>
    1730:	90 ab       	std	Z+48, r25	; 0x30
    1732:	81 ab       	std	Z+49, r24	; 0x31
    1734:	11 c0       	rjmp	.+34     	; 0x1758 <getPacketFromBig+0x19c>
    1736:	e5 ed       	ldi	r30, 0xD5	; 213
    1738:	f8 e3       	ldi	r31, 0x38	; 56
    173a:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    173e:	84 83       	std	Z+4, r24	; 0x04
    1740:	86 86       	std	Z+14, r8	; 0x0e
    1742:	97 86       	std	Z+15, r9	; 0x0f
    1744:	a2 8e       	std	Z+26, r10	; 0x1a
    1746:	b3 8e       	std	Z+27, r11	; 0x1b
    1748:	c6 a2       	std	Z+38, r12	; 0x26
    174a:	e7 a2       	std	Z+39, r14	; 0x27
    174c:	80 91 1c 38 	lds	r24, 0x381C	; 0x80381c <g_light>
    1750:	90 91 1d 38 	lds	r25, 0x381D	; 0x80381d <g_light+0x1>
    1754:	92 ab       	std	Z+50, r25	; 0x32
    1756:	83 ab       	std	Z+51, r24	; 0x33
    1758:	20 9a       	sbi	0x04, 0	; 4
    175a:	43 98       	cbi	0x08, 3	; 8
    175c:	66 e3       	ldi	r22, 0x36	; 54
    175e:	85 ed       	ldi	r24, 0xD5	; 213
    1760:	98 e3       	ldi	r25, 0x38	; 56
    1762:	0e 94 24 09 	call	0x1248	; 0x1248 <calcCRC>
    1766:	e5 ed       	ldi	r30, 0xD5	; 213
    1768:	f8 e3       	ldi	r31, 0x38	; 56
    176a:	96 ab       	std	Z+54, r25	; 0x36
    176c:	87 ab       	std	Z+55, r24	; 0x37
    176e:	80 81       	ld	r24, Z
    1770:	88 23       	and	r24, r24
    1772:	14 f0       	brlt	.+4      	; 0x1778 <getPacketFromBig+0x1bc>
    1774:	28 98       	cbi	0x05, 0	; 5
    1776:	57 c0       	rjmp	.+174    	; 0x1826 <getPacketFromBig+0x26a>
    1778:	28 9a       	sbi	0x05, 0	; 5
    177a:	55 c0       	rjmp	.+170    	; 0x1826 <getPacketFromBig+0x26a>
    177c:	8f e2       	ldi	r24, 0x2F	; 47
    177e:	95 e7       	ldi	r25, 0x75	; 117
    1780:	53 9b       	sbis	0x0a, 3	; 10
    1782:	53 c0       	rjmp	.+166    	; 0x182a <getPacketFromBig+0x26e>
    1784:	01 97       	sbiw	r24, 0x01	; 1
    1786:	e1 f7       	brne	.-8      	; 0x1780 <getPacketFromBig+0x1c4>
    1788:	50 c0       	rjmp	.+160    	; 0x182a <getPacketFromBig+0x26e>
    178a:	f8 01       	movw	r30, r16
    178c:	81 91       	ld	r24, Z+
    178e:	8f 01       	movw	r16, r30
    1790:	0e 94 0d 0a 	call	0x141a	; 0x141a <sendByteToBig>
    1794:	e0 16       	cp	r14, r16
    1796:	f1 06       	cpc	r15, r17
    1798:	c1 f7       	brne	.-16     	; 0x178a <getPacketFromBig+0x1ce>
    179a:	20 98       	cbi	0x04, 0	; 4
    179c:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
    17a0:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
    17a4:	62 e0       	ldi	r22, 0x02	; 2
    17a6:	8f e2       	ldi	r24, 0x2F	; 47
    17a8:	93 ea       	ldi	r25, 0xA3	; 163
    17aa:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
    17ae:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    17b2:	62 e0       	ldi	r22, 0x02	; 2
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	0e 94 a3 03 	call	0x746	; 0x746 <LCDshort>
    17ba:	a8 95       	wdr
    17bc:	68 ec       	ldi	r22, 0xC8	; 200
    17be:	70 e0       	ldi	r23, 0x00	; 0
    17c0:	80 e0       	ldi	r24, 0x00	; 0
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    17c8:	10 92 18 38 	sts	0x3818, r1	; 0x803818 <g_motionMinTotal>
    17cc:	13 c0       	rjmp	.+38     	; 0x17f4 <getPacketFromBig+0x238>
    17ce:	88 e0       	ldi	r24, 0x08	; 8
    17d0:	80 93 48 39 	sts	0x3948, r24	; 0x803948 <rcvdCmd>
    17d4:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
    17d8:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
    17dc:	63 e0       	ldi	r22, 0x03	; 3
    17de:	82 e3       	ldi	r24, 0x32	; 50
    17e0:	93 ea       	ldi	r25, 0xA3	; 163
    17e2:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
    17e6:	a8 95       	wdr
    17e8:	68 ec       	ldi	r22, 0xC8	; 200
    17ea:	70 e0       	ldi	r23, 0x00	; 0
    17ec:	80 e0       	ldi	r24, 0x00	; 0
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    17f4:	d1 10       	cpse	r13, r1
    17f6:	08 c0       	rjmp	.+16     	; 0x1808 <getPacketFromBig+0x24c>
    17f8:	e5 ed       	ldi	r30, 0xD5	; 213
    17fa:	f8 e3       	ldi	r31, 0x38	; 56
    17fc:	8b e0       	ldi	r24, 0x0B	; 11
    17fe:	99 e3       	ldi	r25, 0x39	; 57
    1800:	11 92       	st	Z+, r1
    1802:	8e 17       	cp	r24, r30
    1804:	9f 07       	cpc	r25, r31
    1806:	e1 f7       	brne	.-8      	; 0x1800 <getPacketFromBig+0x244>
    1808:	0e 94 06 01 	call	0x20c	; 0x20c <getLight>
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	80 93 1c 38 	sts	0x381C, r24	; 0x80381c <g_light>
    1812:	90 93 1d 38 	sts	0x381D, r25	; 0x80381d <g_light+0x1>
    1816:	e0 e4       	ldi	r30, 0x40	; 64
    1818:	f4 e0       	ldi	r31, 0x04	; 4
    181a:	81 85       	ldd	r24, Z+9	; 0x09
    181c:	82 60       	ori	r24, 0x02	; 2
    181e:	81 87       	std	Z+9, r24	; 0x09
    1820:	78 94       	sei
    1822:	89 81       	ldd	r24, Y+1	; 0x01
    1824:	0b c0       	rjmp	.+22     	; 0x183c <getPacketFromBig+0x280>
    1826:	53 99       	sbic	0x0a, 3	; 10
    1828:	a9 cf       	rjmp	.-174    	; 0x177c <getPacketFromBig+0x1c0>
    182a:	05 ed       	ldi	r16, 0xD5	; 213
    182c:	18 e3       	ldi	r17, 0x38	; 56
    182e:	0f 2e       	mov	r0, r31
    1830:	fd e0       	ldi	r31, 0x0D	; 13
    1832:	ef 2e       	mov	r14, r31
    1834:	f9 e3       	ldi	r31, 0x39	; 57
    1836:	ff 2e       	mov	r15, r31
    1838:	f0 2d       	mov	r31, r0
    183a:	a7 cf       	rjmp	.-178    	; 0x178a <getPacketFromBig+0x1ce>
    183c:	29 96       	adiw	r28, 0x09	; 9
    183e:	cd bf       	out	0x3d, r28	; 61
    1840:	de bf       	out	0x3e, r29	; 62
    1842:	df 91       	pop	r29
    1844:	cf 91       	pop	r28
    1846:	1f 91       	pop	r17
    1848:	0f 91       	pop	r16
    184a:	ff 90       	pop	r15
    184c:	ef 90       	pop	r14
    184e:	df 90       	pop	r13
    1850:	cf 90       	pop	r12
    1852:	bf 90       	pop	r11
    1854:	af 90       	pop	r10
    1856:	9f 90       	pop	r9
    1858:	8f 90       	pop	r8
    185a:	08 95       	ret

0000185c <USART0_ON>:
    185c:	23 98       	cbi	0x04, 3	; 4
    185e:	e3 e3       	ldi	r30, 0x33	; 51
    1860:	f4 e0       	ldi	r31, 0x04	; 4
    1862:	90 81       	ld	r25, Z
    1864:	97 7f       	andi	r25, 0xF7	; 247
    1866:	90 83       	st	Z, r25
    1868:	2a 9a       	sbi	0x05, 2	; 5
    186a:	22 9a       	sbi	0x04, 2	; 4
    186c:	2c e6       	ldi	r18, 0x6C	; 108
    186e:	35 e0       	ldi	r19, 0x05	; 5
    1870:	20 93 08 08 	sts	0x0808, r18	; 0x800808 <__TEXT_REGION_LENGTH__+0x700808>
    1874:	30 93 09 08 	sts	0x0809, r19	; 0x800809 <__TEXT_REGION_LENGTH__+0x700809>
    1878:	88 23       	and	r24, r24
    187a:	21 f0       	breq	.+8      	; 0x1884 <USART0_ON+0x28>
    187c:	80 ec       	ldi	r24, 0xC0	; 192
    187e:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    1882:	10 c0       	rjmp	.+32     	; 0x18a4 <USART0_ON+0x48>
    1884:	23 98       	cbi	0x04, 3	; 4
    1886:	e3 e3       	ldi	r30, 0x33	; 51
    1888:	f4 e0       	ldi	r31, 0x04	; 4
    188a:	80 81       	ld	r24, Z
    188c:	87 7f       	andi	r24, 0xF7	; 247
    188e:	80 83       	st	Z, r24
    1890:	2a 9a       	sbi	0x05, 2	; 5
    1892:	22 9a       	sbi	0x04, 2	; 4
    1894:	e0 e0       	ldi	r30, 0x00	; 0
    1896:	f8 e0       	ldi	r31, 0x08	; 8
    1898:	8c e6       	ldi	r24, 0x6C	; 108
    189a:	95 e0       	ldi	r25, 0x05	; 5
    189c:	80 87       	std	Z+8, r24	; 0x08
    189e:	91 87       	std	Z+9, r25	; 0x09
    18a0:	80 e4       	ldi	r24, 0x40	; 64
    18a2:	86 83       	std	Z+6, r24	; 0x06
    18a4:	e0 e0       	ldi	r30, 0x00	; 0
    18a6:	f8 e0       	ldi	r31, 0x08	; 8
    18a8:	81 81       	ldd	r24, Z+1	; 0x01
    18aa:	80 81       	ld	r24, Z
    18ac:	08 95       	ret

000018ae <openGPSuBlox>:
    18ae:	04 98       	cbi	0x00, 4	; 0
    18b0:	e4 e1       	ldi	r30, 0x14	; 20
    18b2:	f4 e0       	ldi	r31, 0x04	; 4
    18b4:	80 81       	ld	r24, Z
    18b6:	88 60       	ori	r24, 0x08	; 8
    18b8:	80 83       	st	Z, r24
    18ba:	45 9a       	sbi	0x08, 5	; 8
    18bc:	4d 9a       	sbi	0x09, 5	; 9
    18be:	8f e1       	ldi	r24, 0x1F	; 31
    18c0:	98 e3       	ldi	r25, 0x38	; 56
    18c2:	80 93 4f 39 	sts	0x394F, r24	; 0x80394f <p_GPSrcvData>
    18c6:	90 93 50 39 	sts	0x3950, r25	; 0x803950 <p_GPSrcvData+0x1>
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	0e 94 2e 0c 	call	0x185c	; 0x185c <USART0_ON>
    18d0:	08 95       	ret

000018d2 <USART0_OFF>:
    18d2:	10 92 06 08 	sts	0x0806, r1	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
    18d6:	23 9a       	sbi	0x04, 3	; 4
    18d8:	22 9a       	sbi	0x04, 2	; 4
    18da:	2a 98       	cbi	0x05, 2	; 5
    18dc:	2b 98       	cbi	0x05, 3	; 5
    18de:	08 95       	ret

000018e0 <closeGPS>:
    18e0:	45 9a       	sbi	0x08, 5	; 8
    18e2:	4d 98       	cbi	0x09, 5	; 9
    18e4:	e4 e1       	ldi	r30, 0x14	; 20
    18e6:	f4 e0       	ldi	r31, 0x04	; 4
    18e8:	80 81       	ld	r24, Z
    18ea:	87 7f       	andi	r24, 0xF7	; 247
    18ec:	80 83       	st	Z, r24
    18ee:	04 9a       	sbi	0x00, 4	; 0
    18f0:	0c 98       	cbi	0x01, 4	; 1
    18f2:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <USART0_OFF>
    18f6:	08 95       	ret

000018f8 <gTryUblox>:
    18f8:	df 92       	push	r13
    18fa:	ef 92       	push	r14
    18fc:	ff 92       	push	r15
    18fe:	0f 93       	push	r16
    1900:	1f 93       	push	r17
    1902:	cf 93       	push	r28
    1904:	df 93       	push	r29
    1906:	68 94       	set
    1908:	dd 24       	eor	r13, r13
    190a:	d3 f8       	bld	r13, 3
    190c:	e1 2c       	mov	r14, r1
    190e:	68 94       	set
    1910:	ff 24       	eor	r15, r15
    1912:	f3 f8       	bld	r15, 3
    1914:	d9 ef       	ldi	r29, 0xF9	; 249
    1916:	c3 e0       	ldi	r28, 0x03	; 3
    1918:	a8 95       	wdr
    191a:	6a ef       	ldi	r22, 0xFA	; 250
    191c:	70 e0       	ldi	r23, 0x00	; 0
    191e:	80 e0       	ldi	r24, 0x00	; 0
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1926:	0e 94 09 04 	call	0x812	; 0x812 <clrRx>
    192a:	f7 01       	movw	r30, r14
    192c:	85 81       	ldd	r24, Z+5	; 0x05
    192e:	80 68       	ori	r24, 0x80	; 128
    1930:	85 83       	std	Z+5, r24	; 0x05
    1932:	78 94       	sei
    1934:	0e 94 b9 05 	call	0xb72	; 0xb72 <gpsReqStatusUblox>
    1938:	8c 01       	movw	r16, r24
    193a:	c1 50       	subi	r28, 0x01	; 1
    193c:	21 f0       	breq	.+8      	; 0x1946 <gTryUblox+0x4e>
    193e:	8a 39       	cpi	r24, 0x9A	; 154
    1940:	92 40       	sbci	r25, 0x02	; 2
    1942:	51 f3       	breq	.-44     	; 0x1918 <gTryUblox+0x20>
    1944:	20 c0       	rjmp	.+64     	; 0x1986 <gTryUblox+0x8e>
    1946:	61 e0       	ldi	r22, 0x01	; 1
    1948:	86 e3       	ldi	r24, 0x36	; 54
    194a:	93 ea       	ldi	r25, 0xA3	; 163
    194c:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
    1950:	d1 50       	subi	r29, 0x01	; 1
    1952:	29 f0       	breq	.+10     	; 0x195e <gTryUblox+0x66>
    1954:	0a 39       	cpi	r16, 0x9A	; 154
    1956:	82 e0       	ldi	r24, 0x02	; 2
    1958:	18 07       	cpc	r17, r24
    195a:	e9 f2       	breq	.-70     	; 0x1916 <gTryUblox+0x1e>
    195c:	1b c0       	rjmp	.+54     	; 0x1994 <gTryUblox+0x9c>
    195e:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <closeGPS>
    1962:	68 ee       	ldi	r22, 0xE8	; 232
    1964:	73 e0       	ldi	r23, 0x03	; 3
    1966:	80 e0       	ldi	r24, 0x00	; 0
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    196e:	0e 94 57 0c 	call	0x18ae	; 0x18ae <openGPSuBlox>
    1972:	0e 94 02 03 	call	0x604	; 0x604 <initGPSuBlox>
    1976:	da 94       	dec	r13
    1978:	dd 20       	and	r13, r13
    197a:	61 f0       	breq	.+24     	; 0x1994 <gTryUblox+0x9c>
    197c:	0a 39       	cpi	r16, 0x9A	; 154
    197e:	e2 e0       	ldi	r30, 0x02	; 2
    1980:	1e 07       	cpc	r17, r30
    1982:	41 f2       	breq	.-112    	; 0x1914 <gTryUblox+0x1c>
    1984:	07 c0       	rjmp	.+14     	; 0x1994 <gTryUblox+0x9c>
    1986:	61 e0       	ldi	r22, 0x01	; 1
    1988:	86 e3       	ldi	r24, 0x36	; 54
    198a:	93 ea       	ldi	r25, 0xA3	; 163
    198c:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
    1990:	d1 30       	cpi	r29, 0x01	; 1
    1992:	29 f3       	breq	.-54     	; 0x195e <gTryUblox+0x66>
    1994:	c8 01       	movw	r24, r16
    1996:	df 91       	pop	r29
    1998:	cf 91       	pop	r28
    199a:	1f 91       	pop	r17
    199c:	0f 91       	pop	r16
    199e:	ff 90       	pop	r15
    19a0:	ef 90       	pop	r14
    19a2:	df 90       	pop	r13
    19a4:	08 95       	ret

000019a6 <sleepPins>:
    19a6:	cf 93       	push	r28
    19a8:	df 93       	push	r29
    19aa:	00 98       	cbi	0x00, 0	; 0
    19ac:	e0 e1       	ldi	r30, 0x10	; 16
    19ae:	f4 e0       	ldi	r31, 0x04	; 4
    19b0:	90 81       	ld	r25, Z
    19b2:	98 60       	ori	r25, 0x08	; 8
    19b4:	90 83       	st	Z, r25
    19b6:	01 98       	cbi	0x00, 1	; 0
    19b8:	e1 e1       	ldi	r30, 0x11	; 17
    19ba:	f4 e0       	ldi	r31, 0x04	; 4
    19bc:	90 81       	ld	r25, Z
    19be:	98 60       	ori	r25, 0x08	; 8
    19c0:	90 83       	st	Z, r25
    19c2:	03 98       	cbi	0x00, 3	; 0
    19c4:	e3 e1       	ldi	r30, 0x13	; 19
    19c6:	f4 e0       	ldi	r31, 0x04	; 4
    19c8:	90 81       	ld	r25, Z
    19ca:	98 60       	ori	r25, 0x08	; 8
    19cc:	90 83       	st	Z, r25
    19ce:	e4 e1       	ldi	r30, 0x14	; 20
    19d0:	f4 e0       	ldi	r31, 0x04	; 4
    19d2:	90 81       	ld	r25, Z
    19d4:	97 7f       	andi	r25, 0xF7	; 247
    19d6:	90 83       	st	Z, r25
    19d8:	04 9a       	sbi	0x00, 4	; 0
    19da:	0c 98       	cbi	0x01, 4	; 1
    19dc:	05 98       	cbi	0x00, 5	; 0
    19de:	e5 e1       	ldi	r30, 0x15	; 21
    19e0:	f4 e0       	ldi	r31, 0x04	; 4
    19e2:	90 81       	ld	r25, Z
    19e4:	98 60       	ori	r25, 0x08	; 8
    19e6:	90 83       	st	Z, r25
    19e8:	06 98       	cbi	0x00, 6	; 0
    19ea:	e6 e1       	ldi	r30, 0x16	; 22
    19ec:	f4 e0       	ldi	r31, 0x04	; 4
    19ee:	90 81       	ld	r25, Z
    19f0:	98 60       	ori	r25, 0x08	; 8
    19f2:	90 83       	st	Z, r25
    19f4:	07 98       	cbi	0x00, 7	; 0
    19f6:	e7 e1       	ldi	r30, 0x17	; 23
    19f8:	f4 e0       	ldi	r31, 0x04	; 4
    19fa:	90 81       	ld	r25, Z
    19fc:	98 60       	ori	r25, 0x08	; 8
    19fe:	90 83       	st	Z, r25
    1a00:	20 98       	cbi	0x04, 0	; 4
    1a02:	e0 e3       	ldi	r30, 0x30	; 48
    1a04:	f4 e0       	ldi	r31, 0x04	; 4
    1a06:	90 81       	ld	r25, Z
    1a08:	97 7f       	andi	r25, 0xF7	; 247
    1a0a:	90 83       	st	Z, r25
    1a0c:	21 98       	cbi	0x04, 1	; 4
    1a0e:	e1 e3       	ldi	r30, 0x31	; 49
    1a10:	f4 e0       	ldi	r31, 0x04	; 4
    1a12:	90 81       	ld	r25, Z
    1a14:	98 60       	ori	r25, 0x08	; 8
    1a16:	90 83       	st	Z, r25
    1a18:	22 98       	cbi	0x04, 2	; 4
    1a1a:	e2 e3       	ldi	r30, 0x32	; 50
    1a1c:	f4 e0       	ldi	r31, 0x04	; 4
    1a1e:	90 81       	ld	r25, Z
    1a20:	97 7f       	andi	r25, 0xF7	; 247
    1a22:	90 83       	st	Z, r25
    1a24:	23 98       	cbi	0x04, 3	; 4
    1a26:	e3 e3       	ldi	r30, 0x33	; 51
    1a28:	f4 e0       	ldi	r31, 0x04	; 4
    1a2a:	90 81       	ld	r25, Z
    1a2c:	97 7f       	andi	r25, 0xF7	; 247
    1a2e:	90 83       	st	Z, r25
    1a30:	24 98       	cbi	0x04, 4	; 4
    1a32:	e4 e3       	ldi	r30, 0x34	; 52
    1a34:	f4 e0       	ldi	r31, 0x04	; 4
    1a36:	90 81       	ld	r25, Z
    1a38:	98 60       	ori	r25, 0x08	; 8
    1a3a:	90 83       	st	Z, r25
    1a3c:	25 98       	cbi	0x04, 5	; 4
    1a3e:	e5 e3       	ldi	r30, 0x35	; 53
    1a40:	f4 e0       	ldi	r31, 0x04	; 4
    1a42:	90 81       	ld	r25, Z
    1a44:	98 60       	ori	r25, 0x08	; 8
    1a46:	90 83       	st	Z, r25
    1a48:	26 98       	cbi	0x04, 6	; 4
    1a4a:	e6 e3       	ldi	r30, 0x36	; 54
    1a4c:	f4 e0       	ldi	r31, 0x04	; 4
    1a4e:	90 81       	ld	r25, Z
    1a50:	97 7f       	andi	r25, 0xF7	; 247
    1a52:	90 83       	st	Z, r25
    1a54:	27 98       	cbi	0x04, 7	; 4
    1a56:	e7 e3       	ldi	r30, 0x37	; 55
    1a58:	f4 e0       	ldi	r31, 0x04	; 4
    1a5a:	90 81       	ld	r25, Z
    1a5c:	98 60       	ori	r25, 0x08	; 8
    1a5e:	90 83       	st	Z, r25
    1a60:	40 98       	cbi	0x08, 0	; 8
    1a62:	e0 e5       	ldi	r30, 0x50	; 80
    1a64:	f4 e0       	ldi	r31, 0x04	; 4
    1a66:	90 81       	ld	r25, Z
    1a68:	98 60       	ori	r25, 0x08	; 8
    1a6a:	90 83       	st	Z, r25
    1a6c:	41 98       	cbi	0x08, 1	; 8
    1a6e:	e1 e5       	ldi	r30, 0x51	; 81
    1a70:	f4 e0       	ldi	r31, 0x04	; 4
    1a72:	90 81       	ld	r25, Z
    1a74:	98 60       	ori	r25, 0x08	; 8
    1a76:	90 83       	st	Z, r25
    1a78:	88 23       	and	r24, r24
    1a7a:	29 f0       	breq	.+10     	; 0x1a86 <sleepPins+0xe0>
    1a7c:	80 81       	ld	r24, Z
    1a7e:	88 7f       	andi	r24, 0xF8	; 248
    1a80:	85 60       	ori	r24, 0x05	; 5
    1a82:	80 83       	st	Z, r24
    1a84:	05 c0       	rjmp	.+10     	; 0x1a90 <sleepPins+0xea>
    1a86:	e1 e5       	ldi	r30, 0x51	; 81
    1a88:	f4 e0       	ldi	r31, 0x04	; 4
    1a8a:	80 81       	ld	r24, Z
    1a8c:	88 7f       	andi	r24, 0xF8	; 248
    1a8e:	80 83       	st	Z, r24
    1a90:	42 98       	cbi	0x08, 2	; 8
    1a92:	e2 e5       	ldi	r30, 0x52	; 82
    1a94:	f4 e0       	ldi	r31, 0x04	; 4
    1a96:	80 81       	ld	r24, Z
    1a98:	88 60       	ori	r24, 0x08	; 8
    1a9a:	80 83       	st	Z, r24
    1a9c:	43 98       	cbi	0x08, 3	; 8
    1a9e:	e3 e5       	ldi	r30, 0x53	; 83
    1aa0:	f4 e0       	ldi	r31, 0x04	; 4
    1aa2:	80 81       	ld	r24, Z
    1aa4:	87 7f       	andi	r24, 0xF7	; 247
    1aa6:	80 83       	st	Z, r24
    1aa8:	44 98       	cbi	0x08, 4	; 8
    1aaa:	e4 e5       	ldi	r30, 0x54	; 84
    1aac:	f4 e0       	ldi	r31, 0x04	; 4
    1aae:	80 81       	ld	r24, Z
    1ab0:	88 60       	ori	r24, 0x08	; 8
    1ab2:	80 83       	st	Z, r24
    1ab4:	c5 e5       	ldi	r28, 0x55	; 85
    1ab6:	d4 e0       	ldi	r29, 0x04	; 4
    1ab8:	88 81       	ld	r24, Y
    1aba:	87 7f       	andi	r24, 0xF7	; 247
    1abc:	88 83       	st	Y, r24
    1abe:	45 9a       	sbi	0x08, 5	; 8
    1ac0:	4d 98       	cbi	0x09, 5	; 9
    1ac2:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
    1ac6:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1aca:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <closeGPS>
    1ace:	88 81       	ld	r24, Y
    1ad0:	88 60       	ori	r24, 0x08	; 8
    1ad2:	88 83       	st	Y, r24
    1ad4:	df 91       	pop	r29
    1ad6:	cf 91       	pop	r28
    1ad8:	08 95       	ret

00001ada <getGPS>:
    1ada:	0f 93       	push	r16
    1adc:	1f 93       	push	r17
    1ade:	cf 93       	push	r28
    1ae0:	0e 94 57 0c 	call	0x18ae	; 0x18ae <openGPSuBlox>
    1ae4:	0e 94 02 03 	call	0x604	; 0x604 <initGPSuBlox>
    1ae8:	0e 94 02 03 	call	0x604	; 0x604 <initGPSuBlox>
    1aec:	0e 94 02 03 	call	0x604	; 0x604 <initGPSuBlox>
    1af0:	10 92 45 39 	sts	0x3945, r1	; 0x803945 <timeToFix>
    1af4:	10 92 46 39 	sts	0x3946, r1	; 0x803946 <timeToFix+0x1>
    1af8:	0e 94 ad 00 	call	0x15a	; 0x15a <getBatt>
    1afc:	80 93 1d 39 	sts	0x391D, r24	; 0x80391d <gpsParams+0x10>
    1b00:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <gTryUblox>
    1b04:	8c 01       	movw	r16, r24
    1b06:	89 2b       	or	r24, r25
    1b08:	59 f0       	breq	.+22     	; 0x1b20 <getGPS+0x46>
    1b0a:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <closeGPS>
    1b0e:	0a e9       	ldi	r16, 0x9A	; 154
    1b10:	12 e0       	ldi	r17, 0x02	; 2
    1b12:	2a c0       	rjmp	.+84     	; 0x1b68 <getGPS+0x8e>
    1b14:	c1 50       	subi	r28, 0x01	; 1
    1b16:	29 f4       	brne	.+10     	; 0x1b22 <getGPS+0x48>
    1b18:	0f c0       	rjmp	.+30     	; 0x1b38 <getGPS+0x5e>
    1b1a:	c1 11       	cpse	r28, r1
    1b1c:	09 c0       	rjmp	.+18     	; 0x1b30 <getGPS+0x56>
    1b1e:	0c c0       	rjmp	.+24     	; 0x1b38 <getGPS+0x5e>
    1b20:	cf e0       	ldi	r28, 0x0F	; 15
    1b22:	0e 94 86 05 	call	0xb0c	; 0xb0c <GPSgetDate>
    1b26:	89 2b       	or	r24, r25
    1b28:	a9 f7       	brne	.-22     	; 0x1b14 <getGPS+0x3a>
    1b2a:	f7 cf       	rjmp	.-18     	; 0x1b1a <getGPS+0x40>
    1b2c:	c1 50       	subi	r28, 0x01	; 1
    1b2e:	21 f0       	breq	.+8      	; 0x1b38 <getGPS+0x5e>
    1b30:	0e 94 ce 08 	call	0x119c	; 0x119c <GPSgetTime>
    1b34:	89 2b       	or	r24, r25
    1b36:	d1 f7       	brne	.-12     	; 0x1b2c <getGPS+0x52>
    1b38:	6a e0       	ldi	r22, 0x0A	; 10
    1b3a:	88 e3       	ldi	r24, 0x38	; 56
    1b3c:	93 ea       	ldi	r25, 0xA3	; 163
    1b3e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
    1b42:	f8 94       	cli
    1b44:	78 94       	sei
    1b46:	a8 95       	wdr
    1b48:	60 ed       	ldi	r22, 0xD0	; 208
    1b4a:	77 e0       	ldi	r23, 0x07	; 7
    1b4c:	80 e0       	ldi	r24, 0x00	; 0
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1b54:	a8 95       	wdr
    1b56:	60 ed       	ldi	r22, 0xD0	; 208
    1b58:	77 e0       	ldi	r23, 0x07	; 7
    1b5a:	80 e0       	ldi	r24, 0x00	; 0
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
    1b62:	a8 95       	wdr
    1b64:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <USART0_OFF>
    1b68:	c8 01       	movw	r24, r16
    1b6a:	cf 91       	pop	r28
    1b6c:	1f 91       	pop	r17
    1b6e:	0f 91       	pop	r16
    1b70:	08 95       	ret

00001b72 <pirSUdelay>:
    1b72:	80 e0       	ldi	r24, 0x00	; 0
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	00 00       	nop
    1b78:	01 96       	adiw	r24, 0x01	; 1
    1b7a:	8c 33       	cpi	r24, 0x3C	; 60
    1b7c:	91 05       	cpc	r25, r1
    1b7e:	d9 f7       	brne	.-10     	; 0x1b76 <pirSUdelay+0x4>
    1b80:	08 95       	ret

00001b82 <setPIRbit>:
    1b82:	0f 93       	push	r16
    1b84:	1f 93       	push	r17
    1b86:	cf 93       	push	r28
    1b88:	df 93       	push	r29
    1b8a:	c7 e0       	ldi	r28, 0x07	; 7
    1b8c:	d0 e0       	ldi	r29, 0x00	; 0
    1b8e:	08 2f       	mov	r16, r24
    1b90:	10 e0       	ldi	r17, 0x00	; 0
    1b92:	2f 98       	cbi	0x05, 7	; 5
    1b94:	00 00       	nop
    1b96:	00 00       	nop
    1b98:	2f 9a       	sbi	0x05, 7	; 5
    1b9a:	00 00       	nop
    1b9c:	00 00       	nop
    1b9e:	98 01       	movw	r18, r16
    1ba0:	0c 2e       	mov	r0, r28
    1ba2:	02 c0       	rjmp	.+4      	; 0x1ba8 <setPIRbit+0x26>
    1ba4:	35 95       	asr	r19
    1ba6:	27 95       	ror	r18
    1ba8:	0a 94       	dec	r0
    1baa:	e2 f7       	brpl	.-8      	; 0x1ba4 <setPIRbit+0x22>
    1bac:	20 fd       	sbrc	r18, 0
    1bae:	02 c0       	rjmp	.+4      	; 0x1bb4 <setPIRbit+0x32>
    1bb0:	2f 98       	cbi	0x05, 7	; 5
    1bb2:	01 c0       	rjmp	.+2      	; 0x1bb6 <setPIRbit+0x34>
    1bb4:	2f 9a       	sbi	0x05, 7	; 5
    1bb6:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <pirSUdelay>
    1bba:	21 97       	sbiw	r28, 0x01	; 1
    1bbc:	50 f7       	brcc	.-44     	; 0x1b92 <setPIRbit+0x10>
    1bbe:	df 91       	pop	r29
    1bc0:	cf 91       	pop	r28
    1bc2:	1f 91       	pop	r17
    1bc4:	0f 91       	pop	r16
    1bc6:	08 95       	ret

00001bc8 <setPIRconfig>:
    1bc8:	1f 93       	push	r17
    1bca:	cf 93       	push	r28
    1bcc:	df 93       	push	r29
    1bce:	16 2f       	mov	r17, r22
    1bd0:	d4 2f       	mov	r29, r20
    1bd2:	c2 2f       	mov	r28, r18
    1bd4:	2f 98       	cbi	0x05, 7	; 5
    1bd6:	27 9a       	sbi	0x04, 7	; 4
    1bd8:	2f 98       	cbi	0x05, 7	; 5
    1bda:	00 00       	nop
    1bdc:	00 00       	nop
    1bde:	2f 9a       	sbi	0x05, 7	; 5
    1be0:	00 00       	nop
    1be2:	00 00       	nop
    1be4:	80 fd       	sbrc	r24, 0
    1be6:	02 c0       	rjmp	.+4      	; 0x1bec <setPIRconfig+0x24>
    1be8:	2f 98       	cbi	0x05, 7	; 5
    1bea:	01 c0       	rjmp	.+2      	; 0x1bee <setPIRconfig+0x26>
    1bec:	2f 9a       	sbi	0x05, 7	; 5
    1bee:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <pirSUdelay>
    1bf2:	81 2f       	mov	r24, r17
    1bf4:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <setPIRbit>
    1bf8:	8d 2f       	mov	r24, r29
    1bfa:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <setPIRbit>
    1bfe:	8c 2f       	mov	r24, r28
    1c00:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <setPIRbit>
    1c04:	df 91       	pop	r29
    1c06:	cf 91       	pop	r28
    1c08:	1f 91       	pop	r17
    1c0a:	08 95       	ret

00001c0c <pirCLKdelay>:
    1c0c:	00 00       	nop
    1c0e:	08 95       	ret

00001c10 <clearPIRinterrupt>:
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1c10:	26 9a       	sbi	0x04, 6	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1c12:	2e 98       	cbi	0x05, 6	; 5
*    PIR Clear Interrupt
********************************************/
void clearPIRinterrupt(){
	TPB6_set_dir(PORT_DIR_OUT);
	PORTB_set_pin_level(6, 0);
	pirCLKdelay();
    1c14:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <pirCLKdelay>
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    1c18:	26 98       	cbi	0x04, 6	; 4
    1c1a:	08 95       	ret

00001c1c <main>:
	unsigned int pirD=0;
	unsigned int pirE=0;
	short sensitivtyAll = PIR_SENSITIVITY;//birdbox 0060  May 2019
	short rcvdSensitivtyAll;

	g_motionMinTotal=0;
    1c1c:	10 92 18 38 	sts	0x3818, r1	; 0x803818 <g_motionMinTotal>
	
	
	

	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    1c20:	0e 94 aa 00 	call	0x154	; 0x154 <atmel_start_init>
	CCP = 0xD8;//enable writes to WDT
    1c24:	88 ed       	ldi	r24, 0xD8	; 216
    1c26:	84 bf       	out	0x34, r24	; 52
	WDT.STATUS = 0x00;//
    1c28:	e0 e0       	ldi	r30, 0x00	; 0
    1c2a:	f1 e0       	ldi	r31, 0x01	; 1
    1c2c:	11 82       	std	Z+1, r1	; 0x01
	CCP = 0xD8;//enable writes to WDT
    1c2e:	84 bf       	out	0x34, r24	; 52
	WDT.CTRLA = 0;//MY_WDT;//0=disable watchdog. 0x0B=8 seconds
    1c30:	10 82       	st	Z, r1

	DISABLE_INTERRUPTS();
    1c32:	f8 94       	cli
	ccp_write_io((void*)&(CLKCTRL.OSC32KCTRLA),1 << CLKCTRL_RUNSTDBY_bp /* Run standby: enabled */);
    1c34:	62 e0       	ldi	r22, 0x02	; 2
    1c36:	70 e0       	ldi	r23, 0x00	; 0
    1c38:	88 e7       	ldi	r24, 0x78	; 120
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	0e 94 33 11 	call	0x2266	; 0x2266 <ccp_write_io>
	redBlink(11);
    1c40:	8b e0       	ldi	r24, 0x0B	; 11
    1c42:	0e 94 b7 02 	call	0x56e	; 0x56e <redBlink>
	mState=BEGIN;
    1c46:	10 92 4e 39 	sts	0x394E, r1	; 0x80394e <mState>
    1c4a:	e5 ed       	ldi	r30, 0xD5	; 213
    1c4c:	f8 e3       	ldi	r31, 0x38	; 56
    1c4e:	8d e0       	ldi	r24, 0x0D	; 13
    1c50:	99 e3       	ldi	r25, 0x39	; 57
	for (iters=0;iters<SIZEOFMOTPARAMS;iters++)motParams[iters]=0;//SizeOfMotParams = 56
    1c52:	11 92       	st	Z+, r1
    1c54:	e8 17       	cp	r30, r24
    1c56:	f9 07       	cpc	r31, r25
    1c58:	e1 f7       	brne	.-8      	; 0x1c52 <main+0x36>
	sleepPins(1);
    1c5a:	81 e0       	ldi	r24, 0x01	; 1
    1c5c:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <sleepPins>
	NOP();
    1c60:	00 00       	nop
	WDT_RST();
    1c62:	a8 95       	wdr
	NOP();
	sleep_enable();
	sleep_cpu();
#endif
#ifdef DO_DIAGS
	USART_0_initialization();
    1c64:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
#ifdef DO_DIAGS
	usart_put_string(&("HeartBeat "),10);
#endif
  }
#endif
	DISABLE_INTERRUPTS();
    1c68:	f8 94       	cli

#ifdef DO_DIAGS
	short battVal;
	  USART_0_initialization();
    1c6a:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
//	  for(;;){
//	LCDclear();
	usart_put_string(&("BOOTA\r\n"),7);
    1c6e:	67 e0       	ldi	r22, 0x07	; 7
    1c70:	83 e4       	ldi	r24, 0x43	; 67
    1c72:	93 ea       	ldi	r25, 0xA3	; 163
    1c74:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
//	delay_ms(100);
//	LCDbottomLine();
//	usart_put_string(&("Startup B"),9);
//	delay_ms(100);
		WDT_RST();
    1c78:	a8 95       	wdr
		delay_ms(1000);
    1c7a:	68 ee       	ldi	r22, 0xE8	; 232
    1c7c:	73 e0       	ldi	r23, 0x03	; 3
    1c7e:	80 e0       	ldi	r24, 0x00	; 0
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
	  char returnStr[]={0x0A,0x0D};
	  int countGPStest = 0;
	  int delay_ctr;
	  short gotALS,gotProx;

	g_sensitivityHiBit = sensitivtyAll>>8;
    1c86:	10 92 51 39 	sts	0x3951, r1	; 0x803951 <g_sensitivityHiBit>
	g_sensitivityLoByte = (char)(sensitivtyAll&0x00FF);
    1c8a:	10 ec       	ldi	r17, 0xC0	; 192
    1c8c:	10 93 4d 39 	sts	0x394D, r17	; 0x80394d <g_sensitivityLoByte>
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1c90:	27 9a       	sbi	0x04, 7	; 4
	TPB7_set_dir(PORT_DIR_OUT);
	setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1c92:	21 e3       	ldi	r18, 0x31	; 49
    1c94:	41 e0       	ldi	r20, 0x01	; 1
    1c96:	60 91 4d 39 	lds	r22, 0x394D	; 0x80394d <g_sensitivityLoByte>
    1c9a:	80 91 51 39 	lds	r24, 0x3951	; 0x803951 <g_sensitivityHiBit>
    1c9e:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <setPIRconfig>
	delay_ms(1000);
    1ca2:	68 ee       	ldi	r22, 0xE8	; 232
    1ca4:	73 e0       	ldi	r23, 0x03	; 3
    1ca6:	80 e0       	ldi	r24, 0x00	; 0
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
	setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1cae:	21 e3       	ldi	r18, 0x31	; 49
    1cb0:	41 e0       	ldi	r20, 0x01	; 1
    1cb2:	60 91 4d 39 	lds	r22, 0x394D	; 0x80394d <g_sensitivityLoByte>
    1cb6:	80 91 51 39 	lds	r24, 0x3951	; 0x803951 <g_sensitivityHiBit>
    1cba:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <setPIRconfig>
	VPORTA_INTFLAGS = 0xFF;
    1cbe:	8f ef       	ldi	r24, 0xFF	; 255
    1cc0:	83 b9       	out	0x03, r24	; 3
	VPORTB_INTFLAGS = 0xFF;
    1cc2:	87 b9       	out	0x07, r24	; 7
	//	VPORTC_INTFLAGS = 0x3F;
//	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
//	TPB6_set_isc(PORT_ISC_RISING_gc);//Motion Switch
	*((uint8_t*)0x0A4A)&=~0x31;//TCA0 Ints
    1cc4:	aa e4       	ldi	r26, 0x4A	; 74
    1cc6:	ba e0       	ldi	r27, 0x0A	; 10
    1cc8:	2c 91       	ld	r18, X
    1cca:	2e 7c       	andi	r18, 0xCE	; 206
    1ccc:	2c 93       	st	X, r18
	*((uint8_t*)0x0A4B)|=0x31;//TCA0 Flags
    1cce:	eb e4       	ldi	r30, 0x4B	; 75
    1cd0:	fa e0       	ldi	r31, 0x0A	; 10
    1cd2:	90 81       	ld	r25, Z
    1cd4:	91 63       	ori	r25, 0x31	; 49
    1cd6:	90 83       	st	Z, r25
setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08

}*/
/**** END DEV ****/

	VPORTA_INTFLAGS = 0xFF;
    1cd8:	83 b9       	out	0x03, r24	; 3
	VPORTB_INTFLAGS = 0xFF;
    1cda:	87 b9       	out	0x07, r24	; 7
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1cdc:	41 e5       	ldi	r20, 0x51	; 81
    1cde:	54 e0       	ldi	r21, 0x04	; 4
    1ce0:	ea 01       	movw	r28, r20
    1ce2:	88 81       	ld	r24, Y
    1ce4:	88 7f       	andi	r24, 0xF8	; 248
    1ce6:	85 60       	ori	r24, 0x05	; 5
    1ce8:	88 83       	st	Y, r24
//	VPORTC_INTFLAGS = 0x3F;
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
//	TPB6_set_isc(PORT_ISC_RISING_gc);//Motion Switch
    *((uint8_t*)0x0A4A)&=~0x31;//TCA0 Ints
    1cea:	2c 93       	st	X, r18
    *((uint8_t*)0x0A4B)|=0x31;//TCA0 Flags
    1cec:	90 83       	st	Z, r25
	USART0_OFF();
    1cee:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <USART0_OFF>

	ENABLE_INTERRUPTS();
    1cf2:	78 94       	sei
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1cf4:	c3 e0       	ldi	r28, 0x03	; 3
    1cf6:	c0 93 50 00 	sts	0x0050, r28	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600); /* set baud rate register for LCD*/
    1cfa:	8c e6       	ldi	r24, 0x6C	; 108
    1cfc:	95 e0       	ldi	r25, 0x05	; 5
    1cfe:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x700808>
    1d02:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x700809>
		SLEEP();
	}
	WDT_RST();
	delay_ms(1000);
#endif
	usart_put_string("PAST SOLAR\r\n",12);
    1d06:	6c e0       	ldi	r22, 0x0C	; 12
    1d08:	8b e4       	ldi	r24, 0x4B	; 75
    1d0a:	93 ea       	ldi	r25, 0xA3	; 163
    1d0c:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>

g_sensitivityHiBit = sensitivtyAll>>8;
    1d10:	10 92 51 39 	sts	0x3951, r1	; 0x803951 <g_sensitivityHiBit>
g_sensitivityLoByte = (char)(sensitivtyAll&0x00FF);
    1d14:	10 93 4d 39 	sts	0x394D, r17	; 0x80394d <g_sensitivityLoByte>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1d18:	27 9a       	sbi	0x04, 7	; 4
TPB7_set_dir(PORT_DIR_OUT);
setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1d1a:	21 e3       	ldi	r18, 0x31	; 49
    1d1c:	41 e0       	ldi	r20, 0x01	; 1
    1d1e:	60 91 4d 39 	lds	r22, 0x394D	; 0x80394d <g_sensitivityLoByte>
    1d22:	80 91 51 39 	lds	r24, 0x3951	; 0x803951 <g_sensitivityHiBit>
    1d26:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <setPIRconfig>
delay_ms(1000);
    1d2a:	68 ee       	ldi	r22, 0xE8	; 232
    1d2c:	73 e0       	ldi	r23, 0x03	; 3
    1d2e:	80 e0       	ldi	r24, 0x00	; 0
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
setPIRconfig(g_sensitivityHiBit,g_sensitivityLoByte,0x01,0x31);//sensitivity 01,FE,00,00. Lower number is more sensitive. 0,08
    1d36:	21 e3       	ldi	r18, 0x31	; 49
    1d38:	41 e0       	ldi	r20, 0x01	; 1
    1d3a:	60 91 4d 39 	lds	r22, 0x394D	; 0x80394d <g_sensitivityLoByte>
    1d3e:	80 91 51 39 	lds	r24, 0x3951	; 0x803951 <g_sensitivityHiBit>
    1d42:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <setPIRconfig>


g_motSecCtr=200;
    1d46:	88 ec       	ldi	r24, 0xC8	; 200
    1d48:	80 93 1b 38 	sts	0x381B, r24	; 0x80381b <g_motSecCtr>
g_5secCtr=0;
    1d4c:	10 92 1a 38 	sts	0x381A, r1	; 0x80381a <g_5secCtr>
g_block5index=0;
    1d50:	10 92 19 38 	sts	0x3819, r1	; 0x803819 <g_block5index>
g_holdForBigFlag=3;
    1d54:	c0 93 00 38 	sts	0x3800, r28	; 0x803800 <_edata>

char detectedMot=0;
char newProx;
#ifdef NO_GPS
	mState=IDLE;
    1d58:	87 e0       	ldi	r24, 0x07	; 7
    1d5a:	80 93 4e 39 	sts	0x394E, r24	; 0x80394e <mState>
			if((rcvdCmd&0x10)==0x10){
				rcvdCmd=0;
				mState=GET_GPS;
				}
		break;
		default: mState=IDLE;
    1d5e:	0f 2e       	mov	r0, r31
    1d60:	f7 e0       	ldi	r31, 0x07	; 7
    1d62:	bf 2e       	mov	r11, r31
    1d64:	f0 2d       	mov	r31, r0
		case NO_INITIAL_GPS_LONGTERM://6
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_LONGTERM;
		break;
		case IDLE://7
			WDT.CTRLA = 0;//disable watchdog
    1d66:	e1 2c       	mov	r14, r1
    1d68:	ff 24       	eor	r15, r15
    1d6a:	f3 94       	inc	r15
			closeGPS();
			clearPIRinterrupt();
			if((rcvdCmd&0x10)==0x10){
				rcvdCmd=0;
				mState=GET_GPS;
    1d6c:	68 94       	set
    1d6e:	77 24       	eor	r7, r7
    1d70:	71 f8       	bld	r7, 1
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_LONGTERM;
		break;
		case NO_INITIAL_GPS_LONGTERM://6
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_LONGTERM;
    1d72:	0f 2e       	mov	r0, r31
    1d74:	f6 e0       	ldi	r31, 0x06	; 6
    1d76:	af 2e       	mov	r10, r31
    1d78:	f0 2d       	mov	r31, r0
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_B;
		break;
		case NO_INITIAL_GPS_B://4
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_C;
    1d7a:	0f 2e       	mov	r0, r31
    1d7c:	f5 e0       	ldi	r31, 0x05	; 5
    1d7e:	8f 2e       	mov	r8, r31
    1d80:	f0 2d       	mov	r31, r0
				#endif				
				mState=IDLE;
		break;
		case NO_INITIAL_GPS_A://3
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_B;
    1d82:	68 94       	set
    1d84:	99 24       	eor	r9, r9
    1d86:	92 f8       	bld	r9, 2
				mState=INITIAL_GPS;
				redBlinkLong(1);
		break;
		case INITIAL_GPS://
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
				else mState=NO_INITIAL_GPS_A;
    1d88:	0f 2e       	mov	r0, r31
    1d8a:	f3 e0       	ldi	r31, 0x03	; 3
    1d8c:	cf 2e       	mov	r12, r31
    1d8e:	f0 2d       	mov	r31, r0

for(;;){
	WDT_RST();
	switch(mState){
		case BEGIN://0
				mState=INITIAL_GPS;
    1d90:	dd 24       	eor	r13, r13
    1d92:	d3 94       	inc	r13
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1d94:	c1 e5       	ldi	r28, 0x51	; 81
    1d96:	d4 e0       	ldi	r29, 0x04	; 4

	sleepPins(1);
	ENABLE_INTERRUPTS();//might not have to do this every time.
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
//	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1d98:	00 e5       	ldi	r16, 0x50	; 80
    1d9a:	10 e0       	ldi	r17, 0x00	; 0
#else
	mState=BEGIN;
#endif

for(;;){
	WDT_RST();
    1d9c:	a8 95       	wdr
	switch(mState){
    1d9e:	e0 91 4e 39 	lds	r30, 0x394E	; 0x80394e <mState>
    1da2:	8e 2f       	mov	r24, r30
    1da4:	90 e0       	ldi	r25, 0x00	; 0
    1da6:	88 30       	cpi	r24, 0x08	; 8
    1da8:	91 05       	cpc	r25, r1
    1daa:	08 f0       	brcs	.+2      	; 0x1dae <main+0x192>
    1dac:	63 c0       	rjmp	.+198    	; 0x1e74 <main+0x258>
    1dae:	fc 01       	movw	r30, r24
    1db0:	e2 57       	subi	r30, 0x72	; 114
    1db2:	ff 4f       	sbci	r31, 0xFF	; 255
    1db4:	0c 94 2d 11 	jmp	0x225a	; 0x225a <__tablejump2__>
		case BEGIN://0
				mState=INITIAL_GPS;
    1db8:	d0 92 4e 39 	sts	0x394E, r13	; 0x80394e <mState>
				redBlinkLong(1);
    1dbc:	8d 2d       	mov	r24, r13
    1dbe:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <redBlinkLong>
		break;
    1dc2:	5a c0       	rjmp	.+180    	; 0x1e78 <main+0x25c>
		case INITIAL_GPS://
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1dc4:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <getGPS>
    1dc8:	89 2b       	or	r24, r25
    1dca:	19 f4       	brne	.+6      	; 0x1dd2 <main+0x1b6>
    1dcc:	b0 92 4e 39 	sts	0x394E, r11	; 0x80394e <mState>
    1dd0:	02 c0       	rjmp	.+4      	; 0x1dd6 <main+0x1ba>
				else mState=NO_INITIAL_GPS_A;
    1dd2:	c0 92 4e 39 	sts	0x394E, r12	; 0x80394e <mState>
				#ifdef DO_DIAGS
					USART_0_initialization();
    1dd6:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
					LCDclear();
    1dda:	0e 94 e6 03 	call	0x7cc	; 0x7cc <LCDclear>
					usart_put_string("Got Initial GPS",15);
    1dde:	6f e0       	ldi	r22, 0x0F	; 15
    1de0:	88 e5       	ldi	r24, 0x58	; 88
    1de2:	93 ea       	ldi	r25, 0xA3	; 163
    1de4:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
				#endif
		break;
    1de8:	47 c0       	rjmp	.+142    	; 0x1e78 <main+0x25c>
		case GET_GPS://2
//				getGPS();
				closeGPS();
    1dea:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <closeGPS>
				#ifdef DO_DIAGS
				    USART_0_initialization();
    1dee:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
					LCDclear ();
    1df2:	0e 94 e6 03 	call	0x7cc	; 0x7cc <LCDclear>
					usart_put_string("GotGPS",6);
    1df6:	6a 2d       	mov	r22, r10
    1df8:	88 e6       	ldi	r24, 0x68	; 104
    1dfa:	93 ea       	ldi	r25, 0xA3	; 163
    1dfc:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
				#endif				
				mState=IDLE;
    1e00:	b0 92 4e 39 	sts	0x394E, r11	; 0x80394e <mState>
		break;
    1e04:	39 c0       	rjmp	.+114    	; 0x1e78 <main+0x25c>
		case NO_INITIAL_GPS_A://3
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e06:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <getGPS>
    1e0a:	89 2b       	or	r24, r25
    1e0c:	19 f4       	brne	.+6      	; 0x1e14 <main+0x1f8>
    1e0e:	b0 92 4e 39 	sts	0x394E, r11	; 0x80394e <mState>
    1e12:	32 c0       	rjmp	.+100    	; 0x1e78 <main+0x25c>
				else mState=NO_INITIAL_GPS_B;
    1e14:	90 92 4e 39 	sts	0x394E, r9	; 0x80394e <mState>
    1e18:	2f c0       	rjmp	.+94     	; 0x1e78 <main+0x25c>
		break;
		case NO_INITIAL_GPS_B://4
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e1a:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <getGPS>
    1e1e:	89 2b       	or	r24, r25
    1e20:	19 f4       	brne	.+6      	; 0x1e28 <main+0x20c>
    1e22:	b0 92 4e 39 	sts	0x394E, r11	; 0x80394e <mState>
    1e26:	28 c0       	rjmp	.+80     	; 0x1e78 <main+0x25c>
				else mState=NO_INITIAL_GPS_C;
    1e28:	80 92 4e 39 	sts	0x394E, r8	; 0x80394e <mState>
    1e2c:	25 c0       	rjmp	.+74     	; 0x1e78 <main+0x25c>
		break;
		case NO_INITIAL_GPS_C://5
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e2e:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <getGPS>
    1e32:	89 2b       	or	r24, r25
    1e34:	19 f4       	brne	.+6      	; 0x1e3c <main+0x220>
    1e36:	b0 92 4e 39 	sts	0x394E, r11	; 0x80394e <mState>
    1e3a:	1e c0       	rjmp	.+60     	; 0x1e78 <main+0x25c>
				else mState=NO_INITIAL_GPS_LONGTERM;
    1e3c:	a0 92 4e 39 	sts	0x394E, r10	; 0x80394e <mState>
    1e40:	1b c0       	rjmp	.+54     	; 0x1e78 <main+0x25c>
		break;
		case NO_INITIAL_GPS_LONGTERM://6
				if(!getGPS())mState=IDLE; //returns 0 if uBloxStatus = 41 and then got good date and time and sent to BIG
    1e42:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <getGPS>
    1e46:	89 2b       	or	r24, r25
    1e48:	19 f4       	brne	.+6      	; 0x1e50 <main+0x234>
    1e4a:	b0 92 4e 39 	sts	0x394E, r11	; 0x80394e <mState>
    1e4e:	14 c0       	rjmp	.+40     	; 0x1e78 <main+0x25c>
				else mState=NO_INITIAL_GPS_LONGTERM;
    1e50:	a0 92 4e 39 	sts	0x394E, r10	; 0x80394e <mState>
    1e54:	11 c0       	rjmp	.+34     	; 0x1e78 <main+0x25c>
		break;
		case IDLE://7
			WDT.CTRLA = 0;//disable watchdog
    1e56:	f7 01       	movw	r30, r14
    1e58:	10 82       	st	Z, r1
			closeGPS();
    1e5a:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <closeGPS>
			clearPIRinterrupt();
    1e5e:	0e 94 08 0e 	call	0x1c10	; 0x1c10 <clearPIRinterrupt>
			if((rcvdCmd&0x10)==0x10){
    1e62:	80 91 48 39 	lds	r24, 0x3948	; 0x803948 <rcvdCmd>
    1e66:	84 ff       	sbrs	r24, 4
    1e68:	07 c0       	rjmp	.+14     	; 0x1e78 <main+0x25c>
				rcvdCmd=0;
    1e6a:	10 92 48 39 	sts	0x3948, r1	; 0x803948 <rcvdCmd>
				mState=GET_GPS;
    1e6e:	70 92 4e 39 	sts	0x394E, r7	; 0x80394e <mState>
    1e72:	02 c0       	rjmp	.+4      	; 0x1e78 <main+0x25c>
				}
		break;
		default: mState=IDLE;
    1e74:	b0 92 4e 39 	sts	0x394E, r11	; 0x80394e <mState>
		break;
	}

	sleepPins(1);
    1e78:	8d 2d       	mov	r24, r13
    1e7a:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <sleepPins>
	ENABLE_INTERRUPTS();//might not have to do this every time.
    1e7e:	78 94       	sei
    1e80:	88 81       	ld	r24, Y
    1e82:	88 7f       	andi	r24, 0xF8	; 248
    1e84:	85 60       	ori	r24, 0x05	; 5
    1e86:	88 83       	st	Y, r24
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
//	TPB6_set_isc(PORT_ISC_RISING_gc);	//Motion Direct Line
	SLPCTRL.CTRLA = 0x03;	//03=enable STANDBY SLEEP 0.0021 mA. 01=enable IDLE SLEEP  0.774 mA. 05=enable PWR DN SLEEP  0.0007 mA	but no RTC wakeup
    1e88:	f8 01       	movw	r30, r16
    1e8a:	c0 82       	st	Z, r12
	NOP();
    1e8c:	00 00       	nop
	SLEEP();
    1e8e:	88 95       	sleep
}
    1e90:	85 cf       	rjmp	.-246    	; 0x1d9c <main+0x180>

00001e92 <__vector_13>:
***********************************************************************
***********************************************************************/
/***********************************************************************
*  ISR TCB0 Timer for Prox PWM capture
***********************************************************************/
ISR(TCB0_INT_vect){
    1e92:	1f 92       	push	r1
    1e94:	0f 92       	push	r0
    1e96:	0f b6       	in	r0, 0x3f	; 63
    1e98:	0f 92       	push	r0
    1e9a:	11 24       	eor	r1, r1
    1e9c:	8f 93       	push	r24
    1e9e:	9f 93       	push	r25
	short dumb;
		dumb=TCB0_CCMP;
    1ea0:	80 91 4c 0a 	lds	r24, 0x0A4C	; 0x800a4c <__TEXT_REGION_LENGTH__+0x700a4c>
    1ea4:	90 91 4d 0a 	lds	r25, 0x0A4D	; 0x800a4d <__TEXT_REGION_LENGTH__+0x700a4d>
// 		TCB0_INTCTRL = 0x01;//Enable capture interrupt flag
// 		TCB0_EVCTRL = 0x11;//Enable Captu
}
    1ea8:	9f 91       	pop	r25
    1eaa:	8f 91       	pop	r24
    1eac:	0f 90       	pop	r0
    1eae:	0f be       	out	0x3f, r0	; 63
    1eb0:	0f 90       	pop	r0
    1eb2:	1f 90       	pop	r1
    1eb4:	18 95       	reti

00001eb6 <__vector_5>:
/***********************************************************************
*  ISR WAKEUP FROM BIG
***********************************************************************/
ISR(PORTC_PORT_vect){
    1eb6:	1f 92       	push	r1
    1eb8:	0f 92       	push	r0
    1eba:	0f b6       	in	r0, 0x3f	; 63
    1ebc:	0f 92       	push	r0
    1ebe:	11 24       	eor	r1, r1
    1ec0:	2f 93       	push	r18
    1ec2:	3f 93       	push	r19
    1ec4:	4f 93       	push	r20
    1ec6:	5f 93       	push	r21
    1ec8:	6f 93       	push	r22
    1eca:	7f 93       	push	r23
    1ecc:	8f 93       	push	r24
    1ece:	9f 93       	push	r25
    1ed0:	af 93       	push	r26
    1ed2:	bf 93       	push	r27
    1ed4:	ef 93       	push	r30
    1ed6:	ff 93       	push	r31
	DISABLE_INTERRUPTS();
    1ed8:	f8 94       	cli
    1eda:	e1 e5       	ldi	r30, 0x51	; 81
    1edc:	f4 e0       	ldi	r31, 0x04	; 4
    1ede:	80 81       	ld	r24, Z
    1ee0:	88 7f       	andi	r24, 0xF8	; 248
    1ee2:	80 83       	st	Z, r24
	TPC1_set_isc(PORT_ISC_INTDISABLE_gc);//C1=WAKEUP FROM BIG
	PORTC.INTFLAGS |= (1 << 1);
    1ee4:	e0 e4       	ldi	r30, 0x40	; 64
    1ee6:	f4 e0       	ldi	r31, 0x04	; 4
    1ee8:	81 85       	ldd	r24, Z+9	; 0x09
    1eea:	82 60       	ori	r24, 0x02	; 2
    1eec:	81 87       	std	Z+9, r24	; 0x09
	char gotCmd;
	char iters;
	if(mState!=SOLAR_WAIT)gotCmd=getPacketFromBig();
    1eee:	80 91 4e 39 	lds	r24, 0x394E	; 0x80394e <mState>
    1ef2:	88 30       	cpi	r24, 0x08	; 8
    1ef4:	11 f0       	breq	.+4      	; 0x1efa <__vector_5+0x44>
    1ef6:	0e 94 de 0a 	call	0x15bc	; 0x15bc <getPacketFromBig>
	PORTC.INTFLAGS |= (1 << 1);
    1efa:	e0 e4       	ldi	r30, 0x40	; 64
    1efc:	f4 e0       	ldi	r31, 0x04	; 4
    1efe:	81 85       	ldd	r24, Z+9	; 0x09
    1f00:	82 60       	ori	r24, 0x02	; 2
    1f02:	81 87       	std	Z+9, r24	; 0x09
	if(mState==IDLE){
    1f04:	80 91 4e 39 	lds	r24, 0x394E	; 0x80394e <mState>
    1f08:	87 30       	cpi	r24, 0x07	; 7
    1f0a:	31 f4       	brne	.+12     	; 0x1f18 <__vector_5+0x62>
		sleepPins(1);//
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <sleepPins>
		sleepPins(1);//
    1f12:	81 e0       	ldi	r24, 0x01	; 1
    1f14:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <sleepPins>
    1f18:	e1 e5       	ldi	r30, 0x51	; 81
    1f1a:	f4 e0       	ldi	r31, 0x04	; 4
    1f1c:	80 81       	ld	r24, Z
    1f1e:	88 7f       	andi	r24, 0xF8	; 248
    1f20:	85 60       	ori	r24, 0x05	; 5
    1f22:	80 83       	st	Z, r24
	}
	TPC1_set_isc(PORT_ISC_LEVEL_gc);//C1=WAKEUP FROM BIG
	ENABLE_INTERRUPTS();
    1f24:	78 94       	sei
}
    1f26:	ff 91       	pop	r31
    1f28:	ef 91       	pop	r30
    1f2a:	bf 91       	pop	r27
    1f2c:	af 91       	pop	r26
    1f2e:	9f 91       	pop	r25
    1f30:	8f 91       	pop	r24
    1f32:	7f 91       	pop	r23
    1f34:	6f 91       	pop	r22
    1f36:	5f 91       	pop	r21
    1f38:	4f 91       	pop	r20
    1f3a:	3f 91       	pop	r19
    1f3c:	2f 91       	pop	r18
    1f3e:	0f 90       	pop	r0
    1f40:	0f be       	out	0x3f, r0	; 63
    1f42:	0f 90       	pop	r0
    1f44:	1f 90       	pop	r1
    1f46:	18 95       	reti

00001f48 <__vector_27>:
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
    1f48:	1f 92       	push	r1
    1f4a:	0f 92       	push	r0
    1f4c:	0f b6       	in	r0, 0x3f	; 63
    1f4e:	0f 92       	push	r0
    1f50:	11 24       	eor	r1, r1
    1f52:	8f 93       	push	r24
    1f54:	9f 93       	push	r25
    1f56:	ef 93       	push	r30
    1f58:	ff 93       	push	r31
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
    1f5a:	e0 91 4f 39 	lds	r30, 0x394F	; 0x80394f <p_GPSrcvData>
    1f5e:	f0 91 50 39 	lds	r31, 0x3950	; 0x803950 <p_GPSrcvData+0x1>
    1f62:	88 e3       	ldi	r24, 0x38	; 56
    1f64:	e5 3d       	cpi	r30, 0xD5	; 213
    1f66:	f8 07       	cpc	r31, r24
    1f68:	d8 f0       	brcs	.+54     	; 0x1fa0 <__vector_27+0x58>
    1f6a:	84 ed       	ldi	r24, 0xD4	; 212
    1f6c:	98 e3       	ldi	r25, 0x38	; 56
    1f6e:	80 93 4f 39 	sts	0x394F, r24	; 0x80394f <p_GPSrcvData>
    1f72:	90 93 50 39 	sts	0x3950, r25	; 0x803950 <p_GPSrcvData+0x1>
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    1f76:	fc 01       	movw	r30, r24
		*p_GPSrcvData=USART0.RXDATAL;
    1f78:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    1f7c:	80 83       	st	Z, r24
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
    1f7e:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
    1f82:	8a 30       	cpi	r24, 0x0A	; 10
    1f84:	19 f4       	brne	.+6      	; 0x1f8c <__vector_27+0x44>
    1f86:	81 e0       	ldi	r24, 0x01	; 1
    1f88:	80 93 47 39 	sts	0x3947, r24	; 0x803947 <endOfLineFlag>
	p_GPSrcvData++;
    1f8c:	80 91 4f 39 	lds	r24, 0x394F	; 0x80394f <p_GPSrcvData>
    1f90:	90 91 50 39 	lds	r25, 0x3950	; 0x803950 <p_GPSrcvData+0x1>
    1f94:	01 96       	adiw	r24, 0x01	; 1
    1f96:	80 93 4f 39 	sts	0x394F, r24	; 0x80394f <p_GPSrcvData>
    1f9a:	90 93 50 39 	sts	0x3950, r25	; 0x803950 <p_GPSrcvData+0x1>
}
    1f9e:	05 c0       	rjmp	.+10     	; 0x1faa <__vector_27+0x62>
/***********************************************************************
*  ISR USART RX
***********************************************************************/
ISR(USART0_RXC_vect){
	if(p_GPSrcvData>=(g_GPSrcv_buffer+GPS_BUFFER_SIZE))p_GPSrcvData=g_GPSrcv_buffer+GPS_BUFFER_SIZE-1;
	if((p_GPSrcvData>=g_GPSrcv_buffer)&&(p_GPSrcvData<g_GPSrcv_buffer+GPS_BUFFER_SIZE))
    1fa0:	88 e3       	ldi	r24, 0x38	; 56
    1fa2:	ef 31       	cpi	r30, 0x1F	; 31
    1fa4:	f8 07       	cpc	r31, r24
    1fa6:	58 f3       	brcs	.-42     	; 0x1f7e <__vector_27+0x36>
    1fa8:	e7 cf       	rjmp	.-50     	; 0x1f78 <__vector_27+0x30>
		*p_GPSrcvData=USART0.RXDATAL;
		if(USART0.RXDATAL==0x0A)endOfLineFlag=1;
	p_GPSrcvData++;
}
    1faa:	ff 91       	pop	r31
    1fac:	ef 91       	pop	r30
    1fae:	9f 91       	pop	r25
    1fb0:	8f 91       	pop	r24
    1fb2:	0f 90       	pop	r0
    1fb4:	0f be       	out	0x3f, r0	; 63
    1fb6:	0f 90       	pop	r0
    1fb8:	1f 90       	pop	r1
    1fba:	18 95       	reti

00001fbc <__vector_4>:
/***********************************************************************
*  ISR MOTION
***********************************************************************/
ISR(PORTB_PORT_vect){
    1fbc:	1f 92       	push	r1
    1fbe:	0f 92       	push	r0
    1fc0:	0f b6       	in	r0, 0x3f	; 63
    1fc2:	0f 92       	push	r0
    1fc4:	11 24       	eor	r1, r1
    1fc6:	8f 93       	push	r24
    1fc8:	ef 93       	push	r30
    1fca:	ff 93       	push	r31
	// B6 is Motion
	g_gotMotion=1;
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	80 93 1e 38 	sts	0x381E, r24	; 0x80381e <g_gotMotion>
	PORTB.INTFLAGS |= (1 << 6);
    1fd2:	e0 e2       	ldi	r30, 0x20	; 32
    1fd4:	f4 e0       	ldi	r31, 0x04	; 4
    1fd6:	81 85       	ldd	r24, Z+9	; 0x09
    1fd8:	80 64       	ori	r24, 0x40	; 64
    1fda:	81 87       	std	Z+9, r24	; 0x09
 */
static inline void PORTB_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1fdc:	e6 e3       	ldi	r30, 0x36	; 54
    1fde:	f4 e0       	ldi	r31, 0x04	; 4
    1fe0:	80 81       	ld	r24, Z
    1fe2:	88 7f       	andi	r24, 0xF8	; 248
    1fe4:	80 83       	st	Z, r24
	TPB6_set_isc(PORT_ISC_INTDISABLE_gc);
}
    1fe6:	ff 91       	pop	r31
    1fe8:	ef 91       	pop	r30
    1fea:	8f 91       	pop	r24
    1fec:	0f 90       	pop	r0
    1fee:	0f be       	out	0x3f, r0	; 63
    1ff0:	0f 90       	pop	r0
    1ff2:	1f 90       	pop	r1
    1ff4:	18 95       	reti

00001ff6 <__vector_6>:
/***********************************************************************
*  ISR RTC 
***********************************************************************/
ISR(RTC_CNT_vect)
{
    1ff6:	1f 92       	push	r1
    1ff8:	0f 92       	push	r0
    1ffa:	0f b6       	in	r0, 0x3f	; 63
    1ffc:	0f 92       	push	r0
    1ffe:	11 24       	eor	r1, r1
    2000:	2f 93       	push	r18
    2002:	3f 93       	push	r19
    2004:	4f 93       	push	r20
    2006:	5f 93       	push	r21
    2008:	6f 93       	push	r22
    200a:	7f 93       	push	r23
    200c:	8f 93       	push	r24
    200e:	9f 93       	push	r25
    2010:	af 93       	push	r26
    2012:	bf 93       	push	r27
    2014:	ef 93       	push	r30
    2016:	ff 93       	push	r31
	  char returnStr[]={0x0A,0x0D};
	char iters, newProx;
	if(g_motSecCtr>59)g_holdForBigFlag--;
    2018:	80 91 1b 38 	lds	r24, 0x381B	; 0x80381b <g_motSecCtr>
    201c:	8c 33       	cpi	r24, 0x3C	; 60
    201e:	28 f0       	brcs	.+10     	; 0x202a <__vector_6+0x34>
    2020:	90 91 00 38 	lds	r25, 0x3800	; 0x803800 <_edata>
    2024:	91 50       	subi	r25, 0x01	; 1
    2026:	90 93 00 38 	sts	0x3800, r25	; 0x803800 <_edata>
	if((++g_motSecCtr>59)&&(g_holdForBigFlag<5)){
    202a:	8f 5f       	subi	r24, 0xFF	; 255
    202c:	80 93 1b 38 	sts	0x381B, r24	; 0x80381b <g_motSecCtr>
    2030:	8c 33       	cpi	r24, 0x3C	; 60
    2032:	48 f1       	brcs	.+82     	; 0x2086 <__vector_6+0x90>
    2034:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <_edata>
    2038:	85 30       	cpi	r24, 0x05	; 5
    203a:	28 f5       	brcc	.+74     	; 0x2086 <__vector_6+0x90>
		if(g_noMotionFlag)g_baselineProx=getProx();
    203c:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <g_noMotionFlag>
    2040:	81 11       	cpse	r24, r1
    2042:	0e 94 5f 02 	call	0x4be	; 0x4be <getProx>
		//TSHOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO change line below to =58
		g_holdForBigFlag=7;//reset for one minute of holding data before giving up on Big and restarting anyway.
    2046:	87 e0       	ldi	r24, 0x07	; 7
    2048:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <_edata>
		g_noMotionFlag=1;
    204c:	81 e0       	ldi	r24, 0x01	; 1
    204e:	80 93 01 38 	sts	0x3801, r24	; 0x803801 <g_noMotionFlag>
		g_motSecCtr=0;
    2052:	10 92 1b 38 	sts	0x381B, r1	; 0x80381b <g_motSecCtr>
		g_block5index=0;
    2056:	10 92 19 38 	sts	0x3819, r1	; 0x803819 <g_block5index>
		g_motionPatternIndex=0;
    205a:	10 92 17 38 	sts	0x3817, r1	; 0x803817 <g_motionPatternIndex>
		g_motionPatternMask=0x80;
    205e:	80 e8       	ldi	r24, 0x80	; 128
    2060:	80 93 0e 38 	sts	0x380E, r24	; 0x80380e <g_motionPatternMask>
    2064:	ef e0       	ldi	r30, 0x0F	; 15
    2066:	f8 e3       	ldi	r31, 0x38	; 56
    2068:	87 e1       	ldi	r24, 0x17	; 23
    206a:	98 e3       	ldi	r25, 0x38	; 56
		for(iters=0;iters<8;iters++){
			g_motionPattern[iters]=0;
    206c:	11 92       	st	Z+, r1
		g_noMotionFlag=1;
		g_motSecCtr=0;
		g_block5index=0;
		g_motionPatternIndex=0;
		g_motionPatternMask=0x80;
		for(iters=0;iters<8;iters++){
    206e:	e8 17       	cp	r30, r24
    2070:	f9 07       	cpc	r31, r25
    2072:	e1 f7       	brne	.-8      	; 0x206c <__vector_6+0x76>
    2074:	e2 e0       	ldi	r30, 0x02	; 2
    2076:	f8 e3       	ldi	r31, 0x38	; 56
    2078:	8e e0       	ldi	r24, 0x0E	; 14
    207a:	98 e3       	ldi	r25, 0x38	; 56
			g_motionPattern[iters]=0;
		}
		for(iters=0;iters<12;iters++){
			g_proxVals[iters]=0;
    207c:	11 92       	st	Z+, r1
		g_motionPatternIndex=0;
		g_motionPatternMask=0x80;
		for(iters=0;iters<8;iters++){
			g_motionPattern[iters]=0;
		}
		for(iters=0;iters<12;iters++){
    207e:	e8 17       	cp	r30, r24
    2080:	f9 07       	cpc	r31, r25
    2082:	e1 f7       	brne	.-8      	; 0x207c <__vector_6+0x86>
    2084:	23 c0       	rjmp	.+70     	; 0x20cc <__vector_6+0xd6>
			g_proxVals[iters]=0;
		}
		}else{
		g_motionPatternMask>>=1;
    2086:	80 91 0e 38 	lds	r24, 0x380E	; 0x80380e <g_motionPatternMask>
    208a:	86 95       	lsr	r24
		if(g_motionPatternMask==0){
    208c:	19 f0       	breq	.+6      	; 0x2094 <__vector_6+0x9e>
		}
		for(iters=0;iters<12;iters++){
			g_proxVals[iters]=0;
		}
		}else{
		g_motionPatternMask>>=1;
    208e:	80 93 0e 38 	sts	0x380E, r24	; 0x80380e <g_motionPatternMask>
    2092:	0d c0       	rjmp	.+26     	; 0x20ae <__vector_6+0xb8>
		if(g_motionPatternMask==0){
			g_motionPatternMask=0x80;
    2094:	80 e8       	ldi	r24, 0x80	; 128
    2096:	80 93 0e 38 	sts	0x380E, r24	; 0x80380e <g_motionPatternMask>
			if(++g_motionPatternIndex>7)g_motionPatternIndex=0;
    209a:	80 91 17 38 	lds	r24, 0x3817	; 0x803817 <g_motionPatternIndex>
    209e:	8f 5f       	subi	r24, 0xFF	; 255
    20a0:	88 30       	cpi	r24, 0x08	; 8
    20a2:	18 f4       	brcc	.+6      	; 0x20aa <__vector_6+0xb4>
    20a4:	80 93 17 38 	sts	0x3817, r24	; 0x803817 <g_motionPatternIndex>
    20a8:	02 c0       	rjmp	.+4      	; 0x20ae <__vector_6+0xb8>
    20aa:	10 92 17 38 	sts	0x3817, r1	; 0x803817 <g_motionPatternIndex>
		}
		if(++g_5secCtr>4){
    20ae:	80 91 1a 38 	lds	r24, 0x381A	; 0x80381a <g_5secCtr>
    20b2:	8f 5f       	subi	r24, 0xFF	; 255
    20b4:	85 30       	cpi	r24, 0x05	; 5
    20b6:	18 f4       	brcc	.+6      	; 0x20be <__vector_6+0xc8>
    20b8:	80 93 1a 38 	sts	0x381A, r24	; 0x80381a <g_5secCtr>
    20bc:	07 c0       	rjmp	.+14     	; 0x20cc <__vector_6+0xd6>
			g_5secCtr=0;
    20be:	10 92 1a 38 	sts	0x381A, r1	; 0x80381a <g_5secCtr>
			g_block5index++;
    20c2:	80 91 19 38 	lds	r24, 0x3819	; 0x803819 <g_block5index>
    20c6:	8f 5f       	subi	r24, 0xFF	; 255
    20c8:	80 93 19 38 	sts	0x3819, r24	; 0x803819 <g_block5index>
		}
	}//end of >59
			
	if(g_gotMotion){
    20cc:	80 91 1e 38 	lds	r24, 0x381E	; 0x80381e <g_gotMotion>
    20d0:	88 23       	and	r24, r24
    20d2:	01 f1       	breq	.+64     	; 0x2114 <__vector_6+0x11e>
		g_noMotionFlag=0;
    20d4:	10 92 01 38 	sts	0x3801, r1	; 0x803801 <g_noMotionFlag>
		g_motionMinTotal++;
    20d8:	80 91 18 38 	lds	r24, 0x3818	; 0x803818 <g_motionMinTotal>
    20dc:	8f 5f       	subi	r24, 0xFF	; 255
    20de:	80 93 18 38 	sts	0x3818, r24	; 0x803818 <g_motionMinTotal>
		g_motionPattern[g_motionPatternIndex]|=g_motionPatternMask;
    20e2:	e0 91 17 38 	lds	r30, 0x3817	; 0x803817 <g_motionPatternIndex>
    20e6:	f0 e0       	ldi	r31, 0x00	; 0
    20e8:	e1 5f       	subi	r30, 0xF1	; 241
    20ea:	f7 4c       	sbci	r31, 0xC7	; 199
    20ec:	90 81       	ld	r25, Z
    20ee:	80 91 0e 38 	lds	r24, 0x380E	; 0x80380e <g_motionPatternMask>
    20f2:	89 2b       	or	r24, r25
    20f4:	80 83       	st	Z, r24
		newProx=getProx();
    20f6:	0e 94 5f 02 	call	0x4be	; 0x4be <getProx>
		if(newProx>g_proxVals[g_block5index])g_proxVals[g_block5index]=newProx;
    20fa:	20 91 19 38 	lds	r18, 0x3819	; 0x803819 <g_block5index>
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	f9 01       	movw	r30, r18
    2102:	ee 5f       	subi	r30, 0xFE	; 254
    2104:	f7 4c       	sbci	r31, 0xC7	; 199
    2106:	90 81       	ld	r25, Z
    2108:	98 17       	cp	r25, r24
    210a:	20 f4       	brcc	.+8      	; 0x2114 <__vector_6+0x11e>
    210c:	f9 01       	movw	r30, r18
    210e:	ee 5f       	subi	r30, 0xFE	; 254
    2110:	f7 4c       	sbci	r31, 0xC7	; 199
    2112:	80 83       	st	Z, r24
	}
			#ifdef DO_DIAGS
			USART_0_initialization();
    2114:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>
			LCDshort(g_motSecCtr,2);
    2118:	80 91 1b 38 	lds	r24, 0x381B	; 0x80381b <g_motSecCtr>
    211c:	62 e0       	ldi	r22, 0x02	; 2
    211e:	90 e0       	ldi	r25, 0x00	; 0
    2120:	0e 94 a3 03 	call	0x746	; 0x746 <LCDshort>
//			LCDspace();
			if(g_gotMotion) usart_put_string("X",1);
    2124:	80 91 1e 38 	lds	r24, 0x381E	; 0x80381e <g_gotMotion>
    2128:	88 23       	and	r24, r24
    212a:	31 f0       	breq	.+12     	; 0x2138 <__vector_6+0x142>
    212c:	61 e0       	ldi	r22, 0x01	; 1
    212e:	8f e6       	ldi	r24, 0x6F	; 111
    2130:	93 ea       	ldi	r25, 0xA3	; 163
    2132:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
    2136:	05 c0       	rjmp	.+10     	; 0x2142 <__vector_6+0x14c>
			else usart_put_string(".",1);
    2138:	61 e0       	ldi	r22, 0x01	; 1
    213a:	81 e7       	ldi	r24, 0x71	; 113
    213c:	93 ea       	ldi	r25, 0xA3	; 163
    213e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <usart_put_string>
// 			LCDspace();LCDshort(g_proxVals[11],2);
// 			LCDspace();LCDspace();
// 			LCDshort(g_holdForBigFlag,2);
			
//			usart_put_string(returnStr,2);
			delay_ms(5);
    2142:	65 e0       	ldi	r22, 0x05	; 5
    2144:	70 e0       	ldi	r23, 0x00	; 0
    2146:	80 e0       	ldi	r24, 0x00	; 0
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	0e 94 48 02 	call	0x490	; 0x490 <delay_ms>
			#endif
			
	/* Overflow interrupt flag has to be cleared manually */
		g_gotMotion=0;
    214e:	10 92 1e 38 	sts	0x381E, r1	; 0x80381e <g_gotMotion>
	RTC.INTFLAGS = RTC_OVF_bm;
    2152:	81 e0       	ldi	r24, 0x01	; 1
    2154:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x700143>
    2158:	e6 e3       	ldi	r30, 0x36	; 54
    215a:	f4 e0       	ldi	r31, 0x04	; 4
    215c:	80 81       	ld	r24, Z
    215e:	88 7f       	andi	r24, 0xF8	; 248
    2160:	82 60       	ori	r24, 0x02	; 2
    2162:	80 83       	st	Z, r24
	TPB6_set_isc(PORT_ISC_RISING_gc);
}
    2164:	ff 91       	pop	r31
    2166:	ef 91       	pop	r30
    2168:	bf 91       	pop	r27
    216a:	af 91       	pop	r26
    216c:	9f 91       	pop	r25
    216e:	8f 91       	pop	r24
    2170:	7f 91       	pop	r23
    2172:	6f 91       	pop	r22
    2174:	5f 91       	pop	r21
    2176:	4f 91       	pop	r20
    2178:	3f 91       	pop	r19
    217a:	2f 91       	pop	r18
    217c:	0f 90       	pop	r0
    217e:	0f be       	out	0x3f, r0	; 63
    2180:	0f 90       	pop	r0
    2182:	1f 90       	pop	r1
    2184:	18 95       	reti

00002186 <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    2186:	80 e0       	ldi	r24, 0x00	; 0
    2188:	08 95       	ret

0000218a <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    218a:	42 e0       	ldi	r20, 0x02	; 2
    218c:	68 ed       	ldi	r22, 0xD8	; 216
    218e:	88 e7       	ldi	r24, 0x78	; 120
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	0e 94 08 11 	call	0x2210	; 0x2210 <protected_write_io>
    2196:	40 e0       	ldi	r20, 0x00	; 0
    2198:	68 ed       	ldi	r22, 0xD8	; 216
    219a:	80 e7       	ldi	r24, 0x70	; 112
    219c:	90 e0       	ldi	r25, 0x00	; 0
    219e:	0e 94 08 11 	call	0x2210	; 0x2210 <protected_write_io>
    21a2:	40 e0       	ldi	r20, 0x00	; 0
    21a4:	68 ed       	ldi	r22, 0xD8	; 216
    21a6:	80 e6       	ldi	r24, 0x60	; 96
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	0e 94 08 11 	call	0x2210	; 0x2210 <protected_write_io>
	 //ccp_write_io((void*)&(CLKCTRL.OSC20MCTRLA),1 << CLKCTRL_RUNSTDBY_bp /* Run standby: ENabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    21ae:	80 e0       	ldi	r24, 0x00	; 0
    21b0:	08 95       	ret

000021b2 <CPUINT_init>:
	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

//	ENABLE_INTERRUPTS();

	return 0;
}
    21b2:	80 e0       	ldi	r24, 0x00	; 0
    21b4:	08 95       	ret

000021b6 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    21b6:	e0 e1       	ldi	r30, 0x10	; 16
    21b8:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    21ba:	80 81       	ld	r24, Z
    21bc:	88 60       	ori	r24, 0x08	; 8
    21be:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    21c0:	e8 31       	cpi	r30, 0x18	; 24
    21c2:	84 e0       	ldi	r24, 0x04	; 4
    21c4:	f8 07       	cpc	r31, r24
    21c6:	c9 f7       	brne	.-14     	; 0x21ba <mcu_init+0x4>
    21c8:	e0 e3       	ldi	r30, 0x30	; 48
    21ca:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    21cc:	80 81       	ld	r24, Z
    21ce:	88 60       	ori	r24, 0x08	; 8
    21d0:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    21d2:	e8 33       	cpi	r30, 0x38	; 56
    21d4:	84 e0       	ldi	r24, 0x04	; 4
    21d6:	f8 07       	cpc	r31, r24
    21d8:	c9 f7       	brne	.-14     	; 0x21cc <mcu_init+0x16>
	}

//	for (uint8_t i = 0; i < 8; i++) {
//		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
//	}
}
    21da:	08 95       	ret

000021dc <USART_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    21dc:	23 98       	cbi	0x04, 3	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    21de:	e3 e3       	ldi	r30, 0x33	; 51
    21e0:	f4 e0       	ldi	r31, 0x04	; 4
    21e2:	80 81       	ld	r24, Z
    21e4:	87 7f       	andi	r24, 0xF7	; 247
    21e6:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    21e8:	22 9a       	sbi	0x04, 2	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    21ea:	2a 98       	cbi	0x05, 2	; 5
	// <id> pad_initial_level
	// <false"> Low
	// <true"> High
	0);

	USART_0_init();
    21ec:	0e 94 21 11 	call	0x2242	; 0x2242 <USART_0_init>
    21f0:	08 95       	ret

000021f2 <system_init>:
}
void system_init()
{
	mcu_init();
    21f2:	0e 94 db 10 	call	0x21b6	; 0x21b6 <mcu_init>

	/* PORT setting on PB4 */

	CLKCTRL_init();
    21f6:	0e 94 c5 10 	call	0x218a	; 0x218a <CLKCTRL_init>

	RTC_0_init();
    21fa:	0e 94 0c 11 	call	0x2218	; 0x2218 <RTC_0_init>

//	ADC_0_initialization();

	USART_0_initialization();
    21fe:	0e 94 ee 10 	call	0x21dc	; 0x21dc <USART_0_initialization>

	CPUINT_init();
    2202:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <CPUINT_init>

	SLPCTRL_init();
    2206:	0e 94 1f 11 	call	0x223e	; 0x223e <SLPCTRL_init>

	BOD_init();
    220a:	0e 94 c3 10 	call	0x2186	; 0x2186 <BOD_init>
    220e:	08 95       	ret

00002210 <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
    2210:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    2212:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    2214:	40 83       	st	Z, r20
	ret                             // Return to caller
    2216:	08 95       	ret

00002218 <RTC_0_init>:
 * \brief Initialize RTC interface
 */
int8_t RTC_0_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
    2218:	e0 e4       	ldi	r30, 0x40	; 64
    221a:	f1 e0       	ldi	r31, 0x01	; 1
    221c:	81 81       	ldd	r24, Z+1	; 0x01
    221e:	81 11       	cpse	r24, r1
    2220:	fd cf       	rjmp	.-6      	; 0x221c <RTC_0_init+0x4>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV32_gc  /* 32 */
    2222:	e0 e4       	ldi	r30, 0x40	; 64
    2224:	f1 e0       	ldi	r31, 0x01	; 1
    2226:	89 ea       	ldi	r24, 0xA9	; 169
    2228:	80 83       	st	Z, r24
	            | 1 << RTC_RTCEN_bp     /* Enable: enabled */
	            | 1 << RTC_RUNSTDBY_bp; /* Run In Standby: disabled */

	RTC.PER = 0x3e8; /* Period: 0x1f4 */
    222a:	88 ee       	ldi	r24, 0xE8	; 232
    222c:	93 e0       	ldi	r25, 0x03	; 3
    222e:	82 87       	std	Z+10, r24	; 0x0a
    2230:	93 87       	std	Z+11, r25	; 0x0b

	// RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 0 << RTC_CMP_bp    /* Compare Match Interrupt enable: disabled */
    2232:	81 e0       	ldi	r24, 0x01	; 1
    2234:	82 83       	std	Z+2, r24	; 0x02
	              | 1 << RTC_OVF_bp; /* Overflow Interrupt enable: enabled */

	RTC.PITCTRLA = RTC_PERIOD_OFF_gc /* Off */
    2236:	10 8a       	std	Z+16, r1	; 0x10
			 | 0 << RTC_PITEN_bp; /* Enable: disabled */

	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */
    2238:	12 8a       	std	Z+18, r1	; 0x12

	return 0;
}
    223a:	80 e0       	ldi	r24, 0x00	; 0
    223c:	08 95       	ret

0000223e <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    223e:	80 e0       	ldi	r24, 0x00	; 0
    2240:	08 95       	ret

00002242 <USART_0_init>:
 * \brief Initialize usart interface
 */
int8_t USART_0_init()
{

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600); /* set baud rate register */
    2242:	e0 e0       	ldi	r30, 0x00	; 0
    2244:	f8 e0       	ldi	r31, 0x08	; 8
    2246:	8c e6       	ldi	r24, 0x6C	; 108
    2248:	95 e0       	ldi	r25, 0x05	; 5
    224a:	80 87       	std	Z+8, r24	; 0x08
    224c:	91 87       	std	Z+9, r25	; 0x09

	 USART0.CTRLA = 0 << USART_ABEIE_bp /* Auto-baud Error Interrupt Enable: disabled */
    224e:	80 e8       	ldi	r24, 0x80	; 128
    2250:	85 83       	std	Z+5, r24	; 0x05
			 | USART_RS485_OFF_gc /* RS485 Mode disabled */
			 | 1 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: enabled */
			 | 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
			 | 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */
		
	USART0.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
    2252:	80 ec       	ldi	r24, 0xC0	; 192
    2254:	86 83       	std	Z+6, r24	; 0x06
	// USART0.RXPLCTRL = 0x0 << USART_RXPL_gp; /* Receiver Pulse Lenght: 0x0 */

	// USART0.TXPLCTRL = 0x0 << USART_TXPL_gp; /* Transmit pulse length: 0x0 */

	return 0;
}
    2256:	80 e0       	ldi	r24, 0x00	; 0
    2258:	08 95       	ret

0000225a <__tablejump2__>:
    225a:	ee 0f       	add	r30, r30
    225c:	ff 1f       	adc	r31, r31
    225e:	05 90       	lpm	r0, Z+
    2260:	f4 91       	lpm	r31, Z
    2262:	e0 2d       	mov	r30, r0
    2264:	09 94       	ijmp

00002266 <ccp_write_io>:
    2266:	dc 01       	movw	r26, r24
    2268:	28 ed       	ldi	r18, 0xD8	; 216
    226a:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x700034>
    226e:	6c 93       	st	X, r22
    2270:	08 95       	ret

00002272 <_exit>:
    2272:	f8 94       	cli

00002274 <__stop_program>:
    2274:	ff cf       	rjmp	.-2      	; 0x2274 <__stop_program>
